{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/image2018-12-4_13-23-29.png","path":"images/image2018-12-4_13-23-29.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_13-24-12-2.png","path":"images/image2018-12-4_13-24-12-2.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_13-30-47-3.png","path":"images/image2018-12-4_13-30-47-3.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_13-45-12-4.png","path":"images/image2018-12-4_13-45-12-4.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_13-46-6-5.png","path":"images/image2018-12-4_13-46-6-5.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_14-10-10-7.png","path":"images/image2018-12-4_14-10-10-7.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"source/images/image2018-12-4_14-8-16-8.png","path":"images/image2018-12-4_14-8-16-8.png","modified":1,"renderable":0},{"_id":"source/images/image2018-12-4_14-7-13-6.png","path":"images/image2018-12-4_14-7-13-6.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/pdf/MongoDB.pdf","path":"pdf/MongoDB.pdf","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"f232c40cdffed62dc65358ee65cd1c10ad1ee01c","modified":1554256192272},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1554099835014},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1554099835014},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1554099835015},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1554099835016},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1554099835016},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1554099835022},{"_id":"source/_posts/DNS-Domain-Name-System-域名系统.md","hash":"773146cfbdcf71595d04d0f8c72cf2a16130f8a1","modified":1545120018623},{"_id":"source/_posts/Linux系统命令.md","hash":"f2d48e40fe668b2f959cde779ace11b76bdd5447","modified":1545120018623},{"_id":"source/_posts/MongoDB权威指南中文版.md","hash":"3da5b732ffce735f9c1a96e1a6856ca0a6b37288","modified":1545120018623},{"_id":"source/_posts/SQLSTATE-HY000-2054-The-server-requested.md","hash":"ed5e5b42c73b3c08ce18eaacbedee9e8499d98be","modified":1545621036177},{"_id":"source/_posts/TCP抓包-tcpflow.md","hash":"4fe1a8045b3121cbdeb53407e42024994b6238f7","modified":1545120018624},{"_id":"source/_posts/git常用命令.md","hash":"41c800977d2b45042e486bda9b11e7716e07af7c","modified":1545120018624},{"_id":"source/_posts/linux用户管理.md","hash":"9d74b84560a8075d18515f5b63e89e4445ed3eb2","modified":1545120018624},{"_id":"source/_posts/vi文件编辑器使用.md","hash":"04e8ac06362e489d327d385c87f3d806eaf631e4","modified":1545120018625},{"_id":"source/_posts/使用phpunit进行单元测试.md","hash":"29bc3303661468da3c03c3c5c5cab6d2ac3bcb76","modified":1545120018625},{"_id":"source/_posts/使用var关键字.md","hash":"3f6649f9f0b3e3f35fe5f895dc0ff47b3be10d40","modified":1545120018625},{"_id":"source/_posts/内建变量类型.md","hash":"4d73031eb529a266bfa1876340d5f669031a0b8f","modified":1545120018626},{"_id":"source/_posts/全局监控-dstat.md","hash":"04e3641f14dc18448e0cd42e8081c3cc6b1c7388","modified":1545120018626},{"_id":"source/_posts/周期性计划任务于网络配置.md","hash":"55506489df1e93a7ffb7be067523b194337a408f","modified":1545120018626},{"_id":"source/_posts/常量定义和枚举类型.md","hash":"9744f5affea1f1542a3de607a4b02f2f702bd8c2","modified":1545120018626},{"_id":"source/_posts/强制类型转换.md","hash":"e166bebdc56050c3f168f84b3e97b0a1512abfa1","modified":1545120018626},{"_id":"source/_posts/文件权限.md","hash":"9a6b02df983d85c1cdabcbd7db4d4f43943e44cc","modified":1545120018627},{"_id":"source/_posts/文件查找-解压缩.md","hash":"12bea5d7dd382bd6af7c9418f4ded641d9b2ba02","modified":1545120018627},{"_id":"source/_posts/文件隐藏属性.md","hash":"6aaa07c5ca5714ecdbaac2e2a08349d4c0886707","modified":1545120018627},{"_id":"source/_posts/条件语句.md","hash":"37b4a9aec76360b8d56e19ba5d087b9e4f2ae8ff","modified":1545120018628},{"_id":"source/_posts/流量监控-iftop.md","hash":"6aa07a5255cc27c29a0b2334024b8bb2285db092","modified":1545120018628},{"_id":"source/_posts/磁盘管理.md","hash":"21cf74959e08e038a60b45453ac90698466261e8","modified":1545120018628},{"_id":"source/_posts/磁盘阵列RAID.md","hash":"4545b19cbd0731110040468f77b18b638a0766de","modified":1545120018628},{"_id":"source/_posts/网络yum源搭建.md","hash":"7533f0c06760feb9563a61fe19a8f168f1272034","modified":1545120018629},{"_id":"source/_posts/辅助DNS服务器搭建.md","hash":"9e91cba843cab7e07379c699c564e67fea4f9142","modified":1545120018629},{"_id":"source/_posts/进程管理-计划任务.md","hash":"fb922c7e85cf5d59122141de95f2c50f4c071add","modified":1545120018629},{"_id":"source/about/index.md","hash":"188bb5b4d0ab1f90d6f30bd074e93c3103563cb3","modified":1545120018630},{"_id":"source/categories/index.md","hash":"d466d3babb28e2ee3639abbbaa5e2f235f28ae2d","modified":1545120018630},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1554099835016},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1554099835016},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1554099835016},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1554099835016},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1554099835016},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1554099835016},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1554099835017},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1554099835017},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1554099835017},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1554099835017},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1554099835017},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1554099835017},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1554099835021},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1554099835021},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1554099835021},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1554099835021},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1554099835022},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1554099835022},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1554099835022},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1554099835023},{"_id":"source/images/image2018-12-4_13-23-29.png","hash":"25de27c9fadf037a33197a155b0f397eb31ac5c0","modified":1545120018631},{"_id":"source/images/image2018-12-4_13-24-12-2.png","hash":"da0d858fd976e9490bbf02babfdfaf1f402387d6","modified":1545120018631},{"_id":"source/images/image2018-12-4_13-30-47-3.png","hash":"58d8b9123f55a4f7d542b03d0aef4d3e68c0b759","modified":1545120018632},{"_id":"source/images/image2018-12-4_13-45-12-4.png","hash":"7571b43d5256586914175cba4ca85e7433652c78","modified":1545120018633},{"_id":"source/images/image2018-12-4_13-46-6-5.png","hash":"214d8fce65bf4c6e4645fd761519929c6db8a714","modified":1545120018634},{"_id":"source/images/image2018-12-4_14-10-10-7.png","hash":"1116609abfec80ce424b90ca6b0fb0dba2715e8e","modified":1545120018635},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1554099835018},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1554099835020},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1554099835020},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1554099835020},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1554099835020},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1554099835020},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1554099835020},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1554099835023},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1554099835025},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1554099835032},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1554099835032},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1554099835032},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1554099835032},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1554099835033},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1554099835033},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1554099835033},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1554099835034},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1554099835035},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1554099835035},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1554099835036},{"_id":"source/images/image2018-12-4_14-8-16-8.png","hash":"06610942f5d20e2508fa52fd1ee3101baf415aaf","modified":1545120018637},{"_id":"source/images/image2018-12-4_14-7-13-6.png","hash":"8e2ff48e9db476c60759d49f491b7512e9a747c8","modified":1545120018636},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1554099835019},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1554099835019},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1554099835023},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1554099835023},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1554099835024},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1554099835025},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1554099835025},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1554099835025},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1554099835025},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1554099835026},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1554099835029},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1554099835033},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1554099835033},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1554099835034},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1554099835034},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1554099835034},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1554099835034},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1554099835029},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1554099835026},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1554099835031},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1554099835028},{"_id":"source/pdf/MongoDB.pdf","hash":"b7fea66c6e945343875c64513359060804ef0be2","modified":1545120018652}],"Category":[{"name":"linux","_id":"cju0k3esx0004yes62xzktwkc"},{"name":"mongodb","_id":"cju0k3et9000eyes6gnl0q4uw"},{"name":"php","_id":"cju0k3etd000myes6tk3ua1c1"},{"name":"服务器","_id":"cju0k3etg000tyes6ggp7icut"},{"name":"工具","_id":"cju0k3eti000zyes6a1hllrno"},{"name":"go","_id":"cju0k3etm0017yes662hdmery"}],"Data":[],"Page":[{"title":"about","date":"2018-11-26T03:47:07.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-11-26 11:47:07\n---\n","updated":"2018-12-18T08:00:18.630Z","path":"about/index.html","comments":1,"layout":"page","_id":"cju0k3esu0001yes6dzqw6lmh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-11-26T06:02:44.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-11-26 14:02:44\n---\n","updated":"2018-12-18T08:00:18.630Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cju0k3esw0003yes6p4unens2","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"DNS (Domain Name System)域名系统","originContent":"","toc":true,"date":"2018-12-12T08:39:30.000Z","_content":"\n#### 1.DNS服务的功能\n   1.1 把主机名解析到IP地址  正向解析\n   1.2 把IP地址解析到主机名  反向解析\n   \n#### 2.DNS域名空间树形接口\n                          .（根域）13台根域服务器\n\t\t\t\t\t\t  |\n\t org     net   edu  gov   mil   hk   com   cn     顶级域\n                                          |\n                                 baidu   163   jd     二级域\n                                          |\n                                    ftp  www mail \t 三级域\n\n\tcom   商业机构\n\tgov   政府部门\n\tint   国际组织\n\tmil   军事部门\n\tnet   网络服务组织\n\torg   其他组织\n\tedu   教育机构\n\n#### 3. 安装提供服务的软件包\n\t[root@localhost ~]# rpm -qa | grep bind  \n\typbind-1.19-12.el5_6.1\n\tbind-devel-9.3.6-20.P1.el5\n\tbind-libs-9.3.6-20.P1.el5\n\tbind-utils-9.3.6-20.P1.el5\n\tbind-9.3.6-20.P1.el5\n\tbind-chroot-9.3.6-20.P1.el5\t\t\t\n\n   安装bind后并不生成/etc/named.conf文件。\n   在red hat enterprise linux 5中，bind程序的默认虚拟目录是/var/named/chroot.\n   对虚拟目录而言，/etc/named.conf实际上是/var/named/chroot/etc/named.conf.\n   \n #### 4. DNS的启动、停止、测试\n    #service named start\n\t#service named stop\n\t#service named restart\n\t在bind中还提供了一个专门用于远程配置DNS守护进程的命令rndc,\n\tr代表remote,使用rndc可以执行启动、停止、重载和转储等操作\n\t#rndc  stop  //停止DNS服务\n\t#rndc status  //查看named进程的配置情况\n\t\n#### 5. 测试DNS服务器\n   5.1 nslookup\n      #nslookup\n\t  >192.168.0.l2\n   5.2 host\n      #host  www.subasafly.com\n\t  #host  www.subasafly.com.zone\n\t  #host  192.168.0.12\n   5.3 dig\n     #dig www.subasafly.com.zone\n   5.4 ping\n      #ping www.subasafly.com.zone\n\t  \n#### 6. DNS服务器配置\n```language\n[root@localhost ~]# rndc-confgen\n# Start of rndc.conf\nkey \"rndckey\" {\n        algorithm hmac-md5;\n        secret \"Y3lkWdmcSEaTWbicn1loDQ==\";\n};\n\noptions {\n        default-key \"rndckey\";\n        default-server 127.0.0.1;\n        default-port 953;\n};\n# End of rndc.conf\n\n# Use with the following in named.conf, adjusting the allow list as needed:\n# key \"rndckey\" {\n#       algorithm hmac-md5;\n#       secret \"Y3lkWdmcSEaTWbicn1loDQ==\";\n# };\n# \n# controls {\n#       inet 127.0.0.1 port 953\n#               allow { 127.0.0.1; } keys { \"rndckey\"; };\n# };\n# End of named.conf\n```\n","source":"_posts/DNS-Domain-Name-System-域名系统.md","raw":"---\ntitle: DNS (Domain Name System)域名系统\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:39:30\n---\n\n#### 1.DNS服务的功能\n   1.1 把主机名解析到IP地址  正向解析\n   1.2 把IP地址解析到主机名  反向解析\n   \n#### 2.DNS域名空间树形接口\n                          .（根域）13台根域服务器\n\t\t\t\t\t\t  |\n\t org     net   edu  gov   mil   hk   com   cn     顶级域\n                                          |\n                                 baidu   163   jd     二级域\n                                          |\n                                    ftp  www mail \t 三级域\n\n\tcom   商业机构\n\tgov   政府部门\n\tint   国际组织\n\tmil   军事部门\n\tnet   网络服务组织\n\torg   其他组织\n\tedu   教育机构\n\n#### 3. 安装提供服务的软件包\n\t[root@localhost ~]# rpm -qa | grep bind  \n\typbind-1.19-12.el5_6.1\n\tbind-devel-9.3.6-20.P1.el5\n\tbind-libs-9.3.6-20.P1.el5\n\tbind-utils-9.3.6-20.P1.el5\n\tbind-9.3.6-20.P1.el5\n\tbind-chroot-9.3.6-20.P1.el5\t\t\t\n\n   安装bind后并不生成/etc/named.conf文件。\n   在red hat enterprise linux 5中，bind程序的默认虚拟目录是/var/named/chroot.\n   对虚拟目录而言，/etc/named.conf实际上是/var/named/chroot/etc/named.conf.\n   \n #### 4. DNS的启动、停止、测试\n    #service named start\n\t#service named stop\n\t#service named restart\n\t在bind中还提供了一个专门用于远程配置DNS守护进程的命令rndc,\n\tr代表remote,使用rndc可以执行启动、停止、重载和转储等操作\n\t#rndc  stop  //停止DNS服务\n\t#rndc status  //查看named进程的配置情况\n\t\n#### 5. 测试DNS服务器\n   5.1 nslookup\n      #nslookup\n\t  >192.168.0.l2\n   5.2 host\n      #host  www.subasafly.com\n\t  #host  www.subasafly.com.zone\n\t  #host  192.168.0.12\n   5.3 dig\n     #dig www.subasafly.com.zone\n   5.4 ping\n      #ping www.subasafly.com.zone\n\t  \n#### 6. DNS服务器配置\n```language\n[root@localhost ~]# rndc-confgen\n# Start of rndc.conf\nkey \"rndckey\" {\n        algorithm hmac-md5;\n        secret \"Y3lkWdmcSEaTWbicn1loDQ==\";\n};\n\noptions {\n        default-key \"rndckey\";\n        default-server 127.0.0.1;\n        default-port 953;\n};\n# End of rndc.conf\n\n# Use with the following in named.conf, adjusting the allow list as needed:\n# key \"rndckey\" {\n#       algorithm hmac-md5;\n#       secret \"Y3lkWdmcSEaTWbicn1loDQ==\";\n# };\n# \n# controls {\n#       inet 127.0.0.1 port 953\n#               allow { 127.0.0.1; } keys { \"rndckey\"; };\n# };\n# End of named.conf\n```\n","slug":"DNS-Domain-Name-System-域名系统","published":1,"updated":"2018-12-18T08:00:18.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eso0000yes6e0s8wxm7","content":"<h4 id=\"1-DNS服务的功能\"><a href=\"#1-DNS服务的功能\" class=\"headerlink\" title=\"1.DNS服务的功能\"></a>1.DNS服务的功能</h4><p>   1.1 把主机名解析到IP地址  正向解析<br>   1.2 把IP地址解析到主机名  反向解析</p>\n<h4 id=\"2-DNS域名空间树形接口\"><a href=\"#2-DNS域名空间树形接口\" class=\"headerlink\" title=\"2.DNS域名空间树形接口\"></a>2.DNS域名空间树形接口</h4><pre><code>                      .（根域）13台根域服务器\n                      |\n org     net   edu  gov   mil   hk   com   cn     顶级域\n                                      |\n                             baidu   163   jd     二级域\n                                      |\n                                ftp  www mail      三级域\n\ncom   商业机构\ngov   政府部门\nint   国际组织\nmil   军事部门\nnet   网络服务组织\norg   其他组织\nedu   教育机构\n</code></pre><h4 id=\"3-安装提供服务的软件包\"><a href=\"#3-安装提供服务的软件包\" class=\"headerlink\" title=\"3. 安装提供服务的软件包\"></a>3. 安装提供服务的软件包</h4><pre><code>[root@localhost ~]# rpm -qa | grep bind  \nypbind-1.19-12.el5_6.1\nbind-devel-9.3.6-20.P1.el5\nbind-libs-9.3.6-20.P1.el5\nbind-utils-9.3.6-20.P1.el5\nbind-9.3.6-20.P1.el5\nbind-chroot-9.3.6-20.P1.el5            \n</code></pre><p>   安装bind后并不生成/etc/named.conf文件。<br>   在red hat enterprise linux 5中，bind程序的默认虚拟目录是/var/named/chroot.<br>   对虚拟目录而言，/etc/named.conf实际上是/var/named/chroot/etc/named.conf.</p>\n<h4 id=\"4-DNS的启动、停止、测试\"><a href=\"#4-DNS的启动、停止、测试\" class=\"headerlink\" title=\"4. DNS的启动、停止、测试\"></a>4. DNS的启动、停止、测试</h4><pre><code>#service named start\n#service named stop\n#service named restart\n在bind中还提供了一个专门用于远程配置DNS守护进程的命令rndc,\nr代表remote,使用rndc可以执行启动、停止、重载和转储等操作\n#rndc  stop  //停止DNS服务\n#rndc status  //查看named进程的配置情况\n</code></pre><h4 id=\"5-测试DNS服务器\"><a href=\"#5-测试DNS服务器\" class=\"headerlink\" title=\"5. 测试DNS服务器\"></a>5. 测试DNS服务器</h4><p>   5.1 nslookup</p>\n<pre><code>#nslookup\n&gt;192.168.0.l2\n</code></pre><p>   5.2 host</p>\n<pre><code>#host  www.subasafly.com\n#host  www.subasafly.com.zone\n#host  192.168.0.12\n</code></pre><p>   5.3 dig</p>\n<pre><code>#dig www.subasafly.com.zone\n</code></pre><p>   5.4 ping</p>\n<pre><code>#ping www.subasafly.com.zone\n</code></pre><h4 id=\"6-DNS服务器配置\"><a href=\"#6-DNS服务器配置\" class=\"headerlink\" title=\"6. DNS服务器配置\"></a>6. DNS服务器配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# rndc-confgen</span><br><span class=\"line\"># Start of rndc.conf</span><br><span class=\"line\">key &quot;rndckey&quot; &#123;</span><br><span class=\"line\">        algorithm hmac-md5;</span><br><span class=\"line\">        secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">        default-key &quot;rndckey&quot;;</span><br><span class=\"line\">        default-server 127.0.0.1;</span><br><span class=\"line\">        default-port 953;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"># End of rndc.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Use with the following in named.conf, adjusting the allow list as needed:</span><br><span class=\"line\"># key &quot;rndckey&quot; &#123;</span><br><span class=\"line\">#       algorithm hmac-md5;</span><br><span class=\"line\">#       secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;</span><br><span class=\"line\"># &#125;;</span><br><span class=\"line\"># </span><br><span class=\"line\"># controls &#123;</span><br><span class=\"line\">#       inet 127.0.0.1 port 953</span><br><span class=\"line\">#               allow &#123; 127.0.0.1; &#125; keys &#123; &quot;rndckey&quot;; &#125;;</span><br><span class=\"line\"># &#125;;</span><br><span class=\"line\"># End of named.conf</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-DNS服务的功能\"><a href=\"#1-DNS服务的功能\" class=\"headerlink\" title=\"1.DNS服务的功能\"></a>1.DNS服务的功能</h4><p>   1.1 把主机名解析到IP地址  正向解析<br>   1.2 把IP地址解析到主机名  反向解析</p>\n<h4 id=\"2-DNS域名空间树形接口\"><a href=\"#2-DNS域名空间树形接口\" class=\"headerlink\" title=\"2.DNS域名空间树形接口\"></a>2.DNS域名空间树形接口</h4><pre><code>                      .（根域）13台根域服务器\n                      |\n org     net   edu  gov   mil   hk   com   cn     顶级域\n                                      |\n                             baidu   163   jd     二级域\n                                      |\n                                ftp  www mail      三级域\n\ncom   商业机构\ngov   政府部门\nint   国际组织\nmil   军事部门\nnet   网络服务组织\norg   其他组织\nedu   教育机构\n</code></pre><h4 id=\"3-安装提供服务的软件包\"><a href=\"#3-安装提供服务的软件包\" class=\"headerlink\" title=\"3. 安装提供服务的软件包\"></a>3. 安装提供服务的软件包</h4><pre><code>[root@localhost ~]# rpm -qa | grep bind  \nypbind-1.19-12.el5_6.1\nbind-devel-9.3.6-20.P1.el5\nbind-libs-9.3.6-20.P1.el5\nbind-utils-9.3.6-20.P1.el5\nbind-9.3.6-20.P1.el5\nbind-chroot-9.3.6-20.P1.el5            \n</code></pre><p>   安装bind后并不生成/etc/named.conf文件。<br>   在red hat enterprise linux 5中，bind程序的默认虚拟目录是/var/named/chroot.<br>   对虚拟目录而言，/etc/named.conf实际上是/var/named/chroot/etc/named.conf.</p>\n<h4 id=\"4-DNS的启动、停止、测试\"><a href=\"#4-DNS的启动、停止、测试\" class=\"headerlink\" title=\"4. DNS的启动、停止、测试\"></a>4. DNS的启动、停止、测试</h4><pre><code>#service named start\n#service named stop\n#service named restart\n在bind中还提供了一个专门用于远程配置DNS守护进程的命令rndc,\nr代表remote,使用rndc可以执行启动、停止、重载和转储等操作\n#rndc  stop  //停止DNS服务\n#rndc status  //查看named进程的配置情况\n</code></pre><h4 id=\"5-测试DNS服务器\"><a href=\"#5-测试DNS服务器\" class=\"headerlink\" title=\"5. 测试DNS服务器\"></a>5. 测试DNS服务器</h4><p>   5.1 nslookup</p>\n<pre><code>#nslookup\n&gt;192.168.0.l2\n</code></pre><p>   5.2 host</p>\n<pre><code>#host  www.subasafly.com\n#host  www.subasafly.com.zone\n#host  192.168.0.12\n</code></pre><p>   5.3 dig</p>\n<pre><code>#dig www.subasafly.com.zone\n</code></pre><p>   5.4 ping</p>\n<pre><code>#ping www.subasafly.com.zone\n</code></pre><h4 id=\"6-DNS服务器配置\"><a href=\"#6-DNS服务器配置\" class=\"headerlink\" title=\"6. DNS服务器配置\"></a>6. DNS服务器配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# rndc-confgen</span><br><span class=\"line\"># Start of rndc.conf</span><br><span class=\"line\">key &quot;rndckey&quot; &#123;</span><br><span class=\"line\">        algorithm hmac-md5;</span><br><span class=\"line\">        secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">        default-key &quot;rndckey&quot;;</span><br><span class=\"line\">        default-server 127.0.0.1;</span><br><span class=\"line\">        default-port 953;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"># End of rndc.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Use with the following in named.conf, adjusting the allow list as needed:</span><br><span class=\"line\"># key &quot;rndckey&quot; &#123;</span><br><span class=\"line\">#       algorithm hmac-md5;</span><br><span class=\"line\">#       secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;</span><br><span class=\"line\"># &#125;;</span><br><span class=\"line\"># </span><br><span class=\"line\"># controls &#123;</span><br><span class=\"line\">#       inet 127.0.0.1 port 953</span><br><span class=\"line\">#               allow &#123; 127.0.0.1; &#125; keys &#123; &quot;rndckey&quot;; &#125;;</span><br><span class=\"line\"># &#125;;</span><br><span class=\"line\"># End of named.conf</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux系统命令","originContent":"1.#cat /etc/redhat-release\n\n2.#uname -r： 内核版本号\n\n3.#who ：当前登录用户\n\n4.#hostname ：主机名查看和修改\n\n5.#pwd :当前目录\n\n6.#su - 用户名  ： “ -”切换用户身份和切换用户环境\n\n7. ctrl+l:清除当前窗口的命令\n\n8. 命令行窗口操作：\n    1)ctrl + \"-\":缩小\n    2）ctrl+shift+\"++\":放大\n\n9.#usernadd 用户名: 添加用户\n\n10.#passwd 用户名: 修改添加帐号的密码\n\n11 . /bin: 一般用户命令\n     /sbin:管理员命令\n     /lib:库文件\n     /selinux:Selinux设置和配置文件\n\t  /usr:源码包\n     /boot:引导文件\n     /lost+found:检测磁盘文件的生成的碎片文件\n     /opt:第三方软件默认安装目录\n     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件\n     /var:日志文件\n     /dev:设备文件\n     /mnt:移动设备挂载目录\n     /tftpboot:tftp根目录\n             \n12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]\n\n13.cd .. 上一级目录\n   cd ../..:上一级的上一级\n   cd ~:回上一级目录\n      \n14.网卡配置\n   #ifconfig 192.168.2.41/24        #/24是mask的简写\n   #ifconfig 192.168.2.41 netmask 255.255.255.0\n   #ifconfig 192.168.2.41    \n\n15.#ping -c 4 192.168.2.41  #ping 4次\n\n16.#mii-tool etho  //网线是否接通\n\n17.#iptables -L //查看防火墙\n\n18. #which  文件名   //查看软件位置\n\n19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的\n\n20.#mount //查看系统挂载了哪些设备\n\n21.“｜”管道：前边命令的输出结果作为后面命令的输入结果\n    #ls | grep vnc\n\n22. #rpm -q 软件名                  //查看软件是否安装过\n\n23. #rpm -ivh   软件包名称   //安装软件包\n  \n24.#vncviewer ip(远程登录的服务器ip地址) //远程连接\n\n25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮\n\n26.#umount 设备名   //卸载\n\n27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件\n\n28. #fdisk -l //查看磁盘分区\n\n29. 网卡配置永久IP\n     1)图形：#system-config-network\n     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0\n\n30.vim中显示行： set nu\n\n31.#ifdown eth0 //停用网卡\n\n32.#ifup eth0 //启用网卡","toc":true,"date":"2018-12-11T10:51:12.000Z","_content":"\n```language\n1.#cat /etc/redhat-release\n\n2.#uname -r： 内核版本号\n\n3.#who ：当前登录用户\n\n4.#hostname ：主机名查看和修改\n\n5.#pwd :当前目录\n\n6.#su - 用户名  ： “ -”切换用户身份和切换用户环境\n\n7. ctrl+l:清除当前窗口的命令\n\n8. 命令行窗口操作：\n    1)ctrl + \"-\":缩小\n    2）ctrl+shift+\"++\":放大\n\n9.#usernadd 用户名: 添加用户\n\n10.#passwd 用户名: 修改添加帐号的密码\n\n11 . /bin: 一般用户命令\n     /sbin:管理员命令\n     /lib:库文件\n     /selinux:Selinux设置和配置文件\n\t  /usr:源码包\n     /boot:引导文件\n     /lost+found:检测磁盘文件的生成的碎片文件\n     /opt:第三方软件默认安装目录\n     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件\n     /var:日志文件\n     /dev:设备文件\n     /mnt:移动设备挂载目录\n     /tftpboot:tftp根目录\n             \n12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]\n\n13.cd .. 上一级目录\n   cd ../..:上一级的上一级\n   cd ~:回上一级目录\n      \n14.网卡配置\n   #ifconfig 192.168.2.41/24        #/24是mask的简写\n   #ifconfig 192.168.2.41 netmask 255.255.255.0\n   #ifconfig 192.168.2.41    \n\n15.#ping -c 4 192.168.2.41  #ping 4次\n\n16.#mii-tool etho  //网线是否接通\n\n17.#iptables -L //查看防火墙\n\n18. #which  文件名   //查看软件位置\n\n19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的\n\n20.#mount //查看系统挂载了哪些设备\n\n21.“｜”管道：前边命令的输出结果作为后面命令的输入结果\n    #ls | grep vnc\n\n22. #rpm -q 软件名                  //查看软件是否安装过\n\n23. #rpm -ivh   软件包名称   //安装软件包\n  \n24.#vncviewer ip(远程登录的服务器ip地址) //远程连接\n\n25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮\n\n26.#umount 设备名   //卸载\n\n27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件\n\n28. #fdisk -l //查看磁盘分区\n\n29. 网卡配置永久IP\n     1)图形：#system-config-network\n     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0\n\n30.vim中显示行： set nu\n\n31.#ifdown eth0 //停用网卡\n\n32.#ifup eth0 //启用网卡\n```\n","source":"_posts/Linux系统命令.md","raw":"---\ntitle: Linux系统命令\ntags:\n  - linux\noriginContent: \"1.#cat /etc/redhat-release\\n\\n2.#uname -r： 内核版本号\\n\\n3.#who ：当前登录用户\\n\\n4.#hostname ：主机名查看和修改\\n\\n5.#pwd :当前目录\\n\\n6.#su - 用户名  ： “ -”切换用户身份和切换用户环境\\n\\n7. ctrl+l:清除当前窗口的命令\\n\\n8. 命令行窗口操作：\\n    1)ctrl + \\\"-\\\":缩小\\n    2）ctrl+shift+\\\"++\\\":放大\\n\\n9.#usernadd 用户名: 添加用户\\n\\n10.#passwd 用户名: 修改添加帐号的密码\\n\\n11 . /bin: 一般用户命令\\n     /sbin:管理员命令\\n     /lib:库文件\\n     /selinux:Selinux设置和配置文件\\n\\t  /usr:源码包\\n     /boot:引导文件\\n     /lost+found:检测磁盘文件的生成的碎片文件\\n     /opt:第三方软件默认安装目录\\n     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件\\n     /var:日志文件\\n     /dev:设备文件\\n     /mnt:移动设备挂载目录\\n     /tftpboot:tftp根目录\\n             \\n12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]\\n\\n13.cd .. 上一级目录\\n   cd ../..:上一级的上一级\\n   cd ~:回上一级目录\\n      \\n14.网卡配置\\n   #ifconfig 192.168.2.41/24        #/24是mask的简写\\n   #ifconfig 192.168.2.41 netmask 255.255.255.0\\n   #ifconfig 192.168.2.41    \\n\\n15.#ping -c 4 192.168.2.41  #ping 4次\\n\\n16.#mii-tool etho  //网线是否接通\\n\\n17.#iptables -L //查看防火墙\\n\\n18. #which  文件名   //查看软件位置\\n\\n19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的\\n\\n20.#mount //查看系统挂载了哪些设备\\n\\n21.“｜”管道：前边命令的输出结果作为后面命令的输入结果\\n    #ls | grep vnc\\n\\n22. #rpm -q 软件名                  //查看软件是否安装过\\n\\n23. #rpm -ivh   软件包名称   //安装软件包\\n  \\n24.#vncviewer ip(远程登录的服务器ip地址) //远程连接\\n\\n25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮\\n\\n26.#umount 设备名   //卸载\\n\\n27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件\\n\\n28. #fdisk -l //查看磁盘分区\\n\\n29. 网卡配置永久IP\\n     1)图形：#system-config-network\\n     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0\\n\\n30.vim中显示行： set nu\\n\\n31.#ifdown eth0 //停用网卡\\n\\n32.#ifup eth0 //启用网卡\"\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-11 18:51:12\n---\n\n```language\n1.#cat /etc/redhat-release\n\n2.#uname -r： 内核版本号\n\n3.#who ：当前登录用户\n\n4.#hostname ：主机名查看和修改\n\n5.#pwd :当前目录\n\n6.#su - 用户名  ： “ -”切换用户身份和切换用户环境\n\n7. ctrl+l:清除当前窗口的命令\n\n8. 命令行窗口操作：\n    1)ctrl + \"-\":缩小\n    2）ctrl+shift+\"++\":放大\n\n9.#usernadd 用户名: 添加用户\n\n10.#passwd 用户名: 修改添加帐号的密码\n\n11 . /bin: 一般用户命令\n     /sbin:管理员命令\n     /lib:库文件\n     /selinux:Selinux设置和配置文件\n\t  /usr:源码包\n     /boot:引导文件\n     /lost+found:检测磁盘文件的生成的碎片文件\n     /opt:第三方软件默认安装目录\n     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件\n     /var:日志文件\n     /dev:设备文件\n     /mnt:移动设备挂载目录\n     /tftpboot:tftp根目录\n             \n12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]\n\n13.cd .. 上一级目录\n   cd ../..:上一级的上一级\n   cd ~:回上一级目录\n      \n14.网卡配置\n   #ifconfig 192.168.2.41/24        #/24是mask的简写\n   #ifconfig 192.168.2.41 netmask 255.255.255.0\n   #ifconfig 192.168.2.41    \n\n15.#ping -c 4 192.168.2.41  #ping 4次\n\n16.#mii-tool etho  //网线是否接通\n\n17.#iptables -L //查看防火墙\n\n18. #which  文件名   //查看软件位置\n\n19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的\n\n20.#mount //查看系统挂载了哪些设备\n\n21.“｜”管道：前边命令的输出结果作为后面命令的输入结果\n    #ls | grep vnc\n\n22. #rpm -q 软件名                  //查看软件是否安装过\n\n23. #rpm -ivh   软件包名称   //安装软件包\n  \n24.#vncviewer ip(远程登录的服务器ip地址) //远程连接\n\n25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮\n\n26.#umount 设备名   //卸载\n\n27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件\n\n28. #fdisk -l //查看磁盘分区\n\n29. 网卡配置永久IP\n     1)图形：#system-config-network\n     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0\n\n30.vim中显示行： set nu\n\n31.#ifdown eth0 //停用网卡\n\n32.#ifup eth0 //启用网卡\n```\n","slug":"Linux系统命令","published":1,"updated":"2018-12-18T08:00:18.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3esv0002yes6qs39ozon","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.#cat /etc/redhat-release</span><br><span class=\"line\"></span><br><span class=\"line\">2.#uname -r： 内核版本号</span><br><span class=\"line\"></span><br><span class=\"line\">3.#who ：当前登录用户</span><br><span class=\"line\"></span><br><span class=\"line\">4.#hostname ：主机名查看和修改</span><br><span class=\"line\"></span><br><span class=\"line\">5.#pwd :当前目录</span><br><span class=\"line\"></span><br><span class=\"line\">6.#su - 用户名  ： “ -”切换用户身份和切换用户环境</span><br><span class=\"line\"></span><br><span class=\"line\">7. ctrl+l:清除当前窗口的命令</span><br><span class=\"line\"></span><br><span class=\"line\">8. 命令行窗口操作：</span><br><span class=\"line\">    1)ctrl + &quot;-&quot;:缩小</span><br><span class=\"line\">    2）ctrl+shift+&quot;++&quot;:放大</span><br><span class=\"line\"></span><br><span class=\"line\">9.#usernadd 用户名: 添加用户</span><br><span class=\"line\"></span><br><span class=\"line\">10.#passwd 用户名: 修改添加帐号的密码</span><br><span class=\"line\"></span><br><span class=\"line\">11 . /bin: 一般用户命令</span><br><span class=\"line\">     /sbin:管理员命令</span><br><span class=\"line\">     /lib:库文件</span><br><span class=\"line\">     /selinux:Selinux设置和配置文件</span><br><span class=\"line\">\t  /usr:源码包</span><br><span class=\"line\">     /boot:引导文件</span><br><span class=\"line\">     /lost+found:检测磁盘文件的生成的碎片文件</span><br><span class=\"line\">     /opt:第三方软件默认安装目录</span><br><span class=\"line\">     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件</span><br><span class=\"line\">     /var:日志文件</span><br><span class=\"line\">     /dev:设备文件</span><br><span class=\"line\">     /mnt:移动设备挂载目录</span><br><span class=\"line\">     /tftpboot:tftp根目录</span><br><span class=\"line\">             </span><br><span class=\"line\">12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]</span><br><span class=\"line\"></span><br><span class=\"line\">13.cd .. 上一级目录</span><br><span class=\"line\">   cd ../..:上一级的上一级</span><br><span class=\"line\">   cd ~:回上一级目录</span><br><span class=\"line\">      </span><br><span class=\"line\">14.网卡配置</span><br><span class=\"line\">   #ifconfig 192.168.2.41/24        #/24是mask的简写</span><br><span class=\"line\">   #ifconfig 192.168.2.41 netmask 255.255.255.0</span><br><span class=\"line\">   #ifconfig 192.168.2.41    </span><br><span class=\"line\"></span><br><span class=\"line\">15.#ping -c 4 192.168.2.41  #ping 4次</span><br><span class=\"line\"></span><br><span class=\"line\">16.#mii-tool etho  //网线是否接通</span><br><span class=\"line\"></span><br><span class=\"line\">17.#iptables -L //查看防火墙</span><br><span class=\"line\"></span><br><span class=\"line\">18. #which  文件名   //查看软件位置</span><br><span class=\"line\"></span><br><span class=\"line\">19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的</span><br><span class=\"line\"></span><br><span class=\"line\">20.#mount //查看系统挂载了哪些设备</span><br><span class=\"line\"></span><br><span class=\"line\">21.“｜”管道：前边命令的输出结果作为后面命令的输入结果</span><br><span class=\"line\">    #ls | grep vnc</span><br><span class=\"line\"></span><br><span class=\"line\">22. #rpm -q 软件名                  //查看软件是否安装过</span><br><span class=\"line\"></span><br><span class=\"line\">23. #rpm -ivh   软件包名称   //安装软件包</span><br><span class=\"line\">  </span><br><span class=\"line\">24.#vncviewer ip(远程登录的服务器ip地址) //远程连接</span><br><span class=\"line\"></span><br><span class=\"line\">25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮</span><br><span class=\"line\"></span><br><span class=\"line\">26.#umount 设备名   //卸载</span><br><span class=\"line\"></span><br><span class=\"line\">27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件</span><br><span class=\"line\"></span><br><span class=\"line\">28. #fdisk -l //查看磁盘分区</span><br><span class=\"line\"></span><br><span class=\"line\">29. 网卡配置永久IP</span><br><span class=\"line\">     1)图形：#system-config-network</span><br><span class=\"line\">     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">30.vim中显示行： set nu</span><br><span class=\"line\"></span><br><span class=\"line\">31.#ifdown eth0 //停用网卡</span><br><span class=\"line\"></span><br><span class=\"line\">32.#ifup eth0 //启用网卡</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.#cat /etc/redhat-release</span><br><span class=\"line\"></span><br><span class=\"line\">2.#uname -r： 内核版本号</span><br><span class=\"line\"></span><br><span class=\"line\">3.#who ：当前登录用户</span><br><span class=\"line\"></span><br><span class=\"line\">4.#hostname ：主机名查看和修改</span><br><span class=\"line\"></span><br><span class=\"line\">5.#pwd :当前目录</span><br><span class=\"line\"></span><br><span class=\"line\">6.#su - 用户名  ： “ -”切换用户身份和切换用户环境</span><br><span class=\"line\"></span><br><span class=\"line\">7. ctrl+l:清除当前窗口的命令</span><br><span class=\"line\"></span><br><span class=\"line\">8. 命令行窗口操作：</span><br><span class=\"line\">    1)ctrl + &quot;-&quot;:缩小</span><br><span class=\"line\">    2）ctrl+shift+&quot;++&quot;:放大</span><br><span class=\"line\"></span><br><span class=\"line\">9.#usernadd 用户名: 添加用户</span><br><span class=\"line\"></span><br><span class=\"line\">10.#passwd 用户名: 修改添加帐号的密码</span><br><span class=\"line\"></span><br><span class=\"line\">11 . /bin: 一般用户命令</span><br><span class=\"line\">     /sbin:管理员命令</span><br><span class=\"line\">     /lib:库文件</span><br><span class=\"line\">     /selinux:Selinux设置和配置文件</span><br><span class=\"line\">\t  /usr:源码包</span><br><span class=\"line\">     /boot:引导文件</span><br><span class=\"line\">     /lost+found:检测磁盘文件的生成的碎片文件</span><br><span class=\"line\">     /opt:第三方软件默认安装目录</span><br><span class=\"line\">     /srv /proc：虚拟目录，不占用磁盘空间，文件存放在内存中,服务在运行过程中调用的文件</span><br><span class=\"line\">     /var:日志文件</span><br><span class=\"line\">     /dev:设备文件</span><br><span class=\"line\">     /mnt:移动设备挂载目录</span><br><span class=\"line\">     /tftpboot:tftp根目录</span><br><span class=\"line\">             </span><br><span class=\"line\">12.命令语法格式：命令名 空格 [选项] 空格 [文件或目录名]</span><br><span class=\"line\"></span><br><span class=\"line\">13.cd .. 上一级目录</span><br><span class=\"line\">   cd ../..:上一级的上一级</span><br><span class=\"line\">   cd ~:回上一级目录</span><br><span class=\"line\">      </span><br><span class=\"line\">14.网卡配置</span><br><span class=\"line\">   #ifconfig 192.168.2.41/24        #/24是mask的简写</span><br><span class=\"line\">   #ifconfig 192.168.2.41 netmask 255.255.255.0</span><br><span class=\"line\">   #ifconfig 192.168.2.41    </span><br><span class=\"line\"></span><br><span class=\"line\">15.#ping -c 4 192.168.2.41  #ping 4次</span><br><span class=\"line\"></span><br><span class=\"line\">16.#mii-tool etho  //网线是否接通</span><br><span class=\"line\"></span><br><span class=\"line\">17.#iptables -L //查看防火墙</span><br><span class=\"line\"></span><br><span class=\"line\">18. #which  文件名   //查看软件位置</span><br><span class=\"line\"></span><br><span class=\"line\">19.rpm -qf /usr/bin/vncviewer #查看文件是有那个文件提供的</span><br><span class=\"line\"></span><br><span class=\"line\">20.#mount //查看系统挂载了哪些设备</span><br><span class=\"line\"></span><br><span class=\"line\">21.“｜”管道：前边命令的输出结果作为后面命令的输入结果</span><br><span class=\"line\">    #ls | grep vnc</span><br><span class=\"line\"></span><br><span class=\"line\">22. #rpm -q 软件名                  //查看软件是否安装过</span><br><span class=\"line\"></span><br><span class=\"line\">23. #rpm -ivh   软件包名称   //安装软件包</span><br><span class=\"line\">  </span><br><span class=\"line\">24.#vncviewer ip(远程登录的服务器ip地址) //远程连接</span><br><span class=\"line\"></span><br><span class=\"line\">25. 粘贴: 选择当前粘贴的内容，按鼠标滑轮</span><br><span class=\"line\"></span><br><span class=\"line\">26.#umount 设备名   //卸载</span><br><span class=\"line\"></span><br><span class=\"line\">27.#mount -o loop /root/xxx.iso   /mnt //挂载iso文件</span><br><span class=\"line\"></span><br><span class=\"line\">28. #fdisk -l //查看磁盘分区</span><br><span class=\"line\"></span><br><span class=\"line\">29. 网卡配置永久IP</span><br><span class=\"line\">     1)图形：#system-config-network</span><br><span class=\"line\">     2)修改配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">30.vim中显示行： set nu</span><br><span class=\"line\"></span><br><span class=\"line\">31.#ifdown eth0 //停用网卡</span><br><span class=\"line\"></span><br><span class=\"line\">32.#ifup eth0 //启用网卡</span><br></pre></td></tr></table></figure>\n"},{"title":"MongoDB权威指南中文版","originContent":"{% pdf /pdf/MongoDB 权威指南 中文版.pdf %}","toc":true,"date":"2018-12-05T09:13:52.000Z","_content":"\n{% pdf /pdf/MongoDB.pdf %}","source":"_posts/MongoDB权威指南中文版.md","raw":"---\ntitle: MongoDB权威指南中文版\ntags:\n  - mongodb\noriginContent: '{% pdf /pdf/MongoDB 权威指南 中文版.pdf %}'\ncategories:\n  - mongodb\ntoc: true\ndate: 2018-12-05 17:13:52\n---\n\n{% pdf /pdf/MongoDB.pdf %}","slug":"MongoDB权威指南中文版","published":1,"updated":"2018-12-18T08:00:18.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3et00006yes6s6lqavvi","content":"\n\n\t<div class=\"row\">\n    <embed src=\"/pdf/MongoDB.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n","site":{"data":{}},"excerpt":"","more":"\n\n\t<div class=\"row\">\n    <embed src=\"/pdf/MongoDB.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n"},{"title":"SQLSTATE[HY000] [2054] The server requested ","originContent":"","toc":true,"date":"2018-12-24T03:10:36.000Z","_content":"\n> laravel 报错， SQLSTATE[HY000] [2054] The server requested authentication method\n\n#### 使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：\n```bash\nSQLSTATE[HY000] [2054] The server requested authentication method unknown to the client\n```\n\n * 发生这种错误，是由于MySQL8默认使用了新的密码验证插件：caching_sha2_password，而之前的PHP版本中所带的mysqlnd无法支持这种验证。\n \n * 解决办法：\n * 修改密码认证方式\nALTER USER 'YOURUSERNAME'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YOURPASSWORD';\n\n#### 设置mysql简单密码报错：\n  ##### 解决方案：\n  * 查看mysql全局参数配置\n  \n   ```bash\nmysql> SHOW VARIABLES LIKE 'validate_password%';\n+--------------------------------------+--------+\n| Variable_name                        | Value  |\n+--------------------------------------+--------+\n| validate_password_dictionary_file    |        |\n| validate_password_length             | 8      |\n| validate_password_mixed_case_count   | 1      |\n| validate_password_number_count       | 1      |\n| validate_password_policy             | MEDIUM |\n| validate_password_special_char_count | 1      |\n-------------------------------------------------\n```\n  * 参数解释\n   1) validate_password_dictionary_file ：插件用于验证密码强度的字典文件路径。\n\n   2) validate_password_length ：密码最小长度，参数默认为8，它有最小值的限制，最小值为：validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)\n\n   3) validate_password_mixed_case_count：密码至少要包含的小写字母个数和大写字母个数。\n\n   4) validate_password_number_count：密码至少要包含的数字个数。\n\n   5) validate_password_policy：密码强度检查等级，0/LOW、1/MEDIUM、2/STRONG\n\n   6) validate_password_special_char_count：密码至少要包含的特殊字符数。\n\n  * 修改mysql参数配置\n  \n  ```bash\nmysql> set global validate_password_policy=0;\nQuery OK, 0 rows affected (0.05 sec)\n \nmysql> \nmysql> \nmysql> set global validate_password_mixed_case_count=0;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_number_count=3;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_special_char_count=0;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_length=3;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> SHOW VARIABLES LIKE 'validate_password%';\n+--------------------------------------+-------+\n| Variable_name                        | Value |\n+--------------------------------------+-------+\n| validate_password_dictionary_file    |       |\n| validate_password_length             | 3     |\n| validate_password_mixed_case_count   | 0     |\n| validate_password_number_count       | 3     |\n| validate_password_policy             | LOW   |\n| validate_password_special_char_count | 0     |\n+--------------------------------------+-------+\n  ```","source":"_posts/SQLSTATE-HY000-2054-The-server-requested.md","raw":"---\ntitle: 'SQLSTATE[HY000] [2054] The server requested '\ntags:\n  - php\noriginContent: ''\ncategories:\n  - php\ntoc: true\ndate: 2018-12-24 11:10:36\n---\n\n> laravel 报错， SQLSTATE[HY000] [2054] The server requested authentication method\n\n#### 使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：\n```bash\nSQLSTATE[HY000] [2054] The server requested authentication method unknown to the client\n```\n\n * 发生这种错误，是由于MySQL8默认使用了新的密码验证插件：caching_sha2_password，而之前的PHP版本中所带的mysqlnd无法支持这种验证。\n \n * 解决办法：\n * 修改密码认证方式\nALTER USER 'YOURUSERNAME'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YOURPASSWORD';\n\n#### 设置mysql简单密码报错：\n  ##### 解决方案：\n  * 查看mysql全局参数配置\n  \n   ```bash\nmysql> SHOW VARIABLES LIKE 'validate_password%';\n+--------------------------------------+--------+\n| Variable_name                        | Value  |\n+--------------------------------------+--------+\n| validate_password_dictionary_file    |        |\n| validate_password_length             | 8      |\n| validate_password_mixed_case_count   | 1      |\n| validate_password_number_count       | 1      |\n| validate_password_policy             | MEDIUM |\n| validate_password_special_char_count | 1      |\n-------------------------------------------------\n```\n  * 参数解释\n   1) validate_password_dictionary_file ：插件用于验证密码强度的字典文件路径。\n\n   2) validate_password_length ：密码最小长度，参数默认为8，它有最小值的限制，最小值为：validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)\n\n   3) validate_password_mixed_case_count：密码至少要包含的小写字母个数和大写字母个数。\n\n   4) validate_password_number_count：密码至少要包含的数字个数。\n\n   5) validate_password_policy：密码强度检查等级，0/LOW、1/MEDIUM、2/STRONG\n\n   6) validate_password_special_char_count：密码至少要包含的特殊字符数。\n\n  * 修改mysql参数配置\n  \n  ```bash\nmysql> set global validate_password_policy=0;\nQuery OK, 0 rows affected (0.05 sec)\n \nmysql> \nmysql> \nmysql> set global validate_password_mixed_case_count=0;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_number_count=3;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_special_char_count=0;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> set global validate_password_length=3;\nQuery OK, 0 rows affected (0.00 sec)\n \nmysql> SHOW VARIABLES LIKE 'validate_password%';\n+--------------------------------------+-------+\n| Variable_name                        | Value |\n+--------------------------------------+-------+\n| validate_password_dictionary_file    |       |\n| validate_password_length             | 3     |\n| validate_password_mixed_case_count   | 0     |\n| validate_password_number_count       | 3     |\n| validate_password_policy             | LOW   |\n| validate_password_special_char_count | 0     |\n+--------------------------------------+-------+\n  ```","slug":"SQLSTATE-HY000-2054-The-server-requested","published":1,"updated":"2018-12-24T03:10:36.177Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3et10007yes6h1wm2sm3","content":"<blockquote>\n<p>laravel 报错， SQLSTATE[HY000] [2054] The server requested authentication method</p>\n</blockquote>\n<h4 id=\"使用PHP连接MySQL-8的时候，可能会发生如标题所示的错误：\"><a href=\"#使用PHP连接MySQL-8的时候，可能会发生如标题所示的错误：\" class=\"headerlink\" title=\"使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：\"></a>使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQLSTATE[HY000] [2054] The server requested authentication method unknown to the client</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>发生这种错误，是由于MySQL8默认使用了新的密码验证插件：caching_sha2_password，而之前的PHP版本中所带的mysqlnd无法支持这种验证。</p>\n</li>\n<li><p>解决办法：</p>\n</li>\n<li>修改密码认证方式<br>ALTER USER ‘YOURUSERNAME‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘YOURPASSWORD’;</li>\n</ul>\n<h4 id=\"设置mysql简单密码报错：\"><a href=\"#设置mysql简单密码报错：\" class=\"headerlink\" title=\"设置mysql简单密码报错：\"></a>设置mysql简单密码报错：</h4><h5 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h5><ul>\n<li><p>查看mysql全局参数配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br><span class=\"line\">+--------------------------------------+--------+</span><br><span class=\"line\">| Variable_name                        | Value  |</span><br><span class=\"line\">+--------------------------------------+--------+</span><br><span class=\"line\">| validate_password_dictionary_file    |        |</span><br><span class=\"line\">| validate_password_length             | 8      |</span><br><span class=\"line\">| validate_password_mixed_case_count   | 1      |</span><br><span class=\"line\">| validate_password_number_count       | 1      |</span><br><span class=\"line\">| validate_password_policy             | MEDIUM |</span><br><span class=\"line\">| validate_password_special_char_count | 1      |</span><br><span class=\"line\">-------------------------------------------------</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>参数解释<br>1) validate_password_dictionary_file ：插件用于验证密码强度的字典文件路径。</p>\n<p>2) validate_password_length ：密码最小长度，参数默认为8，它有最小值的限制，最小值为：validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)</p>\n<p>3) validate_password_mixed_case_count：密码至少要包含的小写字母个数和大写字母个数。</p>\n<p>4) validate_password_number_count：密码至少要包含的数字个数。</p>\n<p>5) validate_password_policy：密码强度检查等级，0/LOW、1/MEDIUM、2/STRONG</p>\n<p>6) validate_password_special_char_count：密码至少要包含的特殊字符数。</p>\n</li>\n<li><p>修改mysql参数配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.05 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; </span><br><span class=\"line\">mysql&gt; </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_mixed_case_count=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_number_count=3;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_special_char_count=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_length=3;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br><span class=\"line\">+--------------------------------------+-------+</span><br><span class=\"line\">| Variable_name                        | Value |</span><br><span class=\"line\">+--------------------------------------+-------+</span><br><span class=\"line\">| validate_password_dictionary_file    |       |</span><br><span class=\"line\">| validate_password_length             | 3     |</span><br><span class=\"line\">| validate_password_mixed_case_count   | 0     |</span><br><span class=\"line\">| validate_password_number_count       | 3     |</span><br><span class=\"line\">| validate_password_policy             | LOW   |</span><br><span class=\"line\">| validate_password_special_char_count | 0     |</span><br><span class=\"line\">+--------------------------------------+-------+</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>laravel 报错， SQLSTATE[HY000] [2054] The server requested authentication method</p>\n</blockquote>\n<h4 id=\"使用PHP连接MySQL-8的时候，可能会发生如标题所示的错误：\"><a href=\"#使用PHP连接MySQL-8的时候，可能会发生如标题所示的错误：\" class=\"headerlink\" title=\"使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：\"></a>使用PHP连接MySQL 8的时候，可能会发生如标题所示的错误：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQLSTATE[HY000] [2054] The server requested authentication method unknown to the client</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>发生这种错误，是由于MySQL8默认使用了新的密码验证插件：caching_sha2_password，而之前的PHP版本中所带的mysqlnd无法支持这种验证。</p>\n</li>\n<li><p>解决办法：</p>\n</li>\n<li>修改密码认证方式<br>ALTER USER ‘YOURUSERNAME‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘YOURPASSWORD’;</li>\n</ul>\n<h4 id=\"设置mysql简单密码报错：\"><a href=\"#设置mysql简单密码报错：\" class=\"headerlink\" title=\"设置mysql简单密码报错：\"></a>设置mysql简单密码报错：</h4><h5 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h5><ul>\n<li><p>查看mysql全局参数配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br><span class=\"line\">+--------------------------------------+--------+</span><br><span class=\"line\">| Variable_name                        | Value  |</span><br><span class=\"line\">+--------------------------------------+--------+</span><br><span class=\"line\">| validate_password_dictionary_file    |        |</span><br><span class=\"line\">| validate_password_length             | 8      |</span><br><span class=\"line\">| validate_password_mixed_case_count   | 1      |</span><br><span class=\"line\">| validate_password_number_count       | 1      |</span><br><span class=\"line\">| validate_password_policy             | MEDIUM |</span><br><span class=\"line\">| validate_password_special_char_count | 1      |</span><br><span class=\"line\">-------------------------------------------------</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>参数解释<br>1) validate_password_dictionary_file ：插件用于验证密码强度的字典文件路径。</p>\n<p>2) validate_password_length ：密码最小长度，参数默认为8，它有最小值的限制，最小值为：validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)</p>\n<p>3) validate_password_mixed_case_count：密码至少要包含的小写字母个数和大写字母个数。</p>\n<p>4) validate_password_number_count：密码至少要包含的数字个数。</p>\n<p>5) validate_password_policy：密码强度检查等级，0/LOW、1/MEDIUM、2/STRONG</p>\n<p>6) validate_password_special_char_count：密码至少要包含的特殊字符数。</p>\n</li>\n<li><p>修改mysql参数配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.05 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; </span><br><span class=\"line\">mysql&gt; </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_mixed_case_count=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_number_count=3;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_special_char_count=0;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">set</span> global validate_password_length=3;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"> </span><br><span class=\"line\">mysql&gt; SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br><span class=\"line\">+--------------------------------------+-------+</span><br><span class=\"line\">| Variable_name                        | Value |</span><br><span class=\"line\">+--------------------------------------+-------+</span><br><span class=\"line\">| validate_password_dictionary_file    |       |</span><br><span class=\"line\">| validate_password_length             | 3     |</span><br><span class=\"line\">| validate_password_mixed_case_count   | 0     |</span><br><span class=\"line\">| validate_password_number_count       | 3     |</span><br><span class=\"line\">| validate_password_policy             | LOW   |</span><br><span class=\"line\">| validate_password_special_char_count | 0     |</span><br><span class=\"line\">+--------------------------------------+-------+</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"[TCP抓包] tcpflow","originContent":"> tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常 会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http ftp这些L7协议，也支持tcp udp抓包， 还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。\n\n下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看: http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\n\n#### 安装指南\n如果没有安装unzip，或者提示Can't find pcap.h，则安装libpcap-devel包即可。\n```language\n yum -y install libpcap-devel unzip\n```\n\n然后下载压缩包，继续安装\n```language\nwget \"https://github.com/mukhin/tcpflow/archive/master.zip\" -O tcpflow-master.zip\nunzip tcpflow-master.zip\ncd tcpflow-master\n./configure\nmake\nmake install\ncd ..\nrm -rf tcpflow-master*\n```\n#### 使用指南\n```language\n# 抓取网卡eth3，发往主机192.168.111.111的报文\ntcpflow -t -cp host 192.168.111.111 -i eth3\n \n# 抓取目标端口为3306，内容包含\"update \"的报文\ntcpflow -t -cp dst port 3306|grep -i \"update \"\n```\n过滤器表达式，同tcpdump，不熟悉的可以查看 http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html ，FILTERING EXPRESSIONS 部分。\n\n#### 效果说明\n\n![](/images/image2018-11-25_20-38-52-1.png)\n发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)\n\n得到两次tcp交互，一次为蓝色，可以看到：\n\n这是一次从192.168.4.32 发起的请求，在请求index.html页面 \nUA表名是linux的指令 wget v1.12\n另一次为黄色，可以看到:\n\n- 192.168.3.90地址反馈说，500错误，内部服务器错误\n- 这台机器上安装的web应用软件是Tengine，但是没有显示版本\n- web服务器上用到的PHP版本是7.0.13","toc":true,"date":"2018-12-06T03:38:30.000Z","_content":"\n> tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常 会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http ftp这些L7协议，也支持tcp udp抓包， 还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。\n\n下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看: http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\n\n#### 安装指南\n如果没有安装unzip，或者提示Can't find pcap.h，则安装libpcap-devel包即可。\n```language\n yum -y install libpcap-devel unzip\n```\n\n然后下载压缩包，继续安装\n```language\nwget \"https://github.com/mukhin/tcpflow/archive/master.zip\" -O tcpflow-master.zip\nunzip tcpflow-master.zip\ncd tcpflow-master\n./configure\nmake\nmake install\ncd ..\nrm -rf tcpflow-master*\n```\n#### 使用指南\n```language\n# 抓取网卡eth3，发往主机192.168.111.111的报文\ntcpflow -t -cp host 192.168.111.111 -i eth3\n \n# 抓取目标端口为3306，内容包含\"update \"的报文\ntcpflow -t -cp dst port 3306|grep -i \"update \"\n```\n过滤器表达式，同tcpdump，不熟悉的可以查看 http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html ，FILTERING EXPRESSIONS 部分。\n\n#### 效果说明\n![](/images/image2018-11-25_20-38-52-1.png)\n发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)\n\n得到两次tcp交互，一次为蓝色，可以看到：\n\n这是一次从192.168.4.32 发起的请求，在请求index.html页面 \nUA表名是linux的指令 wget v1.12\n另一次为黄色，可以看到:\n\n- 192.168.3.90地址反馈说，500错误，内部服务器错误\n- 这台机器上安装的web应用软件是Tengine，但是没有显示版本\n- web服务器上用到的PHP版本是7.0.13","source":"_posts/TCP抓包-tcpflow.md","raw":"---\ntitle: '[TCP抓包] tcpflow'\ntags:\n  - 服务器\noriginContent: >-\n  > tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常\n  会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http\n  ftp这些L7协议，也支持tcp udp抓包，\n  还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。\n\n\n  下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看:\n  http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\n\n\n  #### 安装指南\n\n  如果没有安装unzip，或者提示Can't find pcap.h，则安装libpcap-devel包即可。\n\n  ```language\n   yum -y install libpcap-devel unzip\n  ```\n\n\n  然后下载压缩包，继续安装\n\n  ```language\n\n  wget \"https://github.com/mukhin/tcpflow/archive/master.zip\" -O\n  tcpflow-master.zip\n\n  unzip tcpflow-master.zip\n\n  cd tcpflow-master\n\n  ./configure\n\n  make\n\n  make install\n\n  cd ..\n\n  rm -rf tcpflow-master*\n\n  ```\n\n  #### 使用指南\n\n  ```language\n\n  # 抓取网卡eth3，发往主机192.168.111.111的报文\n\n  tcpflow -t -cp host 192.168.111.111 -i eth3\n   \n  # 抓取目标端口为3306，内容包含\"update \"的报文\n\n  tcpflow -t -cp dst port 3306|grep -i \"update \"\n\n  ```\n\n  过滤器表达式，同tcpdump，不熟悉的可以查看\n  http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html ，FILTERING\n  EXPRESSIONS 部分。\n\n\n  #### 效果说明\n\n\n  ![](/images/image2018-11-25_20-38-52-1.png)\n\n  发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)\n\n\n  得到两次tcp交互，一次为蓝色，可以看到：\n\n\n  这是一次从192.168.4.32 发起的请求，在请求index.html页面 \n\n  UA表名是linux的指令 wget v1.12\n\n  另一次为黄色，可以看到:\n\n\n  - 192.168.3.90地址反馈说，500错误，内部服务器错误\n\n  - 这台机器上安装的web应用软件是Tengine，但是没有显示版本\n\n  - web服务器上用到的PHP版本是7.0.13\ncategories:\n  - 服务器\ntoc: true\ndate: 2018-12-06 11:38:30\n---\n\n> tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常 会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http ftp这些L7协议，也支持tcp udp抓包， 还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。\n\n下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看: http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\n\n#### 安装指南\n如果没有安装unzip，或者提示Can't find pcap.h，则安装libpcap-devel包即可。\n```language\n yum -y install libpcap-devel unzip\n```\n\n然后下载压缩包，继续安装\n```language\nwget \"https://github.com/mukhin/tcpflow/archive/master.zip\" -O tcpflow-master.zip\nunzip tcpflow-master.zip\ncd tcpflow-master\n./configure\nmake\nmake install\ncd ..\nrm -rf tcpflow-master*\n```\n#### 使用指南\n```language\n# 抓取网卡eth3，发往主机192.168.111.111的报文\ntcpflow -t -cp host 192.168.111.111 -i eth3\n \n# 抓取目标端口为3306，内容包含\"update \"的报文\ntcpflow -t -cp dst port 3306|grep -i \"update \"\n```\n过滤器表达式，同tcpdump，不熟悉的可以查看 http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html ，FILTERING EXPRESSIONS 部分。\n\n#### 效果说明\n![](/images/image2018-11-25_20-38-52-1.png)\n发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)\n\n得到两次tcp交互，一次为蓝色，可以看到：\n\n这是一次从192.168.4.32 发起的请求，在请求index.html页面 \nUA表名是linux的指令 wget v1.12\n另一次为黄色，可以看到:\n\n- 192.168.3.90地址反馈说，500错误，内部服务器错误\n- 这台机器上安装的web应用软件是Tengine，但是没有显示版本\n- web服务器上用到的PHP版本是7.0.13","slug":"TCP抓包-tcpflow","published":1,"updated":"2018-12-18T08:00:18.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3et30008yes68x3i4eio","content":"<blockquote>\n<p>tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常 会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http ftp这些L7协议，也支持tcp udp抓包， 还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。</p>\n</blockquote>\n<p>下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看: <a href=\"http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\" target=\"_blank\" rel=\"noopener\">http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html</a></p>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><p>如果没有安装unzip，或者提示Can’t find pcap.h，则安装libpcap-devel包即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install libpcap-devel unzip</span><br></pre></td></tr></table></figure></p>\n<p>然后下载压缩包，继续安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget &quot;https://github.com/mukhin/tcpflow/archive/master.zip&quot; -O tcpflow-master.zip</span><br><span class=\"line\">unzip tcpflow-master.zip</span><br><span class=\"line\">cd tcpflow-master</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">rm -rf tcpflow-master*</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 抓取网卡eth3，发往主机192.168.111.111的报文</span><br><span class=\"line\">tcpflow -t -cp host 192.168.111.111 -i eth3</span><br><span class=\"line\"> </span><br><span class=\"line\"># 抓取目标端口为3306，内容包含&quot;update &quot;的报文</span><br><span class=\"line\">tcpflow -t -cp dst port 3306|grep -i &quot;update &quot;</span><br></pre></td></tr></table></figure>\n<p>过滤器表达式，同tcpdump，不熟悉的可以查看 <a href=\"http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\" target=\"_blank\" rel=\"noopener\">http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html</a> ，FILTERING EXPRESSIONS 部分。</p>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-38-52-1.png\" alt><br>发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)</p>\n<p>得到两次tcp交互，一次为蓝色，可以看到：</p>\n<p>这是一次从192.168.4.32 发起的请求，在请求index.html页面<br>UA表名是linux的指令 wget v1.12<br>另一次为黄色，可以看到:</p>\n<ul>\n<li>192.168.3.90地址反馈说，500错误，内部服务器错误</li>\n<li>这台机器上安装的web应用软件是Tengine，但是没有显示版本</li>\n<li>web服务器上用到的PHP版本是7.0.13</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>tcpflow是一款抓包工具，这个抓包工具与tcpdump不同的是它是以流为单位显示数据内容，而tcpdump以包为单位显示数据。我们平常 会经常分析HTTP数据，用tcpflow会更便捷。 tcpflow看起来更像wireshark的命令行版本，他可以直接从网卡抓包，并且解析出来，支持http ftp这些L7协议，也支持tcp udp抓包， 还可以从tcpdump中读取东西，因此是一个非常好的看包工具，有了这个东西以后再也不用把线上服务器上的dump抓下来再用 wireshark打开了。</p>\n</blockquote>\n<p>下方选用的修改版，所以编译后，man帮助指令得不到正确的反馈，请参看: <a href=\"http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\" target=\"_blank\" rel=\"noopener\">http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html</a></p>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><p>如果没有安装unzip，或者提示Can’t find pcap.h，则安装libpcap-devel包即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install libpcap-devel unzip</span><br></pre></td></tr></table></figure></p>\n<p>然后下载压缩包，继续安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget &quot;https://github.com/mukhin/tcpflow/archive/master.zip&quot; -O tcpflow-master.zip</span><br><span class=\"line\">unzip tcpflow-master.zip</span><br><span class=\"line\">cd tcpflow-master</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">rm -rf tcpflow-master*</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 抓取网卡eth3，发往主机192.168.111.111的报文</span><br><span class=\"line\">tcpflow -t -cp host 192.168.111.111 -i eth3</span><br><span class=\"line\"> </span><br><span class=\"line\"># 抓取目标端口为3306，内容包含&quot;update &quot;的报文</span><br><span class=\"line\">tcpflow -t -cp dst port 3306|grep -i &quot;update &quot;</span><br></pre></td></tr></table></figure>\n<p>过滤器表达式，同tcpdump，不熟悉的可以查看 <a href=\"http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html\" target=\"_blank\" rel=\"noopener\">http://www.circlemud.org/jelson/software/tcpflow/tcpflow.1.html</a> ，FILTERING EXPRESSIONS 部分。</p>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-38-52-1.png\" alt><br>发起了一次 wget 请求，同时监听了 db.master 这个域名(即192.168.3.90)</p>\n<p>得到两次tcp交互，一次为蓝色，可以看到：</p>\n<p>这是一次从192.168.4.32 发起的请求，在请求index.html页面<br>UA表名是linux的指令 wget v1.12<br>另一次为黄色，可以看到:</p>\n<ul>\n<li>192.168.3.90地址反馈说，500错误，内部服务器错误</li>\n<li>这台机器上安装的web应用软件是Tengine，但是没有显示版本</li>\n<li>web服务器上用到的PHP版本是7.0.13</li>\n</ul>\n"},{"title":"git常用命令","originContent":"","toc":true,"date":"2018-12-11T05:38:58.000Z","_content":"\ngit","source":"_posts/git常用命令.md","raw":"---\ntitle: git常用命令\ntags:\n  - 工具\noriginContent: ''\ncategories:\n  - 工具\ntoc: true\ndate: 2018-12-11 13:38:58\n---\n\ngit","slug":"git常用命令","published":1,"updated":"2018-12-18T08:00:18.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3et6000cyes63cpvyici","content":"<p>git</p>\n","site":{"data":{}},"excerpt":"","more":"<p>git</p>\n"},{"title":"vi文件编辑器使用","originContent":"","toc":true,"date":"2018-12-11T10:57:30.000Z","_content":"\n```language\n1.whereis:指定搜索什么样的文件\n      #whereis -b ls //搜索ls的二进制文件\n      #whereis -s ls //搜索ls的源码包文件\n\t\t#whereis -m ls #搜索ls的帮助文件\n\n2.locate 文件名 //搜索数据库文件，数据库文件存放在/var/lib/mlocate/文件夹下\n  1)手动更新库文件: # updatedb\n 2)自动更新:＃crond （计划任务）\n\n3.makewhatis:手动更新man手册\n\n－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－\n编辑器:joe nano vim vi \n\n1.vi文件编辑器使用  \n #vi 文件名   //对文本文件进行编辑\n   1）如果文件不存在则创建\n   2）如果文件存在则打开\n   3）文件没有在当前路径下要输入文件的绝对路径\n\n  三种模式:\n         1）一般模式：把一个文件用vi打开 #vi test.txt \n                 可做操作：复制，剪贴，删除，光标移动\n              11）光标移动：\n                      光标在行间跳转：\n                           方向键   \n          shift+g:文件末行    \n          gg:文件首行   \n          10gg：光标定位到10行\n \n                      光标在行内跳转：\n                            方向键   \n           end:行尾  \n           home:行首\n              22）删除：\n          dd:      删除光标所在的行\n          3dd:     从光标所在行开始删除3行\n          d1(数字)G:从光标所在行开始删除到文件行首的所有行\n          dG:      从光标所在行开始删除到文件行尾的所有行\n          u:       撤销删除\n\t\t\t ctrl+r:  取消撤销\n              33）复制：\n          yy:  复制光标所在行\n          3yy: 一起复制3行\n          y1G: 从光标所在行开始复制到文件行首的所有行\n          yG:  从光标所在行开始复制到文件行尾的所有行\n          p:   粘贴在光标所在行的下方\n          P：  粘贴在光标所在行的上方\n              44）剪切：dd+p\n                      \n        2）输入模式： 对文件内容进行编辑 ， 按i a o I A O s 都可进入输入模式\n         i:输入的内容在光标前\n         I：光标定位到行首\n         a:光标向后移一位\n         A:光标移到行尾\n         o：当前行的下方新起一行\n         O：当前行的上方新起一行\n         s:删除光标所在位置字符\n       3）末行模式：对文件的内容进行保存，另存为，查找，替换，搜索\n           进入末行模式: shift+:  /   ?  \n               /  ?  :搜索进入末行\n      shift+: ：另存为或保存进入末行\n      :w   保存\n      :q   退出\n      :wq  保存并退出\n      :wq! 强制保存并退出\n      :q!  不保存退出\n      :x  保存并退出\n      :X 保存加密码退出\n      :set nu 显示行号\n      :set nonu 取消行号\n      :r 路径/文件名  ： 导入文件内容（默认在光标所在行的下边）\n      :2r 路径/文件名  ：导入到第二行的下边\n      :w  路径/文件名   ：导出\n      :18,25W /tpm/a.txt：把文件18行到25行导出到a.txt下（a.txt文件不存在）\n      :set nohlsearch ：去掉高亮搜索\n      :set hlsearch   ：显示高亮搜索 \n      :set all    ：显示可用的所有选项\n      :s/源字符/新字符/[选项]  ：替换\n                       [选项] ：g 全局替换,(把所有匹配的都替换)\n               i 忽略大小写\n        :s/A/w/i #把光标所在行第一个匹配的A替换成w,不区分大小写\n        :s/A/w/ig #把把光标所在行A全局替换成w,不区分大小写\n        :%s/root/plj/g #把文件中所有root替换成plj\n        :3,4s/root/plj/ #把3到4行的root替换成plj\n        :%s/#//      #去掉文件中的注释\n        :30s/#// #把第30行#替换成空\n                   \n               搜索\n              从文件的上方向下方搜索 /directory #搜索directory\n              从文件的下方往上方搜索 ?directory \n     n:把光标定位到下一个匹配的字符上\n     N:把光标定位到上一个匹配的字符上\n             \n              执行命令： :! ls #查看当前目录是否有所保存的文件\n                \n            注：不能从输入模式到末行模式，从输入模式切换到一般模式，按ESC，然后在进入末行模式\n           \n         4）扩展命令\n       :files ：查看当前打开几个文件      \n       :next ：查看下一个打开的文件\n       :first ：回到第一个文件\n        5）一次打开多个文件： #vimdiff a.txt b.txt\n      ctrl+ww ：把光标切换到另一个窗口\n      #vimdiff -o a.txt b.txt  #水平分割 \n\n   6）vim区块模式：话块把光标定位到起始位置，按方向键划块\n         ctrl+v:一般模式下执行ctrl+v进入区块模式\n         d：删除\n         p:粘贴\n         y:复制\n         u:撤销\n      7）与vi相关的文件\n         #vim /root/.viminfo    #记录vim操作命令\n         #> /root/.viminfp #清理vim记录操作\n         # vim /root/.vimrc   #vim的配置文件，放在家目录下，\n            #默认不存在，先进行创建,一个功能占用一行\n            :set backup #自动生成备份文件\n            ###################################################\n          #.vimrc文件内容\n          :set nu\n          :set backup\n             ###################################################\n\n          文件的缓存文件:  .bak.txt.swp\n                  \n2.查看二进制文件:＃od 文件名\n\n3. 重定向 ：\n        ‘>’:覆盖重定向\n        ‘>>’:追加重定向\n    #head -20 /etc/passwd > ./test.txt  //把前20行输出到当前路径下的test.txt\n    #cat -b test.txt  //加行号查看\n\n4.#which vim  #查看软件是由那个文件提供 \n  #rpm -qf /usr/bin/vim  #查看软件由那个软件包提供\n```\n","source":"_posts/vi文件编辑器使用.md","raw":"---\ntitle: vi文件编辑器使用\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-11 18:57:30\n---\n\n```language\n1.whereis:指定搜索什么样的文件\n      #whereis -b ls //搜索ls的二进制文件\n      #whereis -s ls //搜索ls的源码包文件\n\t\t#whereis -m ls #搜索ls的帮助文件\n\n2.locate 文件名 //搜索数据库文件，数据库文件存放在/var/lib/mlocate/文件夹下\n  1)手动更新库文件: # updatedb\n 2)自动更新:＃crond （计划任务）\n\n3.makewhatis:手动更新man手册\n\n－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－\n编辑器:joe nano vim vi \n\n1.vi文件编辑器使用  \n #vi 文件名   //对文本文件进行编辑\n   1）如果文件不存在则创建\n   2）如果文件存在则打开\n   3）文件没有在当前路径下要输入文件的绝对路径\n\n  三种模式:\n         1）一般模式：把一个文件用vi打开 #vi test.txt \n                 可做操作：复制，剪贴，删除，光标移动\n              11）光标移动：\n                      光标在行间跳转：\n                           方向键   \n          shift+g:文件末行    \n          gg:文件首行   \n          10gg：光标定位到10行\n \n                      光标在行内跳转：\n                            方向键   \n           end:行尾  \n           home:行首\n              22）删除：\n          dd:      删除光标所在的行\n          3dd:     从光标所在行开始删除3行\n          d1(数字)G:从光标所在行开始删除到文件行首的所有行\n          dG:      从光标所在行开始删除到文件行尾的所有行\n          u:       撤销删除\n\t\t\t ctrl+r:  取消撤销\n              33）复制：\n          yy:  复制光标所在行\n          3yy: 一起复制3行\n          y1G: 从光标所在行开始复制到文件行首的所有行\n          yG:  从光标所在行开始复制到文件行尾的所有行\n          p:   粘贴在光标所在行的下方\n          P：  粘贴在光标所在行的上方\n              44）剪切：dd+p\n                      \n        2）输入模式： 对文件内容进行编辑 ， 按i a o I A O s 都可进入输入模式\n         i:输入的内容在光标前\n         I：光标定位到行首\n         a:光标向后移一位\n         A:光标移到行尾\n         o：当前行的下方新起一行\n         O：当前行的上方新起一行\n         s:删除光标所在位置字符\n       3）末行模式：对文件的内容进行保存，另存为，查找，替换，搜索\n           进入末行模式: shift+:  /   ?  \n               /  ?  :搜索进入末行\n      shift+: ：另存为或保存进入末行\n      :w   保存\n      :q   退出\n      :wq  保存并退出\n      :wq! 强制保存并退出\n      :q!  不保存退出\n      :x  保存并退出\n      :X 保存加密码退出\n      :set nu 显示行号\n      :set nonu 取消行号\n      :r 路径/文件名  ： 导入文件内容（默认在光标所在行的下边）\n      :2r 路径/文件名  ：导入到第二行的下边\n      :w  路径/文件名   ：导出\n      :18,25W /tpm/a.txt：把文件18行到25行导出到a.txt下（a.txt文件不存在）\n      :set nohlsearch ：去掉高亮搜索\n      :set hlsearch   ：显示高亮搜索 \n      :set all    ：显示可用的所有选项\n      :s/源字符/新字符/[选项]  ：替换\n                       [选项] ：g 全局替换,(把所有匹配的都替换)\n               i 忽略大小写\n        :s/A/w/i #把光标所在行第一个匹配的A替换成w,不区分大小写\n        :s/A/w/ig #把把光标所在行A全局替换成w,不区分大小写\n        :%s/root/plj/g #把文件中所有root替换成plj\n        :3,4s/root/plj/ #把3到4行的root替换成plj\n        :%s/#//      #去掉文件中的注释\n        :30s/#// #把第30行#替换成空\n                   \n               搜索\n              从文件的上方向下方搜索 /directory #搜索directory\n              从文件的下方往上方搜索 ?directory \n     n:把光标定位到下一个匹配的字符上\n     N:把光标定位到上一个匹配的字符上\n             \n              执行命令： :! ls #查看当前目录是否有所保存的文件\n                \n            注：不能从输入模式到末行模式，从输入模式切换到一般模式，按ESC，然后在进入末行模式\n           \n         4）扩展命令\n       :files ：查看当前打开几个文件      \n       :next ：查看下一个打开的文件\n       :first ：回到第一个文件\n        5）一次打开多个文件： #vimdiff a.txt b.txt\n      ctrl+ww ：把光标切换到另一个窗口\n      #vimdiff -o a.txt b.txt  #水平分割 \n\n   6）vim区块模式：话块把光标定位到起始位置，按方向键划块\n         ctrl+v:一般模式下执行ctrl+v进入区块模式\n         d：删除\n         p:粘贴\n         y:复制\n         u:撤销\n      7）与vi相关的文件\n         #vim /root/.viminfo    #记录vim操作命令\n         #> /root/.viminfp #清理vim记录操作\n         # vim /root/.vimrc   #vim的配置文件，放在家目录下，\n            #默认不存在，先进行创建,一个功能占用一行\n            :set backup #自动生成备份文件\n            ###################################################\n          #.vimrc文件内容\n          :set nu\n          :set backup\n             ###################################################\n\n          文件的缓存文件:  .bak.txt.swp\n                  \n2.查看二进制文件:＃od 文件名\n\n3. 重定向 ：\n        ‘>’:覆盖重定向\n        ‘>>’:追加重定向\n    #head -20 /etc/passwd > ./test.txt  //把前20行输出到当前路径下的test.txt\n    #cat -b test.txt  //加行号查看\n\n4.#which vim  #查看软件是由那个文件提供 \n  #rpm -qf /usr/bin/vim  #查看软件由那个软件包提供\n```\n","slug":"vi文件编辑器使用","published":1,"updated":"2018-12-18T08:00:18.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3et7000dyes603vq4jo7","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.whereis:指定搜索什么样的文件</span><br><span class=\"line\">      #whereis -b ls //搜索ls的二进制文件</span><br><span class=\"line\">      #whereis -s ls //搜索ls的源码包文件</span><br><span class=\"line\">\t\t#whereis -m ls #搜索ls的帮助文件</span><br><span class=\"line\"></span><br><span class=\"line\">2.locate 文件名 //搜索数据库文件，数据库文件存放在/var/lib/mlocate/文件夹下</span><br><span class=\"line\">  1)手动更新库文件: # updatedb</span><br><span class=\"line\"> 2)自动更新:＃crond （计划任务）</span><br><span class=\"line\"></span><br><span class=\"line\">3.makewhatis:手动更新man手册</span><br><span class=\"line\"></span><br><span class=\"line\">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class=\"line\">编辑器:joe nano vim vi </span><br><span class=\"line\"></span><br><span class=\"line\">1.vi文件编辑器使用  </span><br><span class=\"line\"> #vi 文件名   //对文本文件进行编辑</span><br><span class=\"line\">   1）如果文件不存在则创建</span><br><span class=\"line\">   2）如果文件存在则打开</span><br><span class=\"line\">   3）文件没有在当前路径下要输入文件的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">  三种模式:</span><br><span class=\"line\">         1）一般模式：把一个文件用vi打开 #vi test.txt </span><br><span class=\"line\">                 可做操作：复制，剪贴，删除，光标移动</span><br><span class=\"line\">              11）光标移动：</span><br><span class=\"line\">                      光标在行间跳转：</span><br><span class=\"line\">                           方向键   </span><br><span class=\"line\">          shift+g:文件末行    </span><br><span class=\"line\">          gg:文件首行   </span><br><span class=\"line\">          10gg：光标定位到10行</span><br><span class=\"line\"> </span><br><span class=\"line\">                      光标在行内跳转：</span><br><span class=\"line\">                            方向键   </span><br><span class=\"line\">           end:行尾  </span><br><span class=\"line\">           home:行首</span><br><span class=\"line\">              22）删除：</span><br><span class=\"line\">          dd:      删除光标所在的行</span><br><span class=\"line\">          3dd:     从光标所在行开始删除3行</span><br><span class=\"line\">          d1(数字)G:从光标所在行开始删除到文件行首的所有行</span><br><span class=\"line\">          dG:      从光标所在行开始删除到文件行尾的所有行</span><br><span class=\"line\">          u:       撤销删除</span><br><span class=\"line\">\t\t\t ctrl+r:  取消撤销</span><br><span class=\"line\">              33）复制：</span><br><span class=\"line\">          yy:  复制光标所在行</span><br><span class=\"line\">          3yy: 一起复制3行</span><br><span class=\"line\">          y1G: 从光标所在行开始复制到文件行首的所有行</span><br><span class=\"line\">          yG:  从光标所在行开始复制到文件行尾的所有行</span><br><span class=\"line\">          p:   粘贴在光标所在行的下方</span><br><span class=\"line\">          P：  粘贴在光标所在行的上方</span><br><span class=\"line\">              44）剪切：dd+p</span><br><span class=\"line\">                      </span><br><span class=\"line\">        2）输入模式： 对文件内容进行编辑 ， 按i a o I A O s 都可进入输入模式</span><br><span class=\"line\">         i:输入的内容在光标前</span><br><span class=\"line\">         I：光标定位到行首</span><br><span class=\"line\">         a:光标向后移一位</span><br><span class=\"line\">         A:光标移到行尾</span><br><span class=\"line\">         o：当前行的下方新起一行</span><br><span class=\"line\">         O：当前行的上方新起一行</span><br><span class=\"line\">         s:删除光标所在位置字符</span><br><span class=\"line\">       3）末行模式：对文件的内容进行保存，另存为，查找，替换，搜索</span><br><span class=\"line\">           进入末行模式: shift+:  /   ?  </span><br><span class=\"line\">               /  ?  :搜索进入末行</span><br><span class=\"line\">      shift+: ：另存为或保存进入末行</span><br><span class=\"line\">      :w   保存</span><br><span class=\"line\">      :q   退出</span><br><span class=\"line\">      :wq  保存并退出</span><br><span class=\"line\">      :wq! 强制保存并退出</span><br><span class=\"line\">      :q!  不保存退出</span><br><span class=\"line\">      :x  保存并退出</span><br><span class=\"line\">      :X 保存加密码退出</span><br><span class=\"line\">      :set nu 显示行号</span><br><span class=\"line\">      :set nonu 取消行号</span><br><span class=\"line\">      :r 路径/文件名  ： 导入文件内容（默认在光标所在行的下边）</span><br><span class=\"line\">      :2r 路径/文件名  ：导入到第二行的下边</span><br><span class=\"line\">      :w  路径/文件名   ：导出</span><br><span class=\"line\">      :18,25W /tpm/a.txt：把文件18行到25行导出到a.txt下（a.txt文件不存在）</span><br><span class=\"line\">      :set nohlsearch ：去掉高亮搜索</span><br><span class=\"line\">      :set hlsearch   ：显示高亮搜索 </span><br><span class=\"line\">      :set all    ：显示可用的所有选项</span><br><span class=\"line\">      :s/源字符/新字符/[选项]  ：替换</span><br><span class=\"line\">                       [选项] ：g 全局替换,(把所有匹配的都替换)</span><br><span class=\"line\">               i 忽略大小写</span><br><span class=\"line\">        :s/A/w/i #把光标所在行第一个匹配的A替换成w,不区分大小写</span><br><span class=\"line\">        :s/A/w/ig #把把光标所在行A全局替换成w,不区分大小写</span><br><span class=\"line\">        :%s/root/plj/g #把文件中所有root替换成plj</span><br><span class=\"line\">        :3,4s/root/plj/ #把3到4行的root替换成plj</span><br><span class=\"line\">        :%s/#//      #去掉文件中的注释</span><br><span class=\"line\">        :30s/#// #把第30行#替换成空</span><br><span class=\"line\">                   </span><br><span class=\"line\">               搜索</span><br><span class=\"line\">              从文件的上方向下方搜索 /directory #搜索directory</span><br><span class=\"line\">              从文件的下方往上方搜索 ?directory </span><br><span class=\"line\">     n:把光标定位到下一个匹配的字符上</span><br><span class=\"line\">     N:把光标定位到上一个匹配的字符上</span><br><span class=\"line\">             </span><br><span class=\"line\">              执行命令： :! ls #查看当前目录是否有所保存的文件</span><br><span class=\"line\">                </span><br><span class=\"line\">            注：不能从输入模式到末行模式，从输入模式切换到一般模式，按ESC，然后在进入末行模式</span><br><span class=\"line\">           </span><br><span class=\"line\">         4）扩展命令</span><br><span class=\"line\">       :files ：查看当前打开几个文件      </span><br><span class=\"line\">       :next ：查看下一个打开的文件</span><br><span class=\"line\">       :first ：回到第一个文件</span><br><span class=\"line\">        5）一次打开多个文件： #vimdiff a.txt b.txt</span><br><span class=\"line\">      ctrl+ww ：把光标切换到另一个窗口</span><br><span class=\"line\">      #vimdiff -o a.txt b.txt  #水平分割 </span><br><span class=\"line\"></span><br><span class=\"line\">   6）vim区块模式：话块把光标定位到起始位置，按方向键划块</span><br><span class=\"line\">         ctrl+v:一般模式下执行ctrl+v进入区块模式</span><br><span class=\"line\">         d：删除</span><br><span class=\"line\">         p:粘贴</span><br><span class=\"line\">         y:复制</span><br><span class=\"line\">         u:撤销</span><br><span class=\"line\">      7）与vi相关的文件</span><br><span class=\"line\">         #vim /root/.viminfo    #记录vim操作命令</span><br><span class=\"line\">         #&gt; /root/.viminfp #清理vim记录操作</span><br><span class=\"line\">         # vim /root/.vimrc   #vim的配置文件，放在家目录下，</span><br><span class=\"line\">            #默认不存在，先进行创建,一个功能占用一行</span><br><span class=\"line\">            :set backup #自动生成备份文件</span><br><span class=\"line\">            ###################################################</span><br><span class=\"line\">          #.vimrc文件内容</span><br><span class=\"line\">          :set nu</span><br><span class=\"line\">          :set backup</span><br><span class=\"line\">             ###################################################</span><br><span class=\"line\"></span><br><span class=\"line\">          文件的缓存文件:  .bak.txt.swp</span><br><span class=\"line\">                  </span><br><span class=\"line\">2.查看二进制文件:＃od 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">3. 重定向 ：</span><br><span class=\"line\">        ‘&gt;’:覆盖重定向</span><br><span class=\"line\">        ‘&gt;&gt;’:追加重定向</span><br><span class=\"line\">    #head -20 /etc/passwd &gt; ./test.txt  //把前20行输出到当前路径下的test.txt</span><br><span class=\"line\">    #cat -b test.txt  //加行号查看</span><br><span class=\"line\"></span><br><span class=\"line\">4.#which vim  #查看软件是由那个文件提供 </span><br><span class=\"line\">  #rpm -qf /usr/bin/vim  #查看软件由那个软件包提供</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.whereis:指定搜索什么样的文件</span><br><span class=\"line\">      #whereis -b ls //搜索ls的二进制文件</span><br><span class=\"line\">      #whereis -s ls //搜索ls的源码包文件</span><br><span class=\"line\">\t\t#whereis -m ls #搜索ls的帮助文件</span><br><span class=\"line\"></span><br><span class=\"line\">2.locate 文件名 //搜索数据库文件，数据库文件存放在/var/lib/mlocate/文件夹下</span><br><span class=\"line\">  1)手动更新库文件: # updatedb</span><br><span class=\"line\"> 2)自动更新:＃crond （计划任务）</span><br><span class=\"line\"></span><br><span class=\"line\">3.makewhatis:手动更新man手册</span><br><span class=\"line\"></span><br><span class=\"line\">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class=\"line\">编辑器:joe nano vim vi </span><br><span class=\"line\"></span><br><span class=\"line\">1.vi文件编辑器使用  </span><br><span class=\"line\"> #vi 文件名   //对文本文件进行编辑</span><br><span class=\"line\">   1）如果文件不存在则创建</span><br><span class=\"line\">   2）如果文件存在则打开</span><br><span class=\"line\">   3）文件没有在当前路径下要输入文件的绝对路径</span><br><span class=\"line\"></span><br><span class=\"line\">  三种模式:</span><br><span class=\"line\">         1）一般模式：把一个文件用vi打开 #vi test.txt </span><br><span class=\"line\">                 可做操作：复制，剪贴，删除，光标移动</span><br><span class=\"line\">              11）光标移动：</span><br><span class=\"line\">                      光标在行间跳转：</span><br><span class=\"line\">                           方向键   </span><br><span class=\"line\">          shift+g:文件末行    </span><br><span class=\"line\">          gg:文件首行   </span><br><span class=\"line\">          10gg：光标定位到10行</span><br><span class=\"line\"> </span><br><span class=\"line\">                      光标在行内跳转：</span><br><span class=\"line\">                            方向键   </span><br><span class=\"line\">           end:行尾  </span><br><span class=\"line\">           home:行首</span><br><span class=\"line\">              22）删除：</span><br><span class=\"line\">          dd:      删除光标所在的行</span><br><span class=\"line\">          3dd:     从光标所在行开始删除3行</span><br><span class=\"line\">          d1(数字)G:从光标所在行开始删除到文件行首的所有行</span><br><span class=\"line\">          dG:      从光标所在行开始删除到文件行尾的所有行</span><br><span class=\"line\">          u:       撤销删除</span><br><span class=\"line\">\t\t\t ctrl+r:  取消撤销</span><br><span class=\"line\">              33）复制：</span><br><span class=\"line\">          yy:  复制光标所在行</span><br><span class=\"line\">          3yy: 一起复制3行</span><br><span class=\"line\">          y1G: 从光标所在行开始复制到文件行首的所有行</span><br><span class=\"line\">          yG:  从光标所在行开始复制到文件行尾的所有行</span><br><span class=\"line\">          p:   粘贴在光标所在行的下方</span><br><span class=\"line\">          P：  粘贴在光标所在行的上方</span><br><span class=\"line\">              44）剪切：dd+p</span><br><span class=\"line\">                      </span><br><span class=\"line\">        2）输入模式： 对文件内容进行编辑 ， 按i a o I A O s 都可进入输入模式</span><br><span class=\"line\">         i:输入的内容在光标前</span><br><span class=\"line\">         I：光标定位到行首</span><br><span class=\"line\">         a:光标向后移一位</span><br><span class=\"line\">         A:光标移到行尾</span><br><span class=\"line\">         o：当前行的下方新起一行</span><br><span class=\"line\">         O：当前行的上方新起一行</span><br><span class=\"line\">         s:删除光标所在位置字符</span><br><span class=\"line\">       3）末行模式：对文件的内容进行保存，另存为，查找，替换，搜索</span><br><span class=\"line\">           进入末行模式: shift+:  /   ?  </span><br><span class=\"line\">               /  ?  :搜索进入末行</span><br><span class=\"line\">      shift+: ：另存为或保存进入末行</span><br><span class=\"line\">      :w   保存</span><br><span class=\"line\">      :q   退出</span><br><span class=\"line\">      :wq  保存并退出</span><br><span class=\"line\">      :wq! 强制保存并退出</span><br><span class=\"line\">      :q!  不保存退出</span><br><span class=\"line\">      :x  保存并退出</span><br><span class=\"line\">      :X 保存加密码退出</span><br><span class=\"line\">      :set nu 显示行号</span><br><span class=\"line\">      :set nonu 取消行号</span><br><span class=\"line\">      :r 路径/文件名  ： 导入文件内容（默认在光标所在行的下边）</span><br><span class=\"line\">      :2r 路径/文件名  ：导入到第二行的下边</span><br><span class=\"line\">      :w  路径/文件名   ：导出</span><br><span class=\"line\">      :18,25W /tpm/a.txt：把文件18行到25行导出到a.txt下（a.txt文件不存在）</span><br><span class=\"line\">      :set nohlsearch ：去掉高亮搜索</span><br><span class=\"line\">      :set hlsearch   ：显示高亮搜索 </span><br><span class=\"line\">      :set all    ：显示可用的所有选项</span><br><span class=\"line\">      :s/源字符/新字符/[选项]  ：替换</span><br><span class=\"line\">                       [选项] ：g 全局替换,(把所有匹配的都替换)</span><br><span class=\"line\">               i 忽略大小写</span><br><span class=\"line\">        :s/A/w/i #把光标所在行第一个匹配的A替换成w,不区分大小写</span><br><span class=\"line\">        :s/A/w/ig #把把光标所在行A全局替换成w,不区分大小写</span><br><span class=\"line\">        :%s/root/plj/g #把文件中所有root替换成plj</span><br><span class=\"line\">        :3,4s/root/plj/ #把3到4行的root替换成plj</span><br><span class=\"line\">        :%s/#//      #去掉文件中的注释</span><br><span class=\"line\">        :30s/#// #把第30行#替换成空</span><br><span class=\"line\">                   </span><br><span class=\"line\">               搜索</span><br><span class=\"line\">              从文件的上方向下方搜索 /directory #搜索directory</span><br><span class=\"line\">              从文件的下方往上方搜索 ?directory </span><br><span class=\"line\">     n:把光标定位到下一个匹配的字符上</span><br><span class=\"line\">     N:把光标定位到上一个匹配的字符上</span><br><span class=\"line\">             </span><br><span class=\"line\">              执行命令： :! ls #查看当前目录是否有所保存的文件</span><br><span class=\"line\">                </span><br><span class=\"line\">            注：不能从输入模式到末行模式，从输入模式切换到一般模式，按ESC，然后在进入末行模式</span><br><span class=\"line\">           </span><br><span class=\"line\">         4）扩展命令</span><br><span class=\"line\">       :files ：查看当前打开几个文件      </span><br><span class=\"line\">       :next ：查看下一个打开的文件</span><br><span class=\"line\">       :first ：回到第一个文件</span><br><span class=\"line\">        5）一次打开多个文件： #vimdiff a.txt b.txt</span><br><span class=\"line\">      ctrl+ww ：把光标切换到另一个窗口</span><br><span class=\"line\">      #vimdiff -o a.txt b.txt  #水平分割 </span><br><span class=\"line\"></span><br><span class=\"line\">   6）vim区块模式：话块把光标定位到起始位置，按方向键划块</span><br><span class=\"line\">         ctrl+v:一般模式下执行ctrl+v进入区块模式</span><br><span class=\"line\">         d：删除</span><br><span class=\"line\">         p:粘贴</span><br><span class=\"line\">         y:复制</span><br><span class=\"line\">         u:撤销</span><br><span class=\"line\">      7）与vi相关的文件</span><br><span class=\"line\">         #vim /root/.viminfo    #记录vim操作命令</span><br><span class=\"line\">         #&gt; /root/.viminfp #清理vim记录操作</span><br><span class=\"line\">         # vim /root/.vimrc   #vim的配置文件，放在家目录下，</span><br><span class=\"line\">            #默认不存在，先进行创建,一个功能占用一行</span><br><span class=\"line\">            :set backup #自动生成备份文件</span><br><span class=\"line\">            ###################################################</span><br><span class=\"line\">          #.vimrc文件内容</span><br><span class=\"line\">          :set nu</span><br><span class=\"line\">          :set backup</span><br><span class=\"line\">             ###################################################</span><br><span class=\"line\"></span><br><span class=\"line\">          文件的缓存文件:  .bak.txt.swp</span><br><span class=\"line\">                  </span><br><span class=\"line\">2.查看二进制文件:＃od 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">3. 重定向 ：</span><br><span class=\"line\">        ‘&gt;’:覆盖重定向</span><br><span class=\"line\">        ‘&gt;&gt;’:追加重定向</span><br><span class=\"line\">    #head -20 /etc/passwd &gt; ./test.txt  //把前20行输出到当前路径下的test.txt</span><br><span class=\"line\">    #cat -b test.txt  //加行号查看</span><br><span class=\"line\"></span><br><span class=\"line\">4.#which vim  #查看软件是由那个文件提供 </span><br><span class=\"line\">  #rpm -qf /usr/bin/vim  #查看软件由那个软件包提供</span><br></pre></td></tr></table></figure>\n"},{"title":"使用var关键字","originContent":"# 使用var关键字\n## 1.变量定义\n  #### 1) 使用var关键字\n    var a,b,c bool \n    var s1,s2 string = \"hello\", \"world\"\n    可放在函数内，或直接放在包内\n    使用var()集中定义变量\n\n  #### 2) 让编译器自动决定类型\n     var a,b,i,s1,s2 = true, false, 3, \"hello\", \"world\"\n\n  #### 3) 使用:=定义变量\n    a,b,i,s1,s2 := true, false, 3, \"hello\", \"world\"\n    只能在函数内使用\n    \n```\npackage main\n\nimport \"fmt\"\n\nvar (\n\taa = 33\n\tbb = \"kk\"\n\tss = true\n)\n\nfunc variableZeroValue() {\n\tvar a int\n\tvar s string\n\tfmt.Printf(\"%d %q\\n\", a, s)\n}\n\nfunc variableInitValue() {\n\tvar a, b int = 3, 4\n\tvar s string = \"abc\"\n\tfmt.Println(a, b, s)\n}\n\nfunc variableTypeDeduction()  {\n\tvar a, b, c, s = 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc variableShorter() {\n\ta, b, c, s := 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc main() {\n\tfmt.Println(\"Hello, world\")\n\tvariableZeroValue()\n\tvariableInitValue()\n\tvariableTypeDeduction()\n\tvariableShorter()\n\tfmt.Println(aa, bb, ss)\n}\n```","toc":true,"date":"2018-12-04T11:47:54.000Z","_content":"\n## 1.变量定义\n  #### 1) 使用var关键字\n    var a,b,c bool \n    var s1,s2 string = \"hello\", \"world\"\n    可放在函数内，或直接放在包内\n    使用var()集中定义变量\n\n  #### 2) 让编译器自动决定类型\n     var a,b,i,s1,s2 = true, false, 3, \"hello\", \"world\"\n\n  #### 3) 使用:=定义变量\n    a,b,i,s1,s2 := true, false, 3, \"hello\", \"world\"\n    只能在函数内使用\n    \n```\npackage main\n\nimport \"fmt\"\n\nvar (\n\taa = 33\n\tbb = \"kk\"\n\tss = true\n)\n\nfunc variableZeroValue() {\n\tvar a int\n\tvar s string\n\tfmt.Printf(\"%d %q\\n\", a, s)\n}\n\nfunc variableInitValue() {\n\tvar a, b int = 3, 4\n\tvar s string = \"abc\"\n\tfmt.Println(a, b, s)\n}\n\nfunc variableTypeDeduction()  {\n\tvar a, b, c, s = 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc variableShorter() {\n\ta, b, c, s := 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc main() {\n\tfmt.Println(\"Hello, world\")\n\tvariableZeroValue()\n\tvariableInitValue()\n\tvariableTypeDeduction()\n\tvariableShorter()\n\tfmt.Println(aa, bb, ss)\n}\n```","source":"_posts/使用var关键字.md","raw":"---\ntitle: 使用var关键字\ntags:\n  - go\noriginContent: \"# 使用var关键字\\n## 1.变量定义\\n  #### 1) 使用var关键字\\n    var a,b,c bool \\n    var s1,s2 string = \\\"hello\\\", \\\"world\\\"\\n    可放在函数内，或直接放在包内\\n    使用var()集中定义变量\\n\\n  #### 2) 让编译器自动决定类型\\n     var a,b,i,s1,s2 = true, false, 3, \\\"hello\\\", \\\"world\\\"\\n\\n  #### 3) 使用:=定义变量\\n    a,b,i,s1,s2 := true, false, 3, \\\"hello\\\", \\\"world\\\"\\n    只能在函数内使用\\n    \\n```\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\nvar (\\n\\taa = 33\\n\\tbb = \\\"kk\\\"\\n\\tss = true\\n)\\n\\nfunc variableZeroValue() {\\n\\tvar a int\\n\\tvar s string\\n\\tfmt.Printf(\\\"%d %q\\\\n\\\", a, s)\\n}\\n\\nfunc variableInitValue() {\\n\\tvar a, b int = 3, 4\\n\\tvar s string = \\\"abc\\\"\\n\\tfmt.Println(a, b, s)\\n}\\n\\nfunc variableTypeDeduction()  {\\n\\tvar a, b, c, s = 3, 4, true, \\\"def\\\"\\n\\tfmt.Println(a, b, c, s)\\n}\\n\\nfunc variableShorter() {\\n\\ta, b, c, s := 3, 4, true, \\\"def\\\"\\n\\tfmt.Println(a, b, c, s)\\n}\\n\\nfunc main() {\\n\\tfmt.Println(\\\"Hello, world\\\")\\n\\tvariableZeroValue()\\n\\tvariableInitValue()\\n\\tvariableTypeDeduction()\\n\\tvariableShorter()\\n\\tfmt.Println(aa, bb, ss)\\n}\\n```\"\ncategories:\n  - go\ntoc: true\ndate: 2018-12-04 19:47:54\n---\n\n## 1.变量定义\n  #### 1) 使用var关键字\n    var a,b,c bool \n    var s1,s2 string = \"hello\", \"world\"\n    可放在函数内，或直接放在包内\n    使用var()集中定义变量\n\n  #### 2) 让编译器自动决定类型\n     var a,b,i,s1,s2 = true, false, 3, \"hello\", \"world\"\n\n  #### 3) 使用:=定义变量\n    a,b,i,s1,s2 := true, false, 3, \"hello\", \"world\"\n    只能在函数内使用\n    \n```\npackage main\n\nimport \"fmt\"\n\nvar (\n\taa = 33\n\tbb = \"kk\"\n\tss = true\n)\n\nfunc variableZeroValue() {\n\tvar a int\n\tvar s string\n\tfmt.Printf(\"%d %q\\n\", a, s)\n}\n\nfunc variableInitValue() {\n\tvar a, b int = 3, 4\n\tvar s string = \"abc\"\n\tfmt.Println(a, b, s)\n}\n\nfunc variableTypeDeduction()  {\n\tvar a, b, c, s = 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc variableShorter() {\n\ta, b, c, s := 3, 4, true, \"def\"\n\tfmt.Println(a, b, c, s)\n}\n\nfunc main() {\n\tfmt.Println(\"Hello, world\")\n\tvariableZeroValue()\n\tvariableInitValue()\n\tvariableTypeDeduction()\n\tvariableShorter()\n\tfmt.Println(aa, bb, ss)\n}\n```","slug":"使用var关键字","published":1,"updated":"2018-12-18T08:00:18.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eta000iyes6qr3eozgr","content":"<h2 id=\"1-变量定义\"><a href=\"#1-变量定义\" class=\"headerlink\" title=\"1.变量定义\"></a>1.变量定义</h2><h4 id=\"1-使用var关键字\"><a href=\"#1-使用var关键字\" class=\"headerlink\" title=\"1) 使用var关键字\"></a>1) 使用var关键字</h4><pre><code>var a,b,c bool \nvar s1,s2 string = &quot;hello&quot;, &quot;world&quot;\n可放在函数内，或直接放在包内\n使用var()集中定义变量\n</code></pre><h4 id=\"2-让编译器自动决定类型\"><a href=\"#2-让编译器自动决定类型\" class=\"headerlink\" title=\"2) 让编译器自动决定类型\"></a>2) 让编译器自动决定类型</h4><pre><code>var a,b,i,s1,s2 = true, false, 3, &quot;hello&quot;, &quot;world&quot;\n</code></pre><h4 id=\"3-使用-定义变量\"><a href=\"#3-使用-定义变量\" class=\"headerlink\" title=\"3) 使用:=定义变量\"></a>3) 使用:=定义变量</h4><pre><code>a,b,i,s1,s2 := true, false, 3, &quot;hello&quot;, &quot;world&quot;\n只能在函数内使用\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var (</span><br><span class=\"line\">\taa = 33</span><br><span class=\"line\">\tbb = &quot;kk&quot;</span><br><span class=\"line\">\tss = true</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func variableZeroValue() &#123;</span><br><span class=\"line\">\tvar a int</span><br><span class=\"line\">\tvar s string</span><br><span class=\"line\">\tfmt.Printf(&quot;%d %q\\n&quot;, a, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableInitValue() &#123;</span><br><span class=\"line\">\tvar a, b int = 3, 4</span><br><span class=\"line\">\tvar s string = &quot;abc&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableTypeDeduction()  &#123;</span><br><span class=\"line\">\tvar a, b, c, s = 3, 4, true, &quot;def&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, c, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableShorter() &#123;</span><br><span class=\"line\">\ta, b, c, s := 3, 4, true, &quot;def&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, c, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tfmt.Println(&quot;Hello, world&quot;)</span><br><span class=\"line\">\tvariableZeroValue()</span><br><span class=\"line\">\tvariableInitValue()</span><br><span class=\"line\">\tvariableTypeDeduction()</span><br><span class=\"line\">\tvariableShorter()</span><br><span class=\"line\">\tfmt.Println(aa, bb, ss)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-变量定义\"><a href=\"#1-变量定义\" class=\"headerlink\" title=\"1.变量定义\"></a>1.变量定义</h2><h4 id=\"1-使用var关键字\"><a href=\"#1-使用var关键字\" class=\"headerlink\" title=\"1) 使用var关键字\"></a>1) 使用var关键字</h4><pre><code>var a,b,c bool \nvar s1,s2 string = &quot;hello&quot;, &quot;world&quot;\n可放在函数内，或直接放在包内\n使用var()集中定义变量\n</code></pre><h4 id=\"2-让编译器自动决定类型\"><a href=\"#2-让编译器自动决定类型\" class=\"headerlink\" title=\"2) 让编译器自动决定类型\"></a>2) 让编译器自动决定类型</h4><pre><code>var a,b,i,s1,s2 = true, false, 3, &quot;hello&quot;, &quot;world&quot;\n</code></pre><h4 id=\"3-使用-定义变量\"><a href=\"#3-使用-定义变量\" class=\"headerlink\" title=\"3) 使用:=定义变量\"></a>3) 使用:=定义变量</h4><pre><code>a,b,i,s1,s2 := true, false, 3, &quot;hello&quot;, &quot;world&quot;\n只能在函数内使用\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import &quot;fmt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">var (</span><br><span class=\"line\">\taa = 33</span><br><span class=\"line\">\tbb = &quot;kk&quot;</span><br><span class=\"line\">\tss = true</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func variableZeroValue() &#123;</span><br><span class=\"line\">\tvar a int</span><br><span class=\"line\">\tvar s string</span><br><span class=\"line\">\tfmt.Printf(&quot;%d %q\\n&quot;, a, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableInitValue() &#123;</span><br><span class=\"line\">\tvar a, b int = 3, 4</span><br><span class=\"line\">\tvar s string = &quot;abc&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableTypeDeduction()  &#123;</span><br><span class=\"line\">\tvar a, b, c, s = 3, 4, true, &quot;def&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, c, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func variableShorter() &#123;</span><br><span class=\"line\">\ta, b, c, s := 3, 4, true, &quot;def&quot;</span><br><span class=\"line\">\tfmt.Println(a, b, c, s)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tfmt.Println(&quot;Hello, world&quot;)</span><br><span class=\"line\">\tvariableZeroValue()</span><br><span class=\"line\">\tvariableInitValue()</span><br><span class=\"line\">\tvariableTypeDeduction()</span><br><span class=\"line\">\tvariableShorter()</span><br><span class=\"line\">\tfmt.Println(aa, bb, ss)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"内建变量类型","originContent":"## 内建变量类型\n  #### 1）bool, string\n  #### 2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\n    int :　　依赖不同平台下的实现，可以是int32或int64\n    int8 :　　　　　　　　　　 (-128　　->　　127)\n    int16: 　　　　　　　　　　(-32768　　->　　32767)\n    int32:　　　　　　　　　　 (-2 147 483 648　　->　　2 147 483 647)\n    int64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　->　　9 223 372 036 854 775 807)\n\n    unit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\n    unit8 (又名byte):　　　　 (0　　->　　255)\n    unit16 :　　　　　　　　   (0　　->　　65535)\n    unit32 (又名rune):　　　  (0　　->　　4 294 967 295)\n    unit64 :　　　　　　　　   (0　　->　　18 446 744 073 709 551 615)\n    unitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\n  #### 3）byte, rune\n      byte 等同于int8，常用来处理ascii字符\n      rune 等同于int32,常用来处理unicode或utf-8字符\n  #### 4) float32, float64, complex64, complex128\n     float32　　　　　　　　(-3.402...×1038　　->　　3.402...×1038)\n     float64　　　　　　　　(-1.797...×10308　　->　　+1.797...×10308)\n     complex64　　　　　　 ( 实部、虚部都是一个float32 )\n     complex128　　　　　  ( 实部、虚部都是一个float64 )\n\n     复数\n     i = √-1 \n     复数：3 + 4i\n          实部 虚部\n          \n\n\n```\nfunc euler() {\n\t//c := 3 + 4i\n\t//fmt.Println(cmplx.Abs(c))\n\tfmt.Println(\n\t\tcmplx.Exp(1i * math.Pi) + 1)\n\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)\n}\n\n```","toc":true,"date":"2018-12-04T11:48:52.000Z","_content":"\n  #### 1）bool, string\n  #### 2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\n    int :　　依赖不同平台下的实现，可以是int32或int64\n    int8 :　　　　　　　　　　 (-128　　->　　127)\n    int16: 　　　　　　　　　　(-32768　　->　　32767)\n    int32:　　　　　　　　　　 (-2 147 483 648　　->　　2 147 483 647)\n    int64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　->　　9 223 372 036 854 775 807)\n\n    unit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\n    unit8 (又名byte):　　　　 (0　　->　　255)\n    unit16 :　　　　　　　　   (0　　->　　65535)\n    unit32 (又名rune):　　　  (0　　->　　4 294 967 295)\n    unit64 :　　　　　　　　   (0　　->　　18 446 744 073 709 551 615)\n    unitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\n  #### 3）byte, rune\n      byte 等同于int8，常用来处理ascii字符\n      rune 等同于int32,常用来处理unicode或utf-8字符\n  #### 4) float32, float64, complex64, complex128\n     float32　　　　　　　　(-3.402...×1038　　->　　3.402...×1038)\n     float64　　　　　　　　(-1.797...×10308　　->　　+1.797...×10308)\n     complex64　　　　　　 ( 实部、虚部都是一个float32 )\n     complex128　　　　　  ( 实部、虚部都是一个float64 )\n\n     复数\n     i = √-1 \n     复数：3 + 4i\n          实部 虚部\n          \n\n\n```\nfunc euler() {\n\t//c := 3 + 4i\n\t//fmt.Println(cmplx.Abs(c))\n\tfmt.Println(\n\t\tcmplx.Exp(1i * math.Pi) + 1)\n\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)\n}\n\n```","source":"_posts/内建变量类型.md","raw":"---\ntitle: 内建变量类型\ntags:\n  - go\noriginContent: \"## 内建变量类型\\n  #### 1）bool, string\\n  #### 2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\\n    int :　　依赖不同平台下的实现，可以是int32或int64\\n    int8 :　　　　　　　　　　 (-128　　->　　127)\\n    int16: 　　　　　　　　　　(-32768　　->　　32767)\\n    int32:　　　　　　　　　　 (-2 147 483 648　　->　　2 147 483 647)\\n    int64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　->　　9 223 372 036 854 775 807)\\n\\n    unit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\\n    unit8 (又名byte):　　　　 (0　　->　　255)\\n    unit16 :　　　　　　　　   (0　　->　　65535)\\n    unit32 (又名rune):　　　  (0　　->　　4 294 967 295)\\n    unit64 :　　　　　　　　   (0　　->　　18 446 744 073 709 551 615)\\n    unitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\\n  #### 3）byte, rune\\n      byte 等同于int8，常用来处理ascii字符\\n      rune 等同于int32,常用来处理unicode或utf-8字符\\n  #### 4) float32, float64, complex64, complex128\\n     float32　　　　　　　　(-3.402...×1038　　->　　3.402...×1038)\\n     float64　　　　　　　　(-1.797...×10308　　->　　+1.797...×10308)\\n     complex64　　　　　　 ( 实部、虚部都是一个float32 )\\n     complex128　　　　　  ( 实部、虚部都是一个float64 )\\n\\n     复数\\n     i = √-1 \\n     复数：3 + 4i\\n          实部 虚部\\n          \\n\\n\\n```\\nfunc euler() {\\n\\t//c := 3 + 4i\\n\\t//fmt.Println(cmplx.Abs(c))\\n\\tfmt.Println(\\n\\t\\tcmplx.Exp(1i * math.Pi) + 1)\\n\\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)\\n}\\n\\n```\"\ncategories:\n  - go\ntoc: true\ndate: 2018-12-04 19:48:52\n---\n\n  #### 1）bool, string\n  #### 2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\n    int :　　依赖不同平台下的实现，可以是int32或int64\n    int8 :　　　　　　　　　　 (-128　　->　　127)\n    int16: 　　　　　　　　　　(-32768　　->　　32767)\n    int32:　　　　　　　　　　 (-2 147 483 648　　->　　2 147 483 647)\n    int64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　->　　9 223 372 036 854 775 807)\n\n    unit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\n    unit8 (又名byte):　　　　 (0　　->　　255)\n    unit16 :　　　　　　　　   (0　　->　　65535)\n    unit32 (又名rune):　　　  (0　　->　　4 294 967 295)\n    unit64 :　　　　　　　　   (0　　->　　18 446 744 073 709 551 615)\n    unitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\n  #### 3）byte, rune\n      byte 等同于int8，常用来处理ascii字符\n      rune 等同于int32,常用来处理unicode或utf-8字符\n  #### 4) float32, float64, complex64, complex128\n     float32　　　　　　　　(-3.402...×1038　　->　　3.402...×1038)\n     float64　　　　　　　　(-1.797...×10308　　->　　+1.797...×10308)\n     complex64　　　　　　 ( 实部、虚部都是一个float32 )\n     complex128　　　　　  ( 实部、虚部都是一个float64 )\n\n     复数\n     i = √-1 \n     复数：3 + 4i\n          实部 虚部\n          \n\n\n```\nfunc euler() {\n\t//c := 3 + 4i\n\t//fmt.Println(cmplx.Abs(c))\n\tfmt.Println(\n\t\tcmplx.Exp(1i * math.Pi) + 1)\n\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)\n}\n\n```","slug":"内建变量类型","published":1,"updated":"2018-12-18T08:00:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etc000kyes6jzviy0k0","content":"<h4 id=\"1）bool-string\"><a href=\"#1）bool-string\" class=\"headerlink\" title=\"1）bool, string\"></a>1）bool, string</h4><h4 id=\"2-u-int-u-int8-u-int16-u-int32-u-int64-uintptr-【u代表无符号整型】\"><a href=\"#2-u-int-u-int8-u-int16-u-int32-u-int64-uintptr-【u代表无符号整型】\" class=\"headerlink\" title=\"2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\"></a>2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】</h4><pre><code>int :　　依赖不同平台下的实现，可以是int32或int64\nint8 :　　　　　　　　　　 (-128　　-&gt;　　127)\nint16: 　　　　　　　　　　(-32768　　-&gt;　　32767)\nint32:　　　　　　　　　　 (-2 147 483 648　　-&gt;　　2 147 483 647)\nint64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　-&gt;　　9 223 372 036 854 775 807)\n\nunit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\nunit8 (又名byte):　　　　 (0　　-&gt;　　255)\nunit16 :　　　　　　　　   (0　　-&gt;　　65535)\nunit32 (又名rune):　　　  (0　　-&gt;　　4 294 967 295)\nunit64 :　　　　　　　　   (0　　-&gt;　　18 446 744 073 709 551 615)\nunitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\n</code></pre><h4 id=\"3）byte-rune\"><a href=\"#3）byte-rune\" class=\"headerlink\" title=\"3）byte, rune\"></a>3）byte, rune</h4><pre><code>byte 等同于int8，常用来处理ascii字符\nrune 等同于int32,常用来处理unicode或utf-8字符\n</code></pre><h4 id=\"4-float32-float64-complex64-complex128\"><a href=\"#4-float32-float64-complex64-complex128\" class=\"headerlink\" title=\"4) float32, float64, complex64, complex128\"></a>4) float32, float64, complex64, complex128</h4><pre><code>float32　　　　　　　　(-3.402...×1038　　-&gt;　　3.402...×1038)\nfloat64　　　　　　　　(-1.797...×10308　　-&gt;　　+1.797...×10308)\ncomplex64　　　　　　 ( 实部、虚部都是一个float32 )\ncomplex128　　　　　  ( 实部、虚部都是一个float64 )\n\n复数\ni = √-1 \n复数：3 + 4i\n     实部 虚部\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func euler() &#123;</span><br><span class=\"line\">\t//c := 3 + 4i</span><br><span class=\"line\">\t//fmt.Println(cmplx.Abs(c))</span><br><span class=\"line\">\tfmt.Println(</span><br><span class=\"line\">\t\tcmplx.Exp(1i * math.Pi) + 1)</span><br><span class=\"line\">\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1）bool-string\"><a href=\"#1）bool-string\" class=\"headerlink\" title=\"1）bool, string\"></a>1）bool, string</h4><h4 id=\"2-u-int-u-int8-u-int16-u-int32-u-int64-uintptr-【u代表无符号整型】\"><a href=\"#2-u-int-u-int8-u-int16-u-int32-u-int64-uintptr-【u代表无符号整型】\" class=\"headerlink\" title=\"2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】\"></a>2) (u)int, (u)int8, (u)int16, (u)int32, (u)int64, uintptr 【u代表无符号整型】</h4><pre><code>int :　　依赖不同平台下的实现，可以是int32或int64\nint8 :　　　　　　　　　　 (-128　　-&gt;　　127)\nint16: 　　　　　　　　　　(-32768　　-&gt;　　32767)\nint32:　　　　　　　　　　 (-2 147 483 648　　-&gt;　　2 147 483 647)\nint64 :　　　　　　　　　　(-9 223 372 036 854 775 808　　-&gt;　　9 223 372 036 854 775 807)\n\nunit :　　　　　　　　　　 依赖不同平台下的实现，可以是int32或int64\nunit8 (又名byte):　　　　 (0　　-&gt;　　255)\nunit16 :　　　　　　　　   (0　　-&gt;　　65535)\nunit32 (又名rune):　　　  (0　　-&gt;　　4 294 967 295)\nunit64 :　　　　　　　　   (0　　-&gt;　　18 446 744 073 709 551 615)\nunitptr : 　　　　　　　　 恰好容纳指针值的类型，对32位平台是unit32，对64位平台是unit64\n</code></pre><h4 id=\"3）byte-rune\"><a href=\"#3）byte-rune\" class=\"headerlink\" title=\"3）byte, rune\"></a>3）byte, rune</h4><pre><code>byte 等同于int8，常用来处理ascii字符\nrune 等同于int32,常用来处理unicode或utf-8字符\n</code></pre><h4 id=\"4-float32-float64-complex64-complex128\"><a href=\"#4-float32-float64-complex64-complex128\" class=\"headerlink\" title=\"4) float32, float64, complex64, complex128\"></a>4) float32, float64, complex64, complex128</h4><pre><code>float32　　　　　　　　(-3.402...×1038　　-&gt;　　3.402...×1038)\nfloat64　　　　　　　　(-1.797...×10308　　-&gt;　　+1.797...×10308)\ncomplex64　　　　　　 ( 实部、虚部都是一个float32 )\ncomplex128　　　　　  ( 实部、虚部都是一个float64 )\n\n复数\ni = √-1 \n复数：3 + 4i\n     实部 虚部\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func euler() &#123;</span><br><span class=\"line\">\t//c := 3 + 4i</span><br><span class=\"line\">\t//fmt.Println(cmplx.Abs(c))</span><br><span class=\"line\">\tfmt.Println(</span><br><span class=\"line\">\t\tcmplx.Exp(1i * math.Pi) + 1)</span><br><span class=\"line\">\t//cmplx.Pow(math.E, 1i * math.Pi) + 1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[全局监控] dstat","originContent":"> dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。\n\ndstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。\n\ndstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。\n\ndstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。\n\n安装指南\n```language\nyum install dstat\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&system=centos\n\n使用指南\n```language\ndstat -tlcdmsnp --tcp\n```\n效果说明\n![](/images/image2018-11-25_20-30-37-2.png)\n\n-tlcdmsnp 的参数我们可以拆解为:\n|参数|说明|\n|-|-|\n|-t\t|显示该行数据监控时的当前时间|\n|-l      |显示负载统计量|\n|-c\t|显示CPU使用率（包括usr，sys，idl等值）|\n|-d\t|显示磁盘读写率|\n|-m\t|显示内存使用率(包括used，buffer，cache，free值)|\n|-s\t|显示交换分区使用率|\n|-n\t|显示带宽使用量|\n|-p\t|显示进程统计量(包括run，blk，new值)|\n|--tcp   |显示tcp请求的状态统计量|","toc":true,"date":"2018-12-06T03:43:59.000Z","_content":"\n> dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。\n\ndstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。\n\ndstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。\n\ndstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。\n\n#### 安装指南\n```language\nyum install dstat\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&system=centos\n\n#### 使用指南\n```language\ndstat -tlcdmsnp --tcp\n```\n#### 效果说明\n![](/images/image2018-11-25_20-30-37-2.png)\n\n-tlcdmsnp 的参数我们可以拆解为:\n|参数|说明|\n|-|-|\n|-t\t|显示该行数据监控时的当前时间|\n|-l      |显示负载统计量|\n|-c\t|显示CPU使用率（包括usr，sys，idl等值）|\n|-d\t|显示磁盘读写率|\n|-m\t|显示内存使用率(包括used，buffer，cache，free值)|\n|-s\t|显示交换分区使用率|\n|-n\t|显示带宽使用量|\n|-p\t|显示进程统计量(包括run，blk，new值)|\n|--tcp   |显示tcp请求的状态统计量|","source":"_posts/全局监控-dstat.md","raw":"---\ntitle: '[全局监控] dstat'\ntags:\n  - 服务器\noriginContent: \"> dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。\\n\\ndstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。\\n\\ndstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。\\n\\ndstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。\\n\\n安装指南\\n```language\\nyum install dstat\\n```\\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&system=centos\\n\\n使用指南\\n```language\\ndstat -tlcdmsnp --tcp\\n```\\n效果说明\\n![](/images/image2018-11-25_20-30-37-2.png)\\n\\n-tlcdmsnp 的参数我们可以拆解为:\\n|参数|说明|\\n|-|-|\\n|-t\\t|显示该行数据监控时的当前时间|\\n|-l      |显示负载统计量|\\n|-c\\t|显示CPU使用率（包括usr，sys，idl等值）|\\n|-d\\t|显示磁盘读写率|\\n|-m\\t|显示内存使用率(包括used，buffer，cache，free值)|\\n|-s\\t|显示交换分区使用率|\\n|-n\\t|显示带宽使用量|\\n|-p\\t|显示进程统计量(包括run，blk，new值)|\\n|--tcp   |显示tcp请求的状态统计量|\"\ncategories:\n  - 服务器\ntoc: true\ndate: 2018-12-06 11:43:59\n---\n\n> dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。\n\ndstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。\n\ndstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。\n\ndstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。\n\n#### 安装指南\n```language\nyum install dstat\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&system=centos\n\n#### 使用指南\n```language\ndstat -tlcdmsnp --tcp\n```\n#### 效果说明\n![](/images/image2018-11-25_20-30-37-2.png)\n\n-tlcdmsnp 的参数我们可以拆解为:\n|参数|说明|\n|-|-|\n|-t\t|显示该行数据监控时的当前时间|\n|-l      |显示负载统计量|\n|-c\t|显示CPU使用率（包括usr，sys，idl等值）|\n|-d\t|显示磁盘读写率|\n|-m\t|显示内存使用率(包括used，buffer，cache，free值)|\n|-s\t|显示交换分区使用率|\n|-n\t|显示带宽使用量|\n|-p\t|显示进程统计量(包括run，blk，new值)|\n|--tcp   |显示tcp请求的状态统计量|","slug":"全局监控-dstat","published":1,"updated":"2018-12-18T08:00:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3ete000oyes60n3xjugr","content":"<blockquote>\n<p>dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。</p>\n</blockquote>\n<p>dstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。</p>\n<p>dstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。</p>\n<p>dstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。</p>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install dstat</span><br></pre></td></tr></table></figure>\n<p>如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，<a href=\"https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&amp;system=centos\" target=\"_blank\" rel=\"noopener\">https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&amp;system=centos</a></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dstat -tlcdmsnp --tcp</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-30-37-2.png\" alt></p>\n<p>-tlcdmsnp 的参数我们可以拆解为:<br>|参数|说明|<br>|-|-|<br>|-t    |显示该行数据监控时的当前时间|<br>|-l      |显示负载统计量|<br>|-c    |显示CPU使用率（包括usr，sys，idl等值）|<br>|-d    |显示磁盘读写率|<br>|-m    |显示内存使用率(包括used，buffer，cache，free值)|<br>|-s    |显示交换分区使用率|<br>|-n    |显示带宽使用量|<br>|-p    |显示进程统计量(包括run，blk，new值)|<br>|–tcp   |显示tcp请求的状态统计量|</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品。dstat克服了这些命令的局限并增加了一些另外的功能， 增加了监控项，也变得更灵活了。dstat可以很方便监控系统运行状况并用于基准测试和排除故障。</p>\n</blockquote>\n<p>dstat可以让你实时地看到所有系统资源，例如，你能够通过统计IDE控制器当前状态来比较磁盘利用率，或者直接通过网络带宽数值来比 较磁盘的吞吐率(在相同的时间间隔内)。</p>\n<p>dstat将以列表的形式为你提供选项信息并清晰地告诉你是在何种幅度和单位显示输出。这样更好地避免了信息混乱和误报。更重要的 是，它可以让你更容易编写插件来收集你想要的数据信息，以从未有过的方式进行扩展。</p>\n<p>dstat的默认输出是专门为人们实时查看而设计的，不过你也可以将详细信息通过CSV输出到一个文件，并导入到Gnumeric或者Excel生 成表格中。</p>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install dstat</span><br></pre></td></tr></table></figure>\n<p>如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，<a href=\"https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&amp;system=centos\" target=\"_blank\" rel=\"noopener\">https://www.rpmfind.net/linux/rpm2html/search.php?query=dstat&amp;system=centos</a></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dstat -tlcdmsnp --tcp</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-30-37-2.png\" alt></p>\n<p>-tlcdmsnp 的参数我们可以拆解为:<br>|参数|说明|<br>|-|-|<br>|-t    |显示该行数据监控时的当前时间|<br>|-l      |显示负载统计量|<br>|-c    |显示CPU使用率（包括usr，sys，idl等值）|<br>|-d    |显示磁盘读写率|<br>|-m    |显示内存使用率(包括used，buffer，cache，free值)|<br>|-s    |显示交换分区使用率|<br>|-n    |显示带宽使用量|<br>|-p    |显示进程统计量(包括run，blk，new值)|<br>|–tcp   |显示tcp请求的状态统计量|</p>\n"},{"title":"常量定义和枚举类型","originContent":"","toc":true,"date":"2018-12-04T12:10:07.000Z","_content":"\n### 常量定义\n\n  ```\n  const filename = \"abc.txt\"\n  const 数值可作为各种类型使用\n  const a, b = 3, 4\n  var c int = int(math.Sqrt(a*a + b*b))\n  ```\n  \n  ```\n  func consts() {\n\tconst (\n\t\tfilename = \"abc.txt\"\n\t    a, b  = 3, 4\n\t)\n\tvar c int\n\tc = int(math.Sqrt(a*a + b*b))\n\tfmt.Println(filename, c)\n}\n  ```\n  \n###  枚举类型\n\n ```\n func enums()  {\n\t//const (  //普通枚举\n\t//\tcpp = 0\n\t//\tjava = 1\n\t//\tpython = 2\n\t//\tgolang = 3\n\t//)\n\n\tconst (\n\t\tcpp = iota  //自增\n\t\tjava\n\t\tpython\n\t\tgolang\n\t\tjavascript\n\t)\n\n\tconst (  //自增枚举\n\t\tb = 1 << (10 * iota)\n\t\tkb\n\t\tmb\n\t\tgb\n\t\ttb\n\t\tpb\n\t)\n\tfmt.Println(cpp, java, python, golang, javascript)\n\tfmt.Println(b, kb, gb, tb, pb)\n}\n\n ```","source":"_posts/常量定义和枚举类型.md","raw":"---\ntitle: 常量定义和枚举类型\ntags:\n  - go\noriginContent: ''\ncategories:\n  - go\ntoc: true\ndate: 2018-12-04 20:10:07\n---\n\n### 常量定义\n\n  ```\n  const filename = \"abc.txt\"\n  const 数值可作为各种类型使用\n  const a, b = 3, 4\n  var c int = int(math.Sqrt(a*a + b*b))\n  ```\n  \n  ```\n  func consts() {\n\tconst (\n\t\tfilename = \"abc.txt\"\n\t    a, b  = 3, 4\n\t)\n\tvar c int\n\tc = int(math.Sqrt(a*a + b*b))\n\tfmt.Println(filename, c)\n}\n  ```\n  \n###  枚举类型\n\n ```\n func enums()  {\n\t//const (  //普通枚举\n\t//\tcpp = 0\n\t//\tjava = 1\n\t//\tpython = 2\n\t//\tgolang = 3\n\t//)\n\n\tconst (\n\t\tcpp = iota  //自增\n\t\tjava\n\t\tpython\n\t\tgolang\n\t\tjavascript\n\t)\n\n\tconst (  //自增枚举\n\t\tb = 1 << (10 * iota)\n\t\tkb\n\t\tmb\n\t\tgb\n\t\ttb\n\t\tpb\n\t)\n\tfmt.Println(cpp, java, python, golang, javascript)\n\tfmt.Println(b, kb, gb, tb, pb)\n}\n\n ```","slug":"常量定义和枚举类型","published":1,"updated":"2018-12-18T08:00:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etf000ryes63zoall9a","content":"<h3 id=\"常量定义\"><a href=\"#常量定义\" class=\"headerlink\" title=\"常量定义\"></a>常量定义</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const filename = &quot;abc.txt&quot;</span><br><span class=\"line\">const 数值可作为各种类型使用</span><br><span class=\"line\">const a, b = 3, 4</span><br><span class=\"line\">var c int = int(math.Sqrt(a*a + b*b))</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  func consts() &#123;</span><br><span class=\"line\">\tconst (</span><br><span class=\"line\">\t\tfilename = &quot;abc.txt&quot;</span><br><span class=\"line\">\t    a, b  = 3, 4</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tvar c int</span><br><span class=\"line\">\tc = int(math.Sqrt(a*a + b*b))</span><br><span class=\"line\">\tfmt.Println(filename, c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"枚举类型\"><a href=\"#枚举类型\" class=\"headerlink\" title=\"枚举类型\"></a>枚举类型</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> func enums()  &#123;</span><br><span class=\"line\">\t//const (  //普通枚举</span><br><span class=\"line\">\t//\tcpp = 0</span><br><span class=\"line\">\t//\tjava = 1</span><br><span class=\"line\">\t//\tpython = 2</span><br><span class=\"line\">\t//\tgolang = 3</span><br><span class=\"line\">\t//)</span><br><span class=\"line\"></span><br><span class=\"line\">\tconst (</span><br><span class=\"line\">\t\tcpp = iota  //自增</span><br><span class=\"line\">\t\tjava</span><br><span class=\"line\">\t\tpython</span><br><span class=\"line\">\t\tgolang</span><br><span class=\"line\">\t\tjavascript</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tconst (  //自增枚举</span><br><span class=\"line\">\t\tb = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">\t\tkb</span><br><span class=\"line\">\t\tmb</span><br><span class=\"line\">\t\tgb</span><br><span class=\"line\">\t\ttb</span><br><span class=\"line\">\t\tpb</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tfmt.Println(cpp, java, python, golang, javascript)</span><br><span class=\"line\">\tfmt.Println(b, kb, gb, tb, pb)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"常量定义\"><a href=\"#常量定义\" class=\"headerlink\" title=\"常量定义\"></a>常量定义</h3>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const filename = &quot;abc.txt&quot;</span><br><span class=\"line\">const 数值可作为各种类型使用</span><br><span class=\"line\">const a, b = 3, 4</span><br><span class=\"line\">var c int = int(math.Sqrt(a*a + b*b))</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  func consts() &#123;</span><br><span class=\"line\">\tconst (</span><br><span class=\"line\">\t\tfilename = &quot;abc.txt&quot;</span><br><span class=\"line\">\t    a, b  = 3, 4</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tvar c int</span><br><span class=\"line\">\tc = int(math.Sqrt(a*a + b*b))</span><br><span class=\"line\">\tfmt.Println(filename, c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"枚举类型\"><a href=\"#枚举类型\" class=\"headerlink\" title=\"枚举类型\"></a>枚举类型</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> func enums()  &#123;</span><br><span class=\"line\">\t//const (  //普通枚举</span><br><span class=\"line\">\t//\tcpp = 0</span><br><span class=\"line\">\t//\tjava = 1</span><br><span class=\"line\">\t//\tpython = 2</span><br><span class=\"line\">\t//\tgolang = 3</span><br><span class=\"line\">\t//)</span><br><span class=\"line\"></span><br><span class=\"line\">\tconst (</span><br><span class=\"line\">\t\tcpp = iota  //自增</span><br><span class=\"line\">\t\tjava</span><br><span class=\"line\">\t\tpython</span><br><span class=\"line\">\t\tgolang</span><br><span class=\"line\">\t\tjavascript</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tconst (  //自增枚举</span><br><span class=\"line\">\t\tb = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">\t\tkb</span><br><span class=\"line\">\t\tmb</span><br><span class=\"line\">\t\tgb</span><br><span class=\"line\">\t\ttb</span><br><span class=\"line\">\t\tpb</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tfmt.Println(cpp, java, python, golang, javascript)</span><br><span class=\"line\">\tfmt.Println(b, kb, gb, tb, pb)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"强制类型转换","originContent":"","toc":true,"date":"2018-12-04T12:09:41.000Z","_content":"\n   #### 1）类型转换是强制的\n     var a, b int = 3, 4\n     var c int = math.Sqrt(a*a + b*b)  X\n     var c = int(math.Sqrt(float64(a * a + b * b)))\n     \n     \n\n```\nfunc truangle() {\n\tvar a, b int = 3, 4\n\tvar c int\n\tc = int(math.Sqrt(float64(a * a + b * b)))\n\tfmt.Println(c)\n}\n\n```","source":"_posts/强制类型转换.md","raw":"---\ntitle: 强制类型转换\ntags:\n  - go\noriginContent: ''\ncategories:\n  - go\ntoc: true\ndate: 2018-12-04 20:09:41\n---\n\n   #### 1）类型转换是强制的\n     var a, b int = 3, 4\n     var c int = math.Sqrt(a*a + b*b)  X\n     var c = int(math.Sqrt(float64(a * a + b * b)))\n     \n     \n\n```\nfunc truangle() {\n\tvar a, b int = 3, 4\n\tvar c int\n\tc = int(math.Sqrt(float64(a * a + b * b)))\n\tfmt.Println(c)\n}\n\n```","slug":"强制类型转换","published":1,"updated":"2018-12-18T08:00:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etg000vyes6iyfdtdb2","content":"<h4 id=\"1）类型转换是强制的\"><a href=\"#1）类型转换是强制的\" class=\"headerlink\" title=\"1）类型转换是强制的\"></a>1）类型转换是强制的</h4><pre><code>var a, b int = 3, 4\nvar c int = math.Sqrt(a*a + b*b)  X\nvar c = int(math.Sqrt(float64(a * a + b * b)))\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func truangle() &#123;</span><br><span class=\"line\">\tvar a, b int = 3, 4</span><br><span class=\"line\">\tvar c int</span><br><span class=\"line\">\tc = int(math.Sqrt(float64(a * a + b * b)))</span><br><span class=\"line\">\tfmt.Println(c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1）类型转换是强制的\"><a href=\"#1）类型转换是强制的\" class=\"headerlink\" title=\"1）类型转换是强制的\"></a>1）类型转换是强制的</h4><pre><code>var a, b int = 3, 4\nvar c int = math.Sqrt(a*a + b*b)  X\nvar c = int(math.Sqrt(float64(a * a + b * b)))\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func truangle() &#123;</span><br><span class=\"line\">\tvar a, b int = 3, 4</span><br><span class=\"line\">\tvar c int</span><br><span class=\"line\">\tc = int(math.Sqrt(float64(a * a + b * b)))</span><br><span class=\"line\">\tfmt.Println(c)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"文件隐藏属性","originContent":"","toc":true,"date":"2018-12-12T07:55:04.000Z","_content":"\n#### 1.文件隐藏属性\n  * 1)查看文件的隐藏属性\n```language\n     #lsattr /etc/passwd\n    [root@localhost ~]# lsattr /etc/passwd\n```\n  * 2)设置文件隐藏属性\n```language\n   #chattr -/+选项 文件名\n   #chattr [-RVf] [-+=AacDdijsSu] [-v version] files...\n```\n   a:只能以追加的方式向文件里添加新内容\n   i:不能移动、编辑、删除 (对root用户有效)\n   ```language\n   [root@localhost lsattr]# chattr +a a.txt //添加隐藏属性\n   [root@localhost lsattr]# ll\n   total 8\n   -rw-r--r-- 1 root root 31 May 12 11:17 a.txt\n   [root@localhost lsattr]# lsattr a.txt  //查看隐藏属性\n   -----a------- a.txt\n   [root@localhost lsattr]# vim a.txt  //vim编辑不能保存\n   [root@localhost lsattr]# echo 1212312 >> a.txt  //只能追加方式添加内容\n   [root@localhost lsattr]# cat a.txt\n    isdfasdf\n    asfdasdfasfd\n    asdfsadf\n    1212312\n\n   [root@localhost lsattr]# chattr -a a.txt //取消隐藏属性\n   [root@localhost lsattr]# lsattr a.txt\n```\n#### 2.软件包管理 （rpm包，yum源，源码包）\n  1)查看\n  2)安装\n  3)卸载\n  4)升级\n\n#### 3.linux系统软件包的类型\n  1).rpm 默认的封包类型  rpm(红帽包管理器)\n  2).bin 加上可执行权限就可以运行\n```language\n   #chmod a+x xxxx.bin \n   #./xxxx.bin\n```\n  3)免安装的，不需要安装，解包后包里自带启动脚本\n  4)源码包(编译后才可以安装)\n   .tar.gz\n   .tar.bz2\n\n#### 4.rpm包:用数据库的形式记录以安装的软件包\n  /var/lib/rpm :rpm包数据存放地址\n  #rmp 选项 [软件名|软件包名]\n   -q:查看指定的软件是否安装\n   -qa:查看系统内已经安装了哪些rpm包\n   -qc:查看软件包里的配置文件安装到什么目录里\n   -qf:查看指定的文件是由那个安装包提供的\n   -qi:查看以安装的软件包信息\n   -qpl:查看包里提供什么文件\n\n    #rpm -qa | grep \"samba\" //所有的包里包含samba的包\n    1)查看 \n      #rpm -q httpd\n      httpd-2.2.3-63.el5.rpm \n      包名-主版本号.次版本号-释放次数.rhel5.rpm\n\n      #rpm -ql httpd //查看软件包里的文件安装到系统的什么目录下\n      /etc/:存放配置文件目录，通常生成于软件同名的目录，作为软件的主目录\n      /usr/bin:存放命令\n      /usr/lib:存放软件的库文件\n      /usr/sbin:管理员存放命令\n      /usr/share/doc/ 配置文件的模板文件\n      /usr/share/man/  帮助手册\n\n      #rpm -qc httpd  //查看软件提供的配置文件安装到什么目录里\n      [root@localhost mnt]# rpm -qf /etc/httpd/conf/httpd.conf \n      httpd-2.2.3-63.el5\n\n   2)安装\n    #rpm -ivh 软件包名\n    #rpm -ivh /mnt/Server/httpd-devel.xxx.xx.rpm\n     -i:安装\n     -v:显示安装信息\n     -h:用#显示安装进度\n     --nodeps 忽略包依赖关系安装\n     --force  强制安装软件包\n     #rpm -ivh --force 软件包名\n   3)卸载\n    -e:卸载rpm包\n    --nodeps 忽略包依赖关系卸载\n    --force  强制卸载软件包\n    #rpm -e --nodeps 软件包名\n   4)升级\n    #rpm -Uvh  xxxx.rpm\n    -U:如果低版本的没有安装，直接安装当前版本的软件包\n    #rpm -Fvh xxxx.rpm\n    -F:如果低版本没有安装，高版本安装不上\n\n  5)验证\n     //对rpm包做验证，查看文件是否被修改过\n   -V\n   #rpm -Va :把系统内所有被改动过的文件都显示出来\n   #rpm -Vf :查看指定的文件是否被改动过\n   #rpm -V 软件名 : 查看指定软件提供的文件都有哪些被改动过\n   #rpm --initdb:手动更新rpm包数据库文件\n\n```language\n   [root@localhost mnt]# rpm -Vf /etc/passwd\n     S.5....T  c /etc/printcap\n       S file Size differs\n       M Mode differs (includes permissions and file type)\n       5 MD5 sum differs\n       D Device major/minor number mismatch\n       L readLink(2) path mismatch\n       U User ownership differs\n       G Group ownership differs\n       T mTime differs\n```\n#### 5.光盘文件 \n  Server 提供服务的软件包\n  VT 提供虚拟化技术的软件\n  Cluster 提供集群功能的软件包\n  ClusterStorage 提供集群和存储功能软件包\n  提供镜像文件和引导文件\n  images   \n  isolinux  \n\n#### 6.搭建yum源（解决安装rpm时 rpm包间的依赖）\n  1)本地yum源\n    server: mount /dev/cdrom /mnt\n    client: cd /etc/yum.repos.d/xxxx.repo\n      [rhel-debuginfo]\n      name=Red Hat Enterpris //描述信息\n      baseurl=file:///mnt/Server/ //包存放地址\n      enable=1 //启用上3行的配置 1取用\n      gpgcheck=1 //是否对安装的包做验证\n      gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release\n        //对安装的包验证\n```language\n   #yum clean all //清除yum信息\n   #yum list\n   #yum grouplist \n   #yum -y groupremove \"DNS 服务器\" //卸载一组软件包\n   #yum -y groupinstall \"DNS\" //安装一组软件包\n   #yum -y install 软件名1 软件名2 软件名3...\n   #yum -y remove  软件名1 软件名2 软件名3...\n```\n\n","source":"_posts/文件隐藏属性.md","raw":"---\ntitle: 文件隐藏属性\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 15:55:04\n---\n\n#### 1.文件隐藏属性\n  * 1)查看文件的隐藏属性\n```language\n     #lsattr /etc/passwd\n    [root@localhost ~]# lsattr /etc/passwd\n```\n  * 2)设置文件隐藏属性\n```language\n   #chattr -/+选项 文件名\n   #chattr [-RVf] [-+=AacDdijsSu] [-v version] files...\n```\n   a:只能以追加的方式向文件里添加新内容\n   i:不能移动、编辑、删除 (对root用户有效)\n   ```language\n   [root@localhost lsattr]# chattr +a a.txt //添加隐藏属性\n   [root@localhost lsattr]# ll\n   total 8\n   -rw-r--r-- 1 root root 31 May 12 11:17 a.txt\n   [root@localhost lsattr]# lsattr a.txt  //查看隐藏属性\n   -----a------- a.txt\n   [root@localhost lsattr]# vim a.txt  //vim编辑不能保存\n   [root@localhost lsattr]# echo 1212312 >> a.txt  //只能追加方式添加内容\n   [root@localhost lsattr]# cat a.txt\n    isdfasdf\n    asfdasdfasfd\n    asdfsadf\n    1212312\n\n   [root@localhost lsattr]# chattr -a a.txt //取消隐藏属性\n   [root@localhost lsattr]# lsattr a.txt\n```\n#### 2.软件包管理 （rpm包，yum源，源码包）\n  1)查看\n  2)安装\n  3)卸载\n  4)升级\n\n#### 3.linux系统软件包的类型\n  1).rpm 默认的封包类型  rpm(红帽包管理器)\n  2).bin 加上可执行权限就可以运行\n```language\n   #chmod a+x xxxx.bin \n   #./xxxx.bin\n```\n  3)免安装的，不需要安装，解包后包里自带启动脚本\n  4)源码包(编译后才可以安装)\n   .tar.gz\n   .tar.bz2\n\n#### 4.rpm包:用数据库的形式记录以安装的软件包\n  /var/lib/rpm :rpm包数据存放地址\n  #rmp 选项 [软件名|软件包名]\n   -q:查看指定的软件是否安装\n   -qa:查看系统内已经安装了哪些rpm包\n   -qc:查看软件包里的配置文件安装到什么目录里\n   -qf:查看指定的文件是由那个安装包提供的\n   -qi:查看以安装的软件包信息\n   -qpl:查看包里提供什么文件\n\n    #rpm -qa | grep \"samba\" //所有的包里包含samba的包\n    1)查看 \n      #rpm -q httpd\n      httpd-2.2.3-63.el5.rpm \n      包名-主版本号.次版本号-释放次数.rhel5.rpm\n\n      #rpm -ql httpd //查看软件包里的文件安装到系统的什么目录下\n      /etc/:存放配置文件目录，通常生成于软件同名的目录，作为软件的主目录\n      /usr/bin:存放命令\n      /usr/lib:存放软件的库文件\n      /usr/sbin:管理员存放命令\n      /usr/share/doc/ 配置文件的模板文件\n      /usr/share/man/  帮助手册\n\n      #rpm -qc httpd  //查看软件提供的配置文件安装到什么目录里\n      [root@localhost mnt]# rpm -qf /etc/httpd/conf/httpd.conf \n      httpd-2.2.3-63.el5\n\n   2)安装\n    #rpm -ivh 软件包名\n    #rpm -ivh /mnt/Server/httpd-devel.xxx.xx.rpm\n     -i:安装\n     -v:显示安装信息\n     -h:用#显示安装进度\n     --nodeps 忽略包依赖关系安装\n     --force  强制安装软件包\n     #rpm -ivh --force 软件包名\n   3)卸载\n    -e:卸载rpm包\n    --nodeps 忽略包依赖关系卸载\n    --force  强制卸载软件包\n    #rpm -e --nodeps 软件包名\n   4)升级\n    #rpm -Uvh  xxxx.rpm\n    -U:如果低版本的没有安装，直接安装当前版本的软件包\n    #rpm -Fvh xxxx.rpm\n    -F:如果低版本没有安装，高版本安装不上\n\n  5)验证\n     //对rpm包做验证，查看文件是否被修改过\n   -V\n   #rpm -Va :把系统内所有被改动过的文件都显示出来\n   #rpm -Vf :查看指定的文件是否被改动过\n   #rpm -V 软件名 : 查看指定软件提供的文件都有哪些被改动过\n   #rpm --initdb:手动更新rpm包数据库文件\n\n```language\n   [root@localhost mnt]# rpm -Vf /etc/passwd\n     S.5....T  c /etc/printcap\n       S file Size differs\n       M Mode differs (includes permissions and file type)\n       5 MD5 sum differs\n       D Device major/minor number mismatch\n       L readLink(2) path mismatch\n       U User ownership differs\n       G Group ownership differs\n       T mTime differs\n```\n#### 5.光盘文件 \n  Server 提供服务的软件包\n  VT 提供虚拟化技术的软件\n  Cluster 提供集群功能的软件包\n  ClusterStorage 提供集群和存储功能软件包\n  提供镜像文件和引导文件\n  images   \n  isolinux  \n\n#### 6.搭建yum源（解决安装rpm时 rpm包间的依赖）\n  1)本地yum源\n    server: mount /dev/cdrom /mnt\n    client: cd /etc/yum.repos.d/xxxx.repo\n      [rhel-debuginfo]\n      name=Red Hat Enterpris //描述信息\n      baseurl=file:///mnt/Server/ //包存放地址\n      enable=1 //启用上3行的配置 1取用\n      gpgcheck=1 //是否对安装的包做验证\n      gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release\n        //对安装的包验证\n```language\n   #yum clean all //清除yum信息\n   #yum list\n   #yum grouplist \n   #yum -y groupremove \"DNS 服务器\" //卸载一组软件包\n   #yum -y groupinstall \"DNS\" //安装一组软件包\n   #yum -y install 软件名1 软件名2 软件名3...\n   #yum -y remove  软件名1 软件名2 软件名3...\n```\n\n","slug":"文件隐藏属性","published":1,"updated":"2018-12-18T08:00:18.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eti000xyes6vkxk4sy2","content":"<h4 id=\"1-文件隐藏属性\"><a href=\"#1-文件隐藏属性\" class=\"headerlink\" title=\"1.文件隐藏属性\"></a>1.文件隐藏属性</h4><ul>\n<li><p>1)查看文件的隐藏属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> #lsattr /etc/passwd</span><br><span class=\"line\">[root@localhost ~]# lsattr /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2)设置文件隐藏属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chattr -/+选项 文件名</span><br><span class=\"line\">#chattr [-RVf] [-+=AacDdijsSu] [-v version] files...</span><br></pre></td></tr></table></figure>\n<p>a:只能以追加的方式向文件里添加新内容<br>i:不能移动、编辑、删除 (对root用户有效)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost lsattr]# chattr +a a.txt //添加隐藏属性</span><br><span class=\"line\">[root@localhost lsattr]# ll</span><br><span class=\"line\">total 8</span><br><span class=\"line\">-rw-r--r-- 1 root root 31 May 12 11:17 a.txt</span><br><span class=\"line\">[root@localhost lsattr]# lsattr a.txt  //查看隐藏属性</span><br><span class=\"line\">-----a------- a.txt</span><br><span class=\"line\">[root@localhost lsattr]# vim a.txt  //vim编辑不能保存</span><br><span class=\"line\">[root@localhost lsattr]# echo 1212312 &gt;&gt; a.txt  //只能追加方式添加内容</span><br><span class=\"line\">[root@localhost lsattr]# cat a.txt</span><br><span class=\"line\"> isdfasdf</span><br><span class=\"line\"> asfdasdfasfd</span><br><span class=\"line\"> asdfsadf</span><br><span class=\"line\"> 1212312</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost lsattr]# chattr -a a.txt //取消隐藏属性</span><br><span class=\"line\">[root@localhost lsattr]# lsattr a.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"2-软件包管理-（rpm包，yum源，源码包）\"><a href=\"#2-软件包管理-（rpm包，yum源，源码包）\" class=\"headerlink\" title=\"2.软件包管理 （rpm包，yum源，源码包）\"></a>2.软件包管理 （rpm包，yum源，源码包）</h4><p>  1)查看<br>  2)安装<br>  3)卸载<br>  4)升级</p>\n<h4 id=\"3-linux系统软件包的类型\"><a href=\"#3-linux系统软件包的类型\" class=\"headerlink\" title=\"3.linux系统软件包的类型\"></a>3.linux系统软件包的类型</h4><p>  1).rpm 默认的封包类型  rpm(红帽包管理器)<br>  2).bin 加上可执行权限就可以运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chmod a+x xxxx.bin </span><br><span class=\"line\">#./xxxx.bin</span><br></pre></td></tr></table></figure></p>\n<p>  3)免安装的，不需要安装，解包后包里自带启动脚本<br>  4)源码包(编译后才可以安装)<br>   .tar.gz<br>   .tar.bz2</p>\n<h4 id=\"4-rpm包-用数据库的形式记录以安装的软件包\"><a href=\"#4-rpm包-用数据库的形式记录以安装的软件包\" class=\"headerlink\" title=\"4.rpm包:用数据库的形式记录以安装的软件包\"></a>4.rpm包:用数据库的形式记录以安装的软件包</h4><p>  /var/lib/rpm :rpm包数据存放地址</p>\n<p>  #rmp 选项 [软件名|软件包名]<br>   -q:查看指定的软件是否安装<br>   -qa:查看系统内已经安装了哪些rpm包<br>   -qc:查看软件包里的配置文件安装到什么目录里<br>   -qf:查看指定的文件是由那个安装包提供的<br>   -qi:查看以安装的软件包信息<br>   -qpl:查看包里提供什么文件</p>\n<pre><code>#rpm -qa | grep &quot;samba&quot; //所有的包里包含samba的包\n1)查看 \n  #rpm -q httpd\n  httpd-2.2.3-63.el5.rpm \n  包名-主版本号.次版本号-释放次数.rhel5.rpm\n\n  #rpm -ql httpd //查看软件包里的文件安装到系统的什么目录下\n  /etc/:存放配置文件目录，通常生成于软件同名的目录，作为软件的主目录\n  /usr/bin:存放命令\n  /usr/lib:存放软件的库文件\n  /usr/sbin:管理员存放命令\n  /usr/share/doc/ 配置文件的模板文件\n  /usr/share/man/  帮助手册\n\n  #rpm -qc httpd  //查看软件提供的配置文件安装到什么目录里\n  [root@localhost mnt]# rpm -qf /etc/httpd/conf/httpd.conf \n  httpd-2.2.3-63.el5\n</code></pre><p>   2)安装</p>\n<pre><code>#rpm -ivh 软件包名\n#rpm -ivh /mnt/Server/httpd-devel.xxx.xx.rpm\n -i:安装\n -v:显示安装信息\n -h:用#显示安装进度\n --nodeps 忽略包依赖关系安装\n --force  强制安装软件包\n #rpm -ivh --force 软件包名\n</code></pre><p>   3)卸载<br>    -e:卸载rpm包<br>    –nodeps 忽略包依赖关系卸载<br>    –force  强制卸载软件包</p>\n<pre><code>#rpm -e --nodeps 软件包名\n</code></pre><p>   4)升级</p>\n<pre><code>#rpm -Uvh  xxxx.rpm\n-U:如果低版本的没有安装，直接安装当前版本的软件包\n#rpm -Fvh xxxx.rpm\n-F:如果低版本没有安装，高版本安装不上\n</code></pre><p>  5)验证<br>     //对rpm包做验证，查看文件是否被修改过<br>   -V</p>\n<p>   #rpm -Va :把系统内所有被改动过的文件都显示出来</p>\n<p>   #rpm -Vf :查看指定的文件是否被改动过</p>\n<p>   #rpm -V 软件名 : 查看指定软件提供的文件都有哪些被改动过</p>\n<p>   #rpm –initdb:手动更新rpm包数据库文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# rpm -Vf /etc/passwd</span><br><span class=\"line\">  S.5....T  c /etc/printcap</span><br><span class=\"line\">    S file Size differs</span><br><span class=\"line\">    M Mode differs (includes permissions and file type)</span><br><span class=\"line\">    5 MD5 sum differs</span><br><span class=\"line\">    D Device major/minor number mismatch</span><br><span class=\"line\">    L readLink(2) path mismatch</span><br><span class=\"line\">    U User ownership differs</span><br><span class=\"line\">    G Group ownership differs</span><br><span class=\"line\">    T mTime differs</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-光盘文件\"><a href=\"#5-光盘文件\" class=\"headerlink\" title=\"5.光盘文件\"></a>5.光盘文件</h4><p>  Server 提供服务的软件包<br>  VT 提供虚拟化技术的软件<br>  Cluster 提供集群功能的软件包<br>  ClusterStorage 提供集群和存储功能软件包<br>  提供镜像文件和引导文件<br>  images<br>  isolinux  </p>\n<h4 id=\"6-搭建yum源（解决安装rpm时-rpm包间的依赖）\"><a href=\"#6-搭建yum源（解决安装rpm时-rpm包间的依赖）\" class=\"headerlink\" title=\"6.搭建yum源（解决安装rpm时 rpm包间的依赖）\"></a>6.搭建yum源（解决安装rpm时 rpm包间的依赖）</h4><p>  1)本地yum源<br>    server: mount /dev/cdrom /mnt<br>    client: cd /etc/yum.repos.d/xxxx.repo<br>      [rhel-debuginfo]<br>      name=Red Hat Enterpris //描述信息<br>      baseurl=file:///mnt/Server/ //包存放地址<br>      enable=1 //启用上3行的配置 1取用<br>      gpgcheck=1 //是否对安装的包做验证<br>      gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release<br>        //对安装的包验证<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#yum clean all //清除yum信息</span><br><span class=\"line\">#yum list</span><br><span class=\"line\">#yum grouplist </span><br><span class=\"line\">#yum -y groupremove &quot;DNS 服务器&quot; //卸载一组软件包</span><br><span class=\"line\">#yum -y groupinstall &quot;DNS&quot; //安装一组软件包</span><br><span class=\"line\">#yum -y install 软件名1 软件名2 软件名3...</span><br><span class=\"line\">#yum -y remove  软件名1 软件名2 软件名3...</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-文件隐藏属性\"><a href=\"#1-文件隐藏属性\" class=\"headerlink\" title=\"1.文件隐藏属性\"></a>1.文件隐藏属性</h4><ul>\n<li><p>1)查看文件的隐藏属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> #lsattr /etc/passwd</span><br><span class=\"line\">[root@localhost ~]# lsattr /etc/passwd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2)设置文件隐藏属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chattr -/+选项 文件名</span><br><span class=\"line\">#chattr [-RVf] [-+=AacDdijsSu] [-v version] files...</span><br></pre></td></tr></table></figure>\n<p>a:只能以追加的方式向文件里添加新内容<br>i:不能移动、编辑、删除 (对root用户有效)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost lsattr]# chattr +a a.txt //添加隐藏属性</span><br><span class=\"line\">[root@localhost lsattr]# ll</span><br><span class=\"line\">total 8</span><br><span class=\"line\">-rw-r--r-- 1 root root 31 May 12 11:17 a.txt</span><br><span class=\"line\">[root@localhost lsattr]# lsattr a.txt  //查看隐藏属性</span><br><span class=\"line\">-----a------- a.txt</span><br><span class=\"line\">[root@localhost lsattr]# vim a.txt  //vim编辑不能保存</span><br><span class=\"line\">[root@localhost lsattr]# echo 1212312 &gt;&gt; a.txt  //只能追加方式添加内容</span><br><span class=\"line\">[root@localhost lsattr]# cat a.txt</span><br><span class=\"line\"> isdfasdf</span><br><span class=\"line\"> asfdasdfasfd</span><br><span class=\"line\"> asdfsadf</span><br><span class=\"line\"> 1212312</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost lsattr]# chattr -a a.txt //取消隐藏属性</span><br><span class=\"line\">[root@localhost lsattr]# lsattr a.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"2-软件包管理-（rpm包，yum源，源码包）\"><a href=\"#2-软件包管理-（rpm包，yum源，源码包）\" class=\"headerlink\" title=\"2.软件包管理 （rpm包，yum源，源码包）\"></a>2.软件包管理 （rpm包，yum源，源码包）</h4><p>  1)查看<br>  2)安装<br>  3)卸载<br>  4)升级</p>\n<h4 id=\"3-linux系统软件包的类型\"><a href=\"#3-linux系统软件包的类型\" class=\"headerlink\" title=\"3.linux系统软件包的类型\"></a>3.linux系统软件包的类型</h4><p>  1).rpm 默认的封包类型  rpm(红帽包管理器)<br>  2).bin 加上可执行权限就可以运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#chmod a+x xxxx.bin </span><br><span class=\"line\">#./xxxx.bin</span><br></pre></td></tr></table></figure></p>\n<p>  3)免安装的，不需要安装，解包后包里自带启动脚本<br>  4)源码包(编译后才可以安装)<br>   .tar.gz<br>   .tar.bz2</p>\n<h4 id=\"4-rpm包-用数据库的形式记录以安装的软件包\"><a href=\"#4-rpm包-用数据库的形式记录以安装的软件包\" class=\"headerlink\" title=\"4.rpm包:用数据库的形式记录以安装的软件包\"></a>4.rpm包:用数据库的形式记录以安装的软件包</h4><p>  /var/lib/rpm :rpm包数据存放地址</p>\n<p>  #rmp 选项 [软件名|软件包名]<br>   -q:查看指定的软件是否安装<br>   -qa:查看系统内已经安装了哪些rpm包<br>   -qc:查看软件包里的配置文件安装到什么目录里<br>   -qf:查看指定的文件是由那个安装包提供的<br>   -qi:查看以安装的软件包信息<br>   -qpl:查看包里提供什么文件</p>\n<pre><code>#rpm -qa | grep &quot;samba&quot; //所有的包里包含samba的包\n1)查看 \n  #rpm -q httpd\n  httpd-2.2.3-63.el5.rpm \n  包名-主版本号.次版本号-释放次数.rhel5.rpm\n\n  #rpm -ql httpd //查看软件包里的文件安装到系统的什么目录下\n  /etc/:存放配置文件目录，通常生成于软件同名的目录，作为软件的主目录\n  /usr/bin:存放命令\n  /usr/lib:存放软件的库文件\n  /usr/sbin:管理员存放命令\n  /usr/share/doc/ 配置文件的模板文件\n  /usr/share/man/  帮助手册\n\n  #rpm -qc httpd  //查看软件提供的配置文件安装到什么目录里\n  [root@localhost mnt]# rpm -qf /etc/httpd/conf/httpd.conf \n  httpd-2.2.3-63.el5\n</code></pre><p>   2)安装</p>\n<pre><code>#rpm -ivh 软件包名\n#rpm -ivh /mnt/Server/httpd-devel.xxx.xx.rpm\n -i:安装\n -v:显示安装信息\n -h:用#显示安装进度\n --nodeps 忽略包依赖关系安装\n --force  强制安装软件包\n #rpm -ivh --force 软件包名\n</code></pre><p>   3)卸载<br>    -e:卸载rpm包<br>    –nodeps 忽略包依赖关系卸载<br>    –force  强制卸载软件包</p>\n<pre><code>#rpm -e --nodeps 软件包名\n</code></pre><p>   4)升级</p>\n<pre><code>#rpm -Uvh  xxxx.rpm\n-U:如果低版本的没有安装，直接安装当前版本的软件包\n#rpm -Fvh xxxx.rpm\n-F:如果低版本没有安装，高版本安装不上\n</code></pre><p>  5)验证<br>     //对rpm包做验证，查看文件是否被修改过<br>   -V</p>\n<p>   #rpm -Va :把系统内所有被改动过的文件都显示出来</p>\n<p>   #rpm -Vf :查看指定的文件是否被改动过</p>\n<p>   #rpm -V 软件名 : 查看指定软件提供的文件都有哪些被改动过</p>\n<p>   #rpm –initdb:手动更新rpm包数据库文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# rpm -Vf /etc/passwd</span><br><span class=\"line\">  S.5....T  c /etc/printcap</span><br><span class=\"line\">    S file Size differs</span><br><span class=\"line\">    M Mode differs (includes permissions and file type)</span><br><span class=\"line\">    5 MD5 sum differs</span><br><span class=\"line\">    D Device major/minor number mismatch</span><br><span class=\"line\">    L readLink(2) path mismatch</span><br><span class=\"line\">    U User ownership differs</span><br><span class=\"line\">    G Group ownership differs</span><br><span class=\"line\">    T mTime differs</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-光盘文件\"><a href=\"#5-光盘文件\" class=\"headerlink\" title=\"5.光盘文件\"></a>5.光盘文件</h4><p>  Server 提供服务的软件包<br>  VT 提供虚拟化技术的软件<br>  Cluster 提供集群功能的软件包<br>  ClusterStorage 提供集群和存储功能软件包<br>  提供镜像文件和引导文件<br>  images<br>  isolinux  </p>\n<h4 id=\"6-搭建yum源（解决安装rpm时-rpm包间的依赖）\"><a href=\"#6-搭建yum源（解决安装rpm时-rpm包间的依赖）\" class=\"headerlink\" title=\"6.搭建yum源（解决安装rpm时 rpm包间的依赖）\"></a>6.搭建yum源（解决安装rpm时 rpm包间的依赖）</h4><p>  1)本地yum源<br>    server: mount /dev/cdrom /mnt<br>    client: cd /etc/yum.repos.d/xxxx.repo<br>      [rhel-debuginfo]<br>      name=Red Hat Enterpris //描述信息<br>      baseurl=file:///mnt/Server/ //包存放地址<br>      enable=1 //启用上3行的配置 1取用<br>      gpgcheck=1 //是否对安装的包做验证<br>      gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release<br>        //对安装的包验证<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#yum clean all //清除yum信息</span><br><span class=\"line\">#yum list</span><br><span class=\"line\">#yum grouplist </span><br><span class=\"line\">#yum -y groupremove &quot;DNS 服务器&quot; //卸载一组软件包</span><br><span class=\"line\">#yum -y groupinstall &quot;DNS&quot; //安装一组软件包</span><br><span class=\"line\">#yum -y install 软件名1 软件名2 软件名3...</span><br><span class=\"line\">#yum -y remove  软件名1 软件名2 软件名3...</span><br></pre></td></tr></table></figure></p>\n"},{"title":"条件语句","originContent":"","toc":true,"date":"2018-12-04T12:10:34.000Z","_content":"\n### if\n * if的条件里可以赋值\n * if的条件里赋值的变量作用域就在这个if语句里\n \n  ```\n  package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n)\n\nfunc main()  {\n\tconst filename = \"abc.txt\"\n\t//contents, err := ioutil.ReadFile(filename)\n\t//if err != nil {\n\t//\tfmt.Println(err)\n\t//} else {\n\t//\tfmt.Printf(\"%s\\n\", contents)\n\t//}\n\tif contents, err := ioutil.ReadFile(filename); err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Printf(\"%s\\n\", contents)\n\t}\n}\n  ```\n  ","source":"_posts/条件语句.md","raw":"---\ntitle: 条件语句\ntags:\n  - go\noriginContent: ''\ncategories:\n  - go\ntoc: true\ndate: 2018-12-04 20:10:34\n---\n\n### if\n * if的条件里可以赋值\n * if的条件里赋值的变量作用域就在这个if语句里\n \n  ```\n  package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n)\n\nfunc main()  {\n\tconst filename = \"abc.txt\"\n\t//contents, err := ioutil.ReadFile(filename)\n\t//if err != nil {\n\t//\tfmt.Println(err)\n\t//} else {\n\t//\tfmt.Printf(\"%s\\n\", contents)\n\t//}\n\tif contents, err := ioutil.ReadFile(filename); err != nil {\n\t\tfmt.Println(err)\n\t} else {\n\t\tfmt.Printf(\"%s\\n\", contents)\n\t}\n}\n  ```\n  ","slug":"条件语句","published":1,"updated":"2018-12-18T08:00:18.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etj0011yes6pqal3m2b","content":"<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h3><ul>\n<li>if的条件里可以赋值</li>\n<li><p>if的条件里赋值的变量作用域就在这个if语句里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;io/ioutil&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main()  &#123;</span><br><span class=\"line\">\tconst filename = &quot;abc.txt&quot;</span><br><span class=\"line\">\t//contents, err := ioutil.ReadFile(filename)</span><br><span class=\"line\">\t//if err != nil &#123;</span><br><span class=\"line\">\t//\tfmt.Println(err)</span><br><span class=\"line\">\t//&#125; else &#123;</span><br><span class=\"line\">\t//\tfmt.Printf(&quot;%s\\n&quot;, contents)</span><br><span class=\"line\">\t//&#125;</span><br><span class=\"line\">\tif contents, err := ioutil.ReadFile(filename); err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tfmt.Printf(&quot;%s\\n&quot;, contents)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h3><ul>\n<li>if的条件里可以赋值</li>\n<li><p>if的条件里赋值的变量作用域就在这个if语句里</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">\t&quot;io/ioutil&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func main()  &#123;</span><br><span class=\"line\">\tconst filename = &quot;abc.txt&quot;</span><br><span class=\"line\">\t//contents, err := ioutil.ReadFile(filename)</span><br><span class=\"line\">\t//if err != nil &#123;</span><br><span class=\"line\">\t//\tfmt.Println(err)</span><br><span class=\"line\">\t//&#125; else &#123;</span><br><span class=\"line\">\t//\tfmt.Printf(&quot;%s\\n&quot;, contents)</span><br><span class=\"line\">\t//&#125;</span><br><span class=\"line\">\tif contents, err := ioutil.ReadFile(filename); err != nil &#123;</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tfmt.Printf(&quot;%s\\n&quot;, contents)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"磁盘管理","originContent":"#### 1.分区\n #fdisk /dev/sda \n   m:看帮助 \n   p:打印分区信息\n   n:创建新分区\n   p:创建主分区\n   l:创建逻辑分区\n   e:创建扩展分区\n   d:删除分区\n   w:保存分区信息退出\n   q:不保存分区信息退出\n\n\n #partprobe //手动更新分区表\n#### 2.格式化\n  #mke2fs  /dev/sda5  //格式化分区\n  #blkid  /dev/sda5  //查看分区格式化信息\n#### 3.挂载\n  3.1手动挂载\n    #mkdir /sda5  //创建挂载点\n    #mount /dev/sda5 /sda5   //挂载\n    #df -h /sda5   //查看大小\n  3.2开机挂载\n  3.3触发挂载\n#### 4.磁盘配额\n  4.1用户磁盘配额\n  4.2用户组磁盘配额\n#### 5.RAID\n#### 6.LVM\n  6.1创建LV\n  6.2扩大LV\n  6.3缩小LV\n  6.4快照","toc":true,"date":"2018-12-12T08:21:37.000Z","_content":"\n#### 1.分区\n #fdisk /dev/sda \n   m:看帮助 \n   p:打印分区信息\n   n:创建新分区\n   p:创建主分区\n   l:创建逻辑分区\n   e:创建扩展分区\n   d:删除分区\n   w:保存分区信息退出\n   q:不保存分区信息退出\n\n\n #partprobe //手动更新分区表\n#### 2.格式化\n  #mke2fs  /dev/sda5  //格式化分区\n  #blkid  /dev/sda5  //查看分区格式化信息\n#### 3.挂载\n  3.1手动挂载\n    #mkdir /sda5  //创建挂载点\n    #mount /dev/sda5 /sda5   //挂载\n    #df -h /sda5   //查看大小\n  3.2开机挂载\n  3.3触发挂载\n#### 4.磁盘配额\n  4.1用户磁盘配额\n  4.2用户组磁盘配额\n#### 5.RAID\n#### 6.LVM\n  6.1创建LV\n  6.2扩大LV\n  6.3缩小LV\n  6.4快照","source":"_posts/磁盘管理.md","raw":"---\ntitle: 磁盘管理\ntags:\n  - linux\noriginContent: |-\n  #### 1.分区\n   #fdisk /dev/sda \n     m:看帮助 \n     p:打印分区信息\n     n:创建新分区\n     p:创建主分区\n     l:创建逻辑分区\n     e:创建扩展分区\n     d:删除分区\n     w:保存分区信息退出\n     q:不保存分区信息退出\n\n\n   #partprobe //手动更新分区表\n  #### 2.格式化\n    #mke2fs  /dev/sda5  //格式化分区\n    #blkid  /dev/sda5  //查看分区格式化信息\n  #### 3.挂载\n    3.1手动挂载\n      #mkdir /sda5  //创建挂载点\n      #mount /dev/sda5 /sda5   //挂载\n      #df -h /sda5   //查看大小\n    3.2开机挂载\n    3.3触发挂载\n  #### 4.磁盘配额\n    4.1用户磁盘配额\n    4.2用户组磁盘配额\n  #### 5.RAID\n  #### 6.LVM\n    6.1创建LV\n    6.2扩大LV\n    6.3缩小LV\n    6.4快照\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:21:37\n---\n\n#### 1.分区\n #fdisk /dev/sda \n   m:看帮助 \n   p:打印分区信息\n   n:创建新分区\n   p:创建主分区\n   l:创建逻辑分区\n   e:创建扩展分区\n   d:删除分区\n   w:保存分区信息退出\n   q:不保存分区信息退出\n\n\n #partprobe //手动更新分区表\n#### 2.格式化\n  #mke2fs  /dev/sda5  //格式化分区\n  #blkid  /dev/sda5  //查看分区格式化信息\n#### 3.挂载\n  3.1手动挂载\n    #mkdir /sda5  //创建挂载点\n    #mount /dev/sda5 /sda5   //挂载\n    #df -h /sda5   //查看大小\n  3.2开机挂载\n  3.3触发挂载\n#### 4.磁盘配额\n  4.1用户磁盘配额\n  4.2用户组磁盘配额\n#### 5.RAID\n#### 6.LVM\n  6.1创建LV\n  6.2扩大LV\n  6.3缩小LV\n  6.4快照","slug":"磁盘管理","published":1,"updated":"2018-12-18T08:00:18.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etk0013yes6zqm7pd0o","content":"<h4 id=\"1-分区\"><a href=\"#1-分区\" class=\"headerlink\" title=\"1.分区\"></a>1.分区</h4><p> #fdisk /dev/sda<br>   m:看帮助<br>   p:打印分区信息<br>   n:创建新分区<br>   p:创建主分区<br>   l:创建逻辑分区<br>   e:创建扩展分区<br>   d:删除分区<br>   w:保存分区信息退出<br>   q:不保存分区信息退出</p>\n<p> #partprobe //手动更新分区表</p>\n<h4 id=\"2-格式化\"><a href=\"#2-格式化\" class=\"headerlink\" title=\"2.格式化\"></a>2.格式化</h4><p>  #mke2fs  /dev/sda5  //格式化分区</p>\n<p>  #blkid  /dev/sda5  //查看分区格式化信息</p>\n<h4 id=\"3-挂载\"><a href=\"#3-挂载\" class=\"headerlink\" title=\"3.挂载\"></a>3.挂载</h4><p>  3.1手动挂载</p>\n<pre><code>#mkdir /sda5  //创建挂载点\n#mount /dev/sda5 /sda5   //挂载\n#df -h /sda5   //查看大小\n</code></pre><p>  3.2开机挂载<br>  3.3触发挂载</p>\n<h4 id=\"4-磁盘配额\"><a href=\"#4-磁盘配额\" class=\"headerlink\" title=\"4.磁盘配额\"></a>4.磁盘配额</h4><p>  4.1用户磁盘配额<br>  4.2用户组磁盘配额</p>\n<h4 id=\"5-RAID\"><a href=\"#5-RAID\" class=\"headerlink\" title=\"5.RAID\"></a>5.RAID</h4><h4 id=\"6-LVM\"><a href=\"#6-LVM\" class=\"headerlink\" title=\"6.LVM\"></a>6.LVM</h4><p>  6.1创建LV<br>  6.2扩大LV<br>  6.3缩小LV<br>  6.4快照</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-分区\"><a href=\"#1-分区\" class=\"headerlink\" title=\"1.分区\"></a>1.分区</h4><p> #fdisk /dev/sda<br>   m:看帮助<br>   p:打印分区信息<br>   n:创建新分区<br>   p:创建主分区<br>   l:创建逻辑分区<br>   e:创建扩展分区<br>   d:删除分区<br>   w:保存分区信息退出<br>   q:不保存分区信息退出</p>\n<p> #partprobe //手动更新分区表</p>\n<h4 id=\"2-格式化\"><a href=\"#2-格式化\" class=\"headerlink\" title=\"2.格式化\"></a>2.格式化</h4><p>  #mke2fs  /dev/sda5  //格式化分区</p>\n<p>  #blkid  /dev/sda5  //查看分区格式化信息</p>\n<h4 id=\"3-挂载\"><a href=\"#3-挂载\" class=\"headerlink\" title=\"3.挂载\"></a>3.挂载</h4><p>  3.1手动挂载</p>\n<pre><code>#mkdir /sda5  //创建挂载点\n#mount /dev/sda5 /sda5   //挂载\n#df -h /sda5   //查看大小\n</code></pre><p>  3.2开机挂载<br>  3.3触发挂载</p>\n<h4 id=\"4-磁盘配额\"><a href=\"#4-磁盘配额\" class=\"headerlink\" title=\"4.磁盘配额\"></a>4.磁盘配额</h4><p>  4.1用户磁盘配额<br>  4.2用户组磁盘配额</p>\n<h4 id=\"5-RAID\"><a href=\"#5-RAID\" class=\"headerlink\" title=\"5.RAID\"></a>5.RAID</h4><h4 id=\"6-LVM\"><a href=\"#6-LVM\" class=\"headerlink\" title=\"6.LVM\"></a>6.LVM</h4><p>  6.1创建LV<br>  6.2扩大LV<br>  6.3缩小LV<br>  6.4快照</p>\n"},{"title":"[流量监控] iftop","originContent":"> linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays bandwidth usage on an interface”\n\n安装指南\n```language\nyum install iftop\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&system=Extras\n\n使用指南\n命令就是这么简单粗暴，更多的个性定制可以查看help\n\n效果说明\n\n底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 => 和 <= ，表示的是流量方向 => 为发 送， <= 为接收。\n\n白色底纹表示总量的占比比例。","toc":true,"date":"2018-12-06T03:47:16.000Z","_content":"\n> linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays bandwidth usage on an interface”\n\n#### 安装指南\n```language\nyum install iftop\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&system=Extras\n\n#### 使用指南\n命令就是这么简单粗暴，更多的个性定制可以查看help\n\n#### 效果说明\n![](/images/image2018-11-25_20-26-40-3.png)\n底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 => 和 <= ，表示的是流量方向 => 为发 送， <= 为接收。\n\n白色底纹表示总量的占比比例。","source":"_posts/流量监控-iftop.md","raw":"---\ntitle: '[流量监控] iftop'\ntags:\n  - 服务器\noriginContent: >-\n  > linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays\n  bandwidth usage on an interface”\n\n\n  安装指南\n\n  ```language\n\n  yum install iftop\n\n  ```\n\n  如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&system=Extras\n\n\n  使用指南\n\n  命令就是这么简单粗暴，更多的个性定制可以查看help\n\n\n  效果说明\n\n\n  底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 => 和 <= ，表示的是流量方向 => 为发\n  送， <= 为接收。\n\n\n  白色底纹表示总量的占比比例。\ncategories:\n  - 服务器\ntoc: true\ndate: 2018-12-06 11:47:16\n---\n\n> linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays bandwidth usage on an interface”\n\n#### 安装指南\n```language\nyum install iftop\n```\n如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&system=Extras\n\n#### 使用指南\n命令就是这么简单粗暴，更多的个性定制可以查看help\n\n#### 效果说明\n![](/images/image2018-11-25_20-26-40-3.png)\n底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 => 和 <= ，表示的是流量方向 => 为发 送， <= 为接收。\n\n白色底纹表示总量的占比比例。","slug":"流量监控-iftop","published":1,"updated":"2018-12-18T08:00:18.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etl0016yes64jiue1so","content":"<blockquote>\n<p>linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays bandwidth usage on an interface”</p>\n</blockquote>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install iftop</span><br></pre></td></tr></table></figure>\n<p>如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，<a href=\"https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&amp;system=Extras\" target=\"_blank\" rel=\"noopener\">https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&amp;system=Extras</a></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><p>命令就是这么简单粗暴，更多的个性定制可以查看help</p>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-26-40-3.png\" alt><br>底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 =&gt; 和 &lt;= ，表示的是流量方向 =&gt; 为发 送， &lt;= 为接收。</p>\n<p>白色底纹表示总量的占比比例。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>linux命令行下，一款实时网络流量监控软件，正如yum仓对他的描述:“Command line tool that displays bandwidth usage on an interface”</p>\n</blockquote>\n<h4 id=\"安装指南\"><a href=\"#安装指南\" class=\"headerlink\" title=\"安装指南\"></a>安装指南</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install iftop</span><br></pre></td></tr></table></figure>\n<p>如果你的yum仓里找不到这款软件，那么你可以来这里直接下载rpm包安装，<a href=\"https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&amp;system=Extras\" target=\"_blank\" rel=\"noopener\">https://www.rpmfind.net/linux/rpm2html/search.php?query=iftop&amp;system=Extras</a></p>\n<h4 id=\"使用指南\"><a href=\"#使用指南\" class=\"headerlink\" title=\"使用指南\"></a>使用指南</h4><p>命令就是这么简单粗暴，更多的个性定制可以查看help</p>\n<h4 id=\"效果说明\"><a href=\"#效果说明\" class=\"headerlink\" title=\"效果说明\"></a>效果说明</h4><p><img src=\"/images/image2018-11-25_20-26-40-3.png\" alt><br>底部的TX和RX，分别指目前实时的发送(Transmit)带宽和接收(Receive)带宽，中间的部分显示的 =&gt; 和 &lt;= ，表示的是流量方向 =&gt; 为发 送， &lt;= 为接收。</p>\n<p>白色底纹表示总量的占比比例。</p>\n"},{"title":"磁盘阵列RAID","originContent":"","toc":true,"date":"2018-12-12T08:24:26.000Z","_content":"\n#### 1.磁盘阵列 raid (存储数据 备份数据)\n   把多个单个的磁盘从逻辑上组成一个大磁盘，进行存储数据和备份数据。\n   * 1.1 硬raid\n        \n   * 1.2 软raid\n        1） 用软件实现raid功能\n        2） mdadm-2.6.9-3.el5.rpm\n            #which mdadm\n            #rpm -qa /sbin/mdadm\n       3）根据制作raid设备时使用级别的不同，功能也不同\n       4）级别：\n           raid0:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n                 /dev/sda /dev/sdb raid0 /dev/md0\n                 /dev/sdc /dev/sdd raid0 /deb/md1\n                 交替存储，读写速度快，完整性差。\n\n           raid1:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n                 一份数据存储两份，每份磁盘都存储一份，存储速度慢，完整性好。\n\n           raid01: raid0+raid1\n                   \n           raid10: raid1+raid0\n             \n           raid5: 至少需要3块单独物理磁盘\n                  要有单独的一块盘来记录写在其他盘上的数据信息\n                   /dev/sda    /dev/sdb    /dev/sdc\n                      1G         1G          1G\n                  raid5 = /dev/md0=(3-1)*1G   //储存容量\n            \n            例：用/dev/hdd1-hdd4作级别是raid5的阵列设备，备用设备hdd4,\n                要开机挂载此设备，挂载到/md0目录里，让所有用户都可以向\n                /md0目录下存数据，但u1用户只能存500M数据。\n                1.分区 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4\n                2.修改标识\n                  l:查看标识\n                  t:修改标识为fd\n                3.#partprobe  //更新分区表\n                4.#mdadm -C /dev/md0 -l5 -n3 --spare-devices=1 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4 \n                 #mdadm -C /dev/md0 -l级别 -n磁盘数 --sparce-dervices=备用盘个数 /dev/hdd{1,2,3,4}\n \n                   -C:创建raid设备\n                   -l:raid级别\n                   -n:raid设备磁盘数\n                   --spare-devices = 1 :1块备用\n                    \n                 5.#cat /proc/mdstat    //查看磁盘阵列是否做完\n                  \n                 6.#mkfs.ext3 /dev/md0   //格式化\n                  \n                 7.#mount /dev/md0 /newmd0/ //挂载 \n\n                 8.#mdadm -Ds > /etc/mdadm.conf   //扫描raid设备\n                 \n                 9.#cat /proc/mdstat  //查看raid设备状态 \n                  \n                 10.#mdadm -S /dev/md0 //停止raid设备\n\n                 11.#mdadm -As /dev/md0  //启动raid设备                   \n\n\n\n#### 2. PV\n   * 2.1分区\n      创建逻辑卷，在逻辑卷分区，改标识t->8e   \n   * 2.2查看pv设备\n      #pvscan    //查看当前是否有PV设备\n   * 2.3创建pv\n         #pvcreate /dev/sda5 /dev/sda5\n         #pvcreate /dev/sda{5,6}\n   * 2.4 查看pv详细信息\n       #pvdisplay /dev/sda5\n   * 2.5删除pv\n      #pvremove /dev/sda6\n  \n#### 3. VG\n    * 3.1 创建VG\n      #vgcreate myvg /dev/sda5 /dev/sda6 //建myvg卷组，把pv放进来\n    * 3.2 查看vg设备\n      #vgscan\n    * 3.3 查看vg详细信息\n      #vgdisplay myvg\n    * 3.4 从vg里移除pv\n      #vgreduce myvg /dev/sda6 //把指定的pv从vg中移除\n    * 3.5 往vg里加pv\n      #vgextend myvg /dev/sda6 //把pv追加到已有的卷组里\n    * 3.6 删除vg\n      #vgremoce myvg\n#### 4.LV  LV容量从现有的VG里来\n    * 4.1 查看LV设备\n      #lvscan\n    * 4.2 创建\n      #lvcreate -n lv1 -l 25 myvg  //用指定PE的个数来创建lv \n         -l:用PE个数来指定 25*4M\n      #lvcreate -n lv2 -L 500M  myvg  //使用容量来创建lv\n         -L:指定容量\n    * 4.3 查看lv详细信息\n      #lvdisplay /dev/myvg/lv1\n    * 4.4 删除lv\n      #lvremove /dev/myvg/lv2\n    * 4.5 格式化\n      #mkfs.ext3 /dev/myvg/lv2 \n    * 4.6 在线扩展lv\n      #lvresize -l +25 /dev/myvg/lv1 //把lv增大25PE\n    * 4.7 更新lv\n      #resize2fs  /dev/myvg/lv1\n    * 4.8 缩小lv\n        #umount /lv1\n        #resize2fs /dev/myvg/lv1 100M //把lv1缩小到100M\n        #e2fsck -f /dev/myvg/lv1\n   * 4.9 把lv去掉25M \n      #lvresize -l -25 /dev/myvg/lv1\n       \n#### 5. LV快照: \n     * 5.1 创建快照\n        #lvcreate -n lv2s -l 25 -s /dev/vg2/lv2 \n     * 5.2 查看快照信息\n       #lvs\n     * 5.3移除快照\n        #lvremove /dev/vg2/lv2s\n>    注：  可以挂载快照设备，也可以挂载源lv\n         在挂载源lv设备时，只要源数据不发生改变，快照设备和源lv设备共享所有PE,\n         当源设备里的数据发生改变时，会把数据的原始内容搬到快照空间里。\n         挂载快照设备时，源数据保存在源LV设备里，我所有的操作都在快照空间里执行，\n         只要数据不超过快照空间的大小就可以，一旦超过快照失效。","source":"_posts/磁盘阵列RAID.md","raw":"---\ntitle: 磁盘阵列RAID\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:24:26\n---\n\n#### 1.磁盘阵列 raid (存储数据 备份数据)\n   把多个单个的磁盘从逻辑上组成一个大磁盘，进行存储数据和备份数据。\n   * 1.1 硬raid\n        \n   * 1.2 软raid\n        1） 用软件实现raid功能\n        2） mdadm-2.6.9-3.el5.rpm\n            #which mdadm\n            #rpm -qa /sbin/mdadm\n       3）根据制作raid设备时使用级别的不同，功能也不同\n       4）级别：\n           raid0:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n                 /dev/sda /dev/sdb raid0 /dev/md0\n                 /dev/sdc /dev/sdd raid0 /deb/md1\n                 交替存储，读写速度快，完整性差。\n\n           raid1:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n                 一份数据存储两份，每份磁盘都存储一份，存储速度慢，完整性好。\n\n           raid01: raid0+raid1\n                   \n           raid10: raid1+raid0\n             \n           raid5: 至少需要3块单独物理磁盘\n                  要有单独的一块盘来记录写在其他盘上的数据信息\n                   /dev/sda    /dev/sdb    /dev/sdc\n                      1G         1G          1G\n                  raid5 = /dev/md0=(3-1)*1G   //储存容量\n            \n            例：用/dev/hdd1-hdd4作级别是raid5的阵列设备，备用设备hdd4,\n                要开机挂载此设备，挂载到/md0目录里，让所有用户都可以向\n                /md0目录下存数据，但u1用户只能存500M数据。\n                1.分区 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4\n                2.修改标识\n                  l:查看标识\n                  t:修改标识为fd\n                3.#partprobe  //更新分区表\n                4.#mdadm -C /dev/md0 -l5 -n3 --spare-devices=1 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4 \n                 #mdadm -C /dev/md0 -l级别 -n磁盘数 --sparce-dervices=备用盘个数 /dev/hdd{1,2,3,4}\n \n                   -C:创建raid设备\n                   -l:raid级别\n                   -n:raid设备磁盘数\n                   --spare-devices = 1 :1块备用\n                    \n                 5.#cat /proc/mdstat    //查看磁盘阵列是否做完\n                  \n                 6.#mkfs.ext3 /dev/md0   //格式化\n                  \n                 7.#mount /dev/md0 /newmd0/ //挂载 \n\n                 8.#mdadm -Ds > /etc/mdadm.conf   //扫描raid设备\n                 \n                 9.#cat /proc/mdstat  //查看raid设备状态 \n                  \n                 10.#mdadm -S /dev/md0 //停止raid设备\n\n                 11.#mdadm -As /dev/md0  //启动raid设备                   \n\n\n\n#### 2. PV\n   * 2.1分区\n      创建逻辑卷，在逻辑卷分区，改标识t->8e   \n   * 2.2查看pv设备\n      #pvscan    //查看当前是否有PV设备\n   * 2.3创建pv\n         #pvcreate /dev/sda5 /dev/sda5\n         #pvcreate /dev/sda{5,6}\n   * 2.4 查看pv详细信息\n       #pvdisplay /dev/sda5\n   * 2.5删除pv\n      #pvremove /dev/sda6\n  \n#### 3. VG\n    * 3.1 创建VG\n      #vgcreate myvg /dev/sda5 /dev/sda6 //建myvg卷组，把pv放进来\n    * 3.2 查看vg设备\n      #vgscan\n    * 3.3 查看vg详细信息\n      #vgdisplay myvg\n    * 3.4 从vg里移除pv\n      #vgreduce myvg /dev/sda6 //把指定的pv从vg中移除\n    * 3.5 往vg里加pv\n      #vgextend myvg /dev/sda6 //把pv追加到已有的卷组里\n    * 3.6 删除vg\n      #vgremoce myvg\n#### 4.LV  LV容量从现有的VG里来\n    * 4.1 查看LV设备\n      #lvscan\n    * 4.2 创建\n      #lvcreate -n lv1 -l 25 myvg  //用指定PE的个数来创建lv \n         -l:用PE个数来指定 25*4M\n      #lvcreate -n lv2 -L 500M  myvg  //使用容量来创建lv\n         -L:指定容量\n    * 4.3 查看lv详细信息\n      #lvdisplay /dev/myvg/lv1\n    * 4.4 删除lv\n      #lvremove /dev/myvg/lv2\n    * 4.5 格式化\n      #mkfs.ext3 /dev/myvg/lv2 \n    * 4.6 在线扩展lv\n      #lvresize -l +25 /dev/myvg/lv1 //把lv增大25PE\n    * 4.7 更新lv\n      #resize2fs  /dev/myvg/lv1\n    * 4.8 缩小lv\n        #umount /lv1\n        #resize2fs /dev/myvg/lv1 100M //把lv1缩小到100M\n        #e2fsck -f /dev/myvg/lv1\n   * 4.9 把lv去掉25M \n      #lvresize -l -25 /dev/myvg/lv1\n       \n#### 5. LV快照: \n     * 5.1 创建快照\n        #lvcreate -n lv2s -l 25 -s /dev/vg2/lv2 \n     * 5.2 查看快照信息\n       #lvs\n     * 5.3移除快照\n        #lvremove /dev/vg2/lv2s\n>    注：  可以挂载快照设备，也可以挂载源lv\n         在挂载源lv设备时，只要源数据不发生改变，快照设备和源lv设备共享所有PE,\n         当源设备里的数据发生改变时，会把数据的原始内容搬到快照空间里。\n         挂载快照设备时，源数据保存在源LV设备里，我所有的操作都在快照空间里执行，\n         只要数据不超过快照空间的大小就可以，一旦超过快照失效。","slug":"磁盘阵列RAID","published":1,"updated":"2018-12-18T08:00:18.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etn001byes6mp9b03wf","content":"<h4 id=\"1-磁盘阵列-raid-存储数据-备份数据\"><a href=\"#1-磁盘阵列-raid-存储数据-备份数据\" class=\"headerlink\" title=\"1.磁盘阵列 raid (存储数据 备份数据)\"></a>1.磁盘阵列 raid (存储数据 备份数据)</h4><p>   把多个单个的磁盘从逻辑上组成一个大磁盘，进行存储数据和备份数据。</p>\n<ul>\n<li><p>1.1 硬raid</p>\n</li>\n<li><p>1.2 软raid<br>   1） 用软件实现raid功能<br>   2） mdadm-2.6.9-3.el5.rpm</p>\n<pre><code>#which mdadm\n#rpm -qa /sbin/mdadm\n</code></pre><p>  3）根据制作raid设备时使用级别的不同，功能也不同<br>  4）级别：</p>\n<pre><code>raid0:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n      /dev/sda /dev/sdb raid0 /dev/md0\n      /dev/sdc /dev/sdd raid0 /deb/md1\n      交替存储，读写速度快，完整性差。\n\nraid1:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n      一份数据存储两份，每份磁盘都存储一份，存储速度慢，完整性好。\n\nraid01: raid0+raid1\n\nraid10: raid1+raid0\n\nraid5: 至少需要3块单独物理磁盘\n       要有单独的一块盘来记录写在其他盘上的数据信息\n        /dev/sda    /dev/sdb    /dev/sdc\n           1G         1G          1G\n       raid5 = /dev/md0=(3-1)*1G   //储存容量\n\n 例：用/dev/hdd1-hdd4作级别是raid5的阵列设备，备用设备hdd4,\n     要开机挂载此设备，挂载到/md0目录里，让所有用户都可以向\n     /md0目录下存数据，但u1用户只能存500M数据。\n     1.分区 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4\n     2.修改标识\n       l:查看标识\n       t:修改标识为fd\n     3.#partprobe  //更新分区表\n     4.#mdadm -C /dev/md0 -l5 -n3 --spare-devices=1 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4 \n      #mdadm -C /dev/md0 -l级别 -n磁盘数 --sparce-dervices=备用盘个数 /dev/hdd{1,2,3,4}\n\n        -C:创建raid设备\n        -l:raid级别\n        -n:raid设备磁盘数\n        --spare-devices = 1 :1块备用\n\n      5.#cat /proc/mdstat    //查看磁盘阵列是否做完\n\n      6.#mkfs.ext3 /dev/md0   //格式化\n\n      7.#mount /dev/md0 /newmd0/ //挂载 \n\n      8.#mdadm -Ds &gt; /etc/mdadm.conf   //扫描raid设备\n\n      9.#cat /proc/mdstat  //查看raid设备状态 \n\n      10.#mdadm -S /dev/md0 //停止raid设备\n\n      11.#mdadm -As /dev/md0  //启动raid设备                   \n</code></pre></li>\n</ul>\n<h4 id=\"2-PV\"><a href=\"#2-PV\" class=\"headerlink\" title=\"2. PV\"></a>2. PV</h4><ul>\n<li>2.1分区<br> 创建逻辑卷，在逻辑卷分区，改标识t-&gt;8e   </li>\n<li>2.2查看pv设备<br> #pvscan    //查看当前是否有PV设备</li>\n<li>2.3创建pv<pre><code>#pvcreate /dev/sda5 /dev/sda5\n#pvcreate /dev/sda{5,6}\n</code></pre></li>\n<li>2.4 查看pv详细信息<br>  #pvdisplay /dev/sda5</li>\n<li>2.5删除pv<br> #pvremove /dev/sda6</li>\n</ul>\n<h4 id=\"3-VG\"><a href=\"#3-VG\" class=\"headerlink\" title=\"3. VG\"></a>3. VG</h4><pre><code>* 3.1 创建VG\n  #vgcreate myvg /dev/sda5 /dev/sda6 //建myvg卷组，把pv放进来\n* 3.2 查看vg设备\n  #vgscan\n* 3.3 查看vg详细信息\n  #vgdisplay myvg\n* 3.4 从vg里移除pv\n  #vgreduce myvg /dev/sda6 //把指定的pv从vg中移除\n* 3.5 往vg里加pv\n  #vgextend myvg /dev/sda6 //把pv追加到已有的卷组里\n* 3.6 删除vg\n  #vgremoce myvg\n</code></pre><h4 id=\"4-LV-LV容量从现有的VG里来\"><a href=\"#4-LV-LV容量从现有的VG里来\" class=\"headerlink\" title=\"4.LV  LV容量从现有的VG里来\"></a>4.LV  LV容量从现有的VG里来</h4><pre><code>* 4.1 查看LV设备\n  #lvscan\n* 4.2 创建\n  #lvcreate -n lv1 -l 25 myvg  //用指定PE的个数来创建lv \n     -l:用PE个数来指定 25*4M\n  #lvcreate -n lv2 -L 500M  myvg  //使用容量来创建lv\n     -L:指定容量\n* 4.3 查看lv详细信息\n  #lvdisplay /dev/myvg/lv1\n* 4.4 删除lv\n  #lvremove /dev/myvg/lv2\n* 4.5 格式化\n  #mkfs.ext3 /dev/myvg/lv2 \n* 4.6 在线扩展lv\n  #lvresize -l +25 /dev/myvg/lv1 //把lv增大25PE\n* 4.7 更新lv\n  #resize2fs  /dev/myvg/lv1\n* 4.8 缩小lv\n    #umount /lv1\n    #resize2fs /dev/myvg/lv1 100M //把lv1缩小到100M\n    #e2fsck -f /dev/myvg/lv1\n</code></pre><ul>\n<li>4.9 把lv去掉25M<br> #lvresize -l -25 /dev/myvg/lv1</li>\n</ul>\n<h4 id=\"5-LV快照\"><a href=\"#5-LV快照\" class=\"headerlink\" title=\"5. LV快照:\"></a>5. LV快照:</h4><pre><code>* 5.1 创建快照\n   #lvcreate -n lv2s -l 25 -s /dev/vg2/lv2 \n* 5.2 查看快照信息\n  #lvs\n* 5.3移除快照\n   #lvremove /dev/vg2/lv2s\n</code></pre><blockquote>\n<p>   注：  可以挂载快照设备，也可以挂载源lv<br>         在挂载源lv设备时，只要源数据不发生改变，快照设备和源lv设备共享所有PE,<br>         当源设备里的数据发生改变时，会把数据的原始内容搬到快照空间里。<br>         挂载快照设备时，源数据保存在源LV设备里，我所有的操作都在快照空间里执行，<br>         只要数据不超过快照空间的大小就可以，一旦超过快照失效。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-磁盘阵列-raid-存储数据-备份数据\"><a href=\"#1-磁盘阵列-raid-存储数据-备份数据\" class=\"headerlink\" title=\"1.磁盘阵列 raid (存储数据 备份数据)\"></a>1.磁盘阵列 raid (存储数据 备份数据)</h4><p>   把多个单个的磁盘从逻辑上组成一个大磁盘，进行存储数据和备份数据。</p>\n<ul>\n<li><p>1.1 硬raid</p>\n</li>\n<li><p>1.2 软raid<br>   1） 用软件实现raid功能<br>   2） mdadm-2.6.9-3.el5.rpm</p>\n<pre><code>#which mdadm\n#rpm -qa /sbin/mdadm\n</code></pre><p>  3）根据制作raid设备时使用级别的不同，功能也不同<br>  4）级别：</p>\n<pre><code>raid0:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n      /dev/sda /dev/sdb raid0 /dev/md0\n      /dev/sdc /dev/sdd raid0 /deb/md1\n      交替存储，读写速度快，完整性差。\n\nraid1:至少需要2块单独的物理磁盘（容量，接口，转速相等）\n      一份数据存储两份，每份磁盘都存储一份，存储速度慢，完整性好。\n\nraid01: raid0+raid1\n\nraid10: raid1+raid0\n\nraid5: 至少需要3块单独物理磁盘\n       要有单独的一块盘来记录写在其他盘上的数据信息\n        /dev/sda    /dev/sdb    /dev/sdc\n           1G         1G          1G\n       raid5 = /dev/md0=(3-1)*1G   //储存容量\n\n 例：用/dev/hdd1-hdd4作级别是raid5的阵列设备，备用设备hdd4,\n     要开机挂载此设备，挂载到/md0目录里，让所有用户都可以向\n     /md0目录下存数据，但u1用户只能存500M数据。\n     1.分区 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4\n     2.修改标识\n       l:查看标识\n       t:修改标识为fd\n     3.#partprobe  //更新分区表\n     4.#mdadm -C /dev/md0 -l5 -n3 --spare-devices=1 /dev/hdd1 /dev/hdd2 /dev/hdd3 /dev/hdd4 \n      #mdadm -C /dev/md0 -l级别 -n磁盘数 --sparce-dervices=备用盘个数 /dev/hdd{1,2,3,4}\n\n        -C:创建raid设备\n        -l:raid级别\n        -n:raid设备磁盘数\n        --spare-devices = 1 :1块备用\n\n      5.#cat /proc/mdstat    //查看磁盘阵列是否做完\n\n      6.#mkfs.ext3 /dev/md0   //格式化\n\n      7.#mount /dev/md0 /newmd0/ //挂载 \n\n      8.#mdadm -Ds &gt; /etc/mdadm.conf   //扫描raid设备\n\n      9.#cat /proc/mdstat  //查看raid设备状态 \n\n      10.#mdadm -S /dev/md0 //停止raid设备\n\n      11.#mdadm -As /dev/md0  //启动raid设备                   \n</code></pre></li>\n</ul>\n<h4 id=\"2-PV\"><a href=\"#2-PV\" class=\"headerlink\" title=\"2. PV\"></a>2. PV</h4><ul>\n<li>2.1分区<br> 创建逻辑卷，在逻辑卷分区，改标识t-&gt;8e   </li>\n<li>2.2查看pv设备<br> #pvscan    //查看当前是否有PV设备</li>\n<li>2.3创建pv<pre><code>#pvcreate /dev/sda5 /dev/sda5\n#pvcreate /dev/sda{5,6}\n</code></pre></li>\n<li>2.4 查看pv详细信息<br>  #pvdisplay /dev/sda5</li>\n<li>2.5删除pv<br> #pvremove /dev/sda6</li>\n</ul>\n<h4 id=\"3-VG\"><a href=\"#3-VG\" class=\"headerlink\" title=\"3. VG\"></a>3. VG</h4><pre><code>* 3.1 创建VG\n  #vgcreate myvg /dev/sda5 /dev/sda6 //建myvg卷组，把pv放进来\n* 3.2 查看vg设备\n  #vgscan\n* 3.3 查看vg详细信息\n  #vgdisplay myvg\n* 3.4 从vg里移除pv\n  #vgreduce myvg /dev/sda6 //把指定的pv从vg中移除\n* 3.5 往vg里加pv\n  #vgextend myvg /dev/sda6 //把pv追加到已有的卷组里\n* 3.6 删除vg\n  #vgremoce myvg\n</code></pre><h4 id=\"4-LV-LV容量从现有的VG里来\"><a href=\"#4-LV-LV容量从现有的VG里来\" class=\"headerlink\" title=\"4.LV  LV容量从现有的VG里来\"></a>4.LV  LV容量从现有的VG里来</h4><pre><code>* 4.1 查看LV设备\n  #lvscan\n* 4.2 创建\n  #lvcreate -n lv1 -l 25 myvg  //用指定PE的个数来创建lv \n     -l:用PE个数来指定 25*4M\n  #lvcreate -n lv2 -L 500M  myvg  //使用容量来创建lv\n     -L:指定容量\n* 4.3 查看lv详细信息\n  #lvdisplay /dev/myvg/lv1\n* 4.4 删除lv\n  #lvremove /dev/myvg/lv2\n* 4.5 格式化\n  #mkfs.ext3 /dev/myvg/lv2 \n* 4.6 在线扩展lv\n  #lvresize -l +25 /dev/myvg/lv1 //把lv增大25PE\n* 4.7 更新lv\n  #resize2fs  /dev/myvg/lv1\n* 4.8 缩小lv\n    #umount /lv1\n    #resize2fs /dev/myvg/lv1 100M //把lv1缩小到100M\n    #e2fsck -f /dev/myvg/lv1\n</code></pre><ul>\n<li>4.9 把lv去掉25M<br> #lvresize -l -25 /dev/myvg/lv1</li>\n</ul>\n<h4 id=\"5-LV快照\"><a href=\"#5-LV快照\" class=\"headerlink\" title=\"5. LV快照:\"></a>5. LV快照:</h4><pre><code>* 5.1 创建快照\n   #lvcreate -n lv2s -l 25 -s /dev/vg2/lv2 \n* 5.2 查看快照信息\n  #lvs\n* 5.3移除快照\n   #lvremove /dev/vg2/lv2s\n</code></pre><blockquote>\n<p>   注：  可以挂载快照设备，也可以挂载源lv<br>         在挂载源lv设备时，只要源数据不发生改变，快照设备和源lv设备共享所有PE,<br>         当源设备里的数据发生改变时，会把数据的原始内容搬到快照空间里。<br>         挂载快照设备时，源数据保存在源LV设备里，我所有的操作都在快照空间里执行，<br>         只要数据不超过快照空间的大小就可以，一旦超过快照失效。</p>\n</blockquote>\n"},{"title":"网络yum源搭建","originContent":"","toc":true,"date":"2018-12-12T08:20:18.000Z","_content":"\n### 1.网络yum源（c/s）\n\ns 192.168.2.18 (server)\n  1)#rpm -q vsftpd //提供ftp服务\n   匿名默认访问的目录  /var/ftp  //如果共享，则把文件拷贝到这个目录\n  2)新建一个目录，把光盘挂载到新建的目录下即可\n    注：#fuser -mv /mnt  //查看谁在使用，无法卸载\n        #fuser -ik /mnt  //杀死所有使用者进程\n  #mkdir /var/ftp/iso\n  #mount /dev/cdrom /var/ftp/iso\n\nc 192.168.2.0/24 (client)\n  1)保证能访问共享\n    #ping -c 3 192.168.2.45\n    #ftp 192.168.2.45\n  2)添加配置文件\n```language\n   [root@localhost yum.repos.d]# cat iso.repo \n   [rhel-serverftp]\n   name=yum server ip is 192.168.2.45\n   baseurl=ftp://192.168.2.45/iso/Server/  //指定软件仓库的位置\n   enabled=1\n   gpgcheck=0\n```\n\n   制作iso文件 #cat /dev/cdrom > /rhel5.iso\n   #mount -o loop /rhel5.iso /mnt   //挂载镜象文件\n   \n  \n### 2.源码包安装\n```language\n  #rpm -qa | grep gcc\n  #rpm -qa | grep make\n  #rpm -qa | grep \"c++\"\n  #yum -y grouplist | grep \"开发工具\" \"开发库\"\n```\n\n  * 1)解压\n```language\n    #tar -zxvf httpd-2.2.9.tar.gz -C /usr/src/\n  * 2)配置\n   #./configure --prefix=/usr/local/sourcehttpd\n   #./configure --help //查看帮助\n```\n\n   --prefix:指定把软件安装到什么目录，如果不指定，则默认安装到/usr/local/目录下\n   在解压的目录下生成Makefile/Makefile.in文件，放置默认配置信息。\n  * 3)编译\n    #make clean //清除配置生成的临时文件\n    #make \n  * 4)安装\n   #make install\n\n   #netstat -utnlp | grep :3306 //查看端口号\n\n   mysql数据库服务软件包安装\n```language\n   #cd /usr/local/mysqld/bin\n   #./mysql_install_db --user=mysql //初始化数据库\n   #./mysqld_safe &  启动服务,在后台运行\n   #./mysql 登录数据库服务器\n```\n\n  无法登录时\n    1.修改配置文件 /usr/local/mysql-5.0/support-files/\n```language\n      #cp  my-medium.cnf   /etc/my.cnf\n      #vim /etc/my.cnf\n      #jobs   //查看后台运行的进程\n      #kill -9 %1  //杀死后台进程\n      #export PATH=/usr/local/mysqld/bin/:$PATH\n        // 全局添加自定义变量（当前有效）\n      #vim /etc/rc.local \n       //把export PATH=/usr/local/mysqld/bin/:$PATH添加到配置文件中，\n           永远有效\n```\n\n   * 5)源码包卸载\n\n    1).#cd /usr/src/mysql-5.0.1\n       #make uninstall\n\n    2).直接删除安装目录\n       #rm -rf /usr/local/mysqld\n\n    3).升级源码包（打补丁） xxx.patch\n       #cd /usr/local/mysqld\n       #patch -p1 < xxx.patch // 1代表几级目录\n","source":"_posts/网络yum源搭建.md","raw":"---\ntitle: 网络yum源搭建\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:20:18\n---\n\n### 1.网络yum源（c/s）\n\ns 192.168.2.18 (server)\n  1)#rpm -q vsftpd //提供ftp服务\n   匿名默认访问的目录  /var/ftp  //如果共享，则把文件拷贝到这个目录\n  2)新建一个目录，把光盘挂载到新建的目录下即可\n    注：#fuser -mv /mnt  //查看谁在使用，无法卸载\n        #fuser -ik /mnt  //杀死所有使用者进程\n  #mkdir /var/ftp/iso\n  #mount /dev/cdrom /var/ftp/iso\n\nc 192.168.2.0/24 (client)\n  1)保证能访问共享\n    #ping -c 3 192.168.2.45\n    #ftp 192.168.2.45\n  2)添加配置文件\n```language\n   [root@localhost yum.repos.d]# cat iso.repo \n   [rhel-serverftp]\n   name=yum server ip is 192.168.2.45\n   baseurl=ftp://192.168.2.45/iso/Server/  //指定软件仓库的位置\n   enabled=1\n   gpgcheck=0\n```\n\n   制作iso文件 #cat /dev/cdrom > /rhel5.iso\n   #mount -o loop /rhel5.iso /mnt   //挂载镜象文件\n   \n  \n### 2.源码包安装\n```language\n  #rpm -qa | grep gcc\n  #rpm -qa | grep make\n  #rpm -qa | grep \"c++\"\n  #yum -y grouplist | grep \"开发工具\" \"开发库\"\n```\n\n  * 1)解压\n```language\n    #tar -zxvf httpd-2.2.9.tar.gz -C /usr/src/\n  * 2)配置\n   #./configure --prefix=/usr/local/sourcehttpd\n   #./configure --help //查看帮助\n```\n\n   --prefix:指定把软件安装到什么目录，如果不指定，则默认安装到/usr/local/目录下\n   在解压的目录下生成Makefile/Makefile.in文件，放置默认配置信息。\n  * 3)编译\n    #make clean //清除配置生成的临时文件\n    #make \n  * 4)安装\n   #make install\n\n   #netstat -utnlp | grep :3306 //查看端口号\n\n   mysql数据库服务软件包安装\n```language\n   #cd /usr/local/mysqld/bin\n   #./mysql_install_db --user=mysql //初始化数据库\n   #./mysqld_safe &  启动服务,在后台运行\n   #./mysql 登录数据库服务器\n```\n\n  无法登录时\n    1.修改配置文件 /usr/local/mysql-5.0/support-files/\n```language\n      #cp  my-medium.cnf   /etc/my.cnf\n      #vim /etc/my.cnf\n      #jobs   //查看后台运行的进程\n      #kill -9 %1  //杀死后台进程\n      #export PATH=/usr/local/mysqld/bin/:$PATH\n        // 全局添加自定义变量（当前有效）\n      #vim /etc/rc.local \n       //把export PATH=/usr/local/mysqld/bin/:$PATH添加到配置文件中，\n           永远有效\n```\n\n   * 5)源码包卸载\n\n    1).#cd /usr/src/mysql-5.0.1\n       #make uninstall\n\n    2).直接删除安装目录\n       #rm -rf /usr/local/mysqld\n\n    3).升级源码包（打补丁） xxx.patch\n       #cd /usr/local/mysqld\n       #patch -p1 < xxx.patch // 1代表几级目录\n","slug":"网络yum源搭建","published":1,"updated":"2018-12-18T08:00:18.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eto001dyes6x0ppdd5e","content":"<h3 id=\"1-网络yum源（c-s）\"><a href=\"#1-网络yum源（c-s）\" class=\"headerlink\" title=\"1.网络yum源（c/s）\"></a>1.网络yum源（c/s）</h3><p>s 192.168.2.18 (server)<br>  1)#rpm -q vsftpd //提供ftp服务<br>   匿名默认访问的目录  /var/ftp  //如果共享，则把文件拷贝到这个目录<br>  2)新建一个目录，把光盘挂载到新建的目录下即可<br>    注：#fuser -mv /mnt  //查看谁在使用，无法卸载</p>\n<pre><code>#fuser -ik /mnt  //杀死所有使用者进程\n</code></pre><p>  #mkdir /var/ftp/iso</p>\n<p>  #mount /dev/cdrom /var/ftp/iso</p>\n<p>c 192.168.2.0/24 (client)<br>  1)保证能访问共享</p>\n<pre><code>#ping -c 3 192.168.2.45\n#ftp 192.168.2.45\n</code></pre><p>  2)添加配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost yum.repos.d]# cat iso.repo </span><br><span class=\"line\">[rhel-serverftp]</span><br><span class=\"line\">name=yum server ip is 192.168.2.45</span><br><span class=\"line\">baseurl=ftp://192.168.2.45/iso/Server/  //指定软件仓库的位置</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure></p>\n<p>   制作iso文件 #cat /dev/cdrom &gt; /rhel5.iso</p>\n<p>   #mount -o loop /rhel5.iso /mnt   //挂载镜象文件</p>\n<h3 id=\"2-源码包安装\"><a href=\"#2-源码包安装\" class=\"headerlink\" title=\"2.源码包安装\"></a>2.源码包安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#rpm -qa | grep gcc</span><br><span class=\"line\">#rpm -qa | grep make</span><br><span class=\"line\">#rpm -qa | grep &quot;c++&quot;</span><br><span class=\"line\">#yum -y grouplist | grep &quot;开发工具&quot; &quot;开发库&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>1)解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  #tar -zxvf httpd-2.2.9.tar.gz -C /usr/src/</span><br><span class=\"line\">* 2)配置</span><br><span class=\"line\"> #./configure --prefix=/usr/local/sourcehttpd</span><br><span class=\"line\"> #./configure --help //查看帮助</span><br></pre></td></tr></table></figure>\n<p>–prefix:指定把软件安装到什么目录，如果不指定，则默认安装到/usr/local/目录下<br>在解压的目录下生成Makefile/Makefile.in文件，放置默认配置信息。</p>\n</li>\n<li>3)编译<br>#make clean //清除配置生成的临时文件<br>#make </li>\n<li><p>4)安装<br>#make install</p>\n<p>#netstat -utnlp | grep :3306 //查看端口号</p>\n<p>mysql数据库服务软件包安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd /usr/local/mysqld/bin</span><br><span class=\"line\">#./mysql_install_db --user=mysql //初始化数据库</span><br><span class=\"line\">#./mysqld_safe &amp;  启动服务,在后台运行</span><br><span class=\"line\">#./mysql 登录数据库服务器</span><br></pre></td></tr></table></figure>\n<p>无法登录时<br>1.修改配置文件 /usr/local/mysql-5.0/support-files/</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cp  my-medium.cnf   /etc/my.cnf</span><br><span class=\"line\">#vim /etc/my.cnf</span><br><span class=\"line\">#jobs   //查看后台运行的进程</span><br><span class=\"line\">#kill -9 %1  //杀死后台进程</span><br><span class=\"line\">#export PATH=/usr/local/mysqld/bin/:$PATH</span><br><span class=\"line\">  // 全局添加自定义变量（当前有效）</span><br><span class=\"line\">#vim /etc/rc.local </span><br><span class=\"line\"> //把export PATH=/usr/local/mysqld/bin/:$PATH添加到配置文件中，</span><br><span class=\"line\">     永远有效</span><br></pre></td></tr></table></figure>\n<ul>\n<li>5)源码包卸载</li>\n</ul>\n<p>1).#cd /usr/src/mysql-5.0.1<br>   #make uninstall</p>\n<p>2).直接删除安装目录<br>   #rm -rf /usr/local/mysqld</p>\n<p>3).升级源码包（打补丁） xxx.patch<br>   #cd /usr/local/mysqld<br>   #patch -p1 &lt; xxx.patch // 1代表几级目录</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-网络yum源（c-s）\"><a href=\"#1-网络yum源（c-s）\" class=\"headerlink\" title=\"1.网络yum源（c/s）\"></a>1.网络yum源（c/s）</h3><p>s 192.168.2.18 (server)<br>  1)#rpm -q vsftpd //提供ftp服务<br>   匿名默认访问的目录  /var/ftp  //如果共享，则把文件拷贝到这个目录<br>  2)新建一个目录，把光盘挂载到新建的目录下即可<br>    注：#fuser -mv /mnt  //查看谁在使用，无法卸载</p>\n<pre><code>#fuser -ik /mnt  //杀死所有使用者进程\n</code></pre><p>  #mkdir /var/ftp/iso</p>\n<p>  #mount /dev/cdrom /var/ftp/iso</p>\n<p>c 192.168.2.0/24 (client)<br>  1)保证能访问共享</p>\n<pre><code>#ping -c 3 192.168.2.45\n#ftp 192.168.2.45\n</code></pre><p>  2)添加配置文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost yum.repos.d]# cat iso.repo </span><br><span class=\"line\">[rhel-serverftp]</span><br><span class=\"line\">name=yum server ip is 192.168.2.45</span><br><span class=\"line\">baseurl=ftp://192.168.2.45/iso/Server/  //指定软件仓库的位置</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure></p>\n<p>   制作iso文件 #cat /dev/cdrom &gt; /rhel5.iso</p>\n<p>   #mount -o loop /rhel5.iso /mnt   //挂载镜象文件</p>\n<h3 id=\"2-源码包安装\"><a href=\"#2-源码包安装\" class=\"headerlink\" title=\"2.源码包安装\"></a>2.源码包安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#rpm -qa | grep gcc</span><br><span class=\"line\">#rpm -qa | grep make</span><br><span class=\"line\">#rpm -qa | grep &quot;c++&quot;</span><br><span class=\"line\">#yum -y grouplist | grep &quot;开发工具&quot; &quot;开发库&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>1)解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  #tar -zxvf httpd-2.2.9.tar.gz -C /usr/src/</span><br><span class=\"line\">* 2)配置</span><br><span class=\"line\"> #./configure --prefix=/usr/local/sourcehttpd</span><br><span class=\"line\"> #./configure --help //查看帮助</span><br></pre></td></tr></table></figure>\n<p>–prefix:指定把软件安装到什么目录，如果不指定，则默认安装到/usr/local/目录下<br>在解压的目录下生成Makefile/Makefile.in文件，放置默认配置信息。</p>\n</li>\n<li>3)编译<br>#make clean //清除配置生成的临时文件<br>#make </li>\n<li><p>4)安装<br>#make install</p>\n<p>#netstat -utnlp | grep :3306 //查看端口号</p>\n<p>mysql数据库服务软件包安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cd /usr/local/mysqld/bin</span><br><span class=\"line\">#./mysql_install_db --user=mysql //初始化数据库</span><br><span class=\"line\">#./mysqld_safe &amp;  启动服务,在后台运行</span><br><span class=\"line\">#./mysql 登录数据库服务器</span><br></pre></td></tr></table></figure>\n<p>无法登录时<br>1.修改配置文件 /usr/local/mysql-5.0/support-files/</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#cp  my-medium.cnf   /etc/my.cnf</span><br><span class=\"line\">#vim /etc/my.cnf</span><br><span class=\"line\">#jobs   //查看后台运行的进程</span><br><span class=\"line\">#kill -9 %1  //杀死后台进程</span><br><span class=\"line\">#export PATH=/usr/local/mysqld/bin/:$PATH</span><br><span class=\"line\">  // 全局添加自定义变量（当前有效）</span><br><span class=\"line\">#vim /etc/rc.local </span><br><span class=\"line\"> //把export PATH=/usr/local/mysqld/bin/:$PATH添加到配置文件中，</span><br><span class=\"line\">     永远有效</span><br></pre></td></tr></table></figure>\n<ul>\n<li>5)源码包卸载</li>\n</ul>\n<p>1).#cd /usr/src/mysql-5.0.1<br>   #make uninstall</p>\n<p>2).直接删除安装目录<br>   #rm -rf /usr/local/mysqld</p>\n<p>3).升级源码包（打补丁） xxx.patch<br>   #cd /usr/local/mysqld<br>   #patch -p1 &lt; xxx.patch // 1代表几级目录</p>\n</li>\n</ul>\n"},{"title":"进程管理&计划任务","originContent":"","toc":true,"date":"2018-12-12T08:26:50.000Z","_content":"\n#### 1.进程管理\n    进程:运行中的程序\n    * 1.1 查看系统内的进行\n      #ps 选项\n       #ps aux\n       #ps -elf\n        -a:显示与终端无关的进行\n        -A:把系统内运行的所有类型的进程都显示出来\n        -u:把触发进程的用户名显示在前几列\n        -x -l -f :显示详细信息，一个比一个详细\n     #ps aux \n     USER     PID  %CPU %MEM VSZ      RSS       TTY                           STAT         START   TIME COMMAND\n     root      1   0.0  0.0  2164     648        ?                            Ss           10:25   0:00 init [5] \n          进程编号         虚拟内存KB 物理内存KB  在什么终端运行，?与终端无关 进程当前状态  进程触发时间 进程占用CPU 累计时间       进程名\n\n  进程状态 S s T Z D ？补全\n  R+:刚运行完或是进程组  \n  Sl:l表示进程是以线程方式运行的\n  #ps -elf\n  F    S   UID    PID    PPID    C    PRI     NI     ADDR    SZ    WCHAN    STIME    TTY    TIME      CMD\n  4    S   root    1       0     0    75       0       -     541     -      10:25     ?   00:00:00    init [5]   \n\n  PRI:系统内核给分配的优先级，无法修改\n  NI :管理员用户可以修改，修改NI的值改变PRI的值，值的范围-20~19,数越小优先级越高。\n  PRI=当前修改的NI值＋当前PRI值 \n  ADDR：物理内存\n  WCHAN：当前内存中的状态“－”表示正在运行\n\n  #pstree  选项     //查看进程数\n  #pgrep   进程名   //查看进行PID\n\n  * 1.2 动态显示进程\n       #top      //动态显示进程信息，默认5秒刷新一次\n         -d:指定刷新频率  #top -d 2  //2秒刷新一次\n         -b:指定执行\n         -n:执行次数\n         -p:单独查看指定进程的动态信息  \n       #top -p 进程PID  //动态查看进行信息\n       #top -b -n 2 > /tmp/top.txt   //显示2次输出到文件 \n  top - 12:20:55 up  1:55(系统运行多长时间),5 user(登录用户数),load average: 0.07, 0.13, 0.05(cpu1,5,15分钟平均数)\n  Tasks: 160 total(当前系统进程数),4 running(运行进程), 155 sleeping(睡觉进程),0 stopped(停止仅此),   1 zombie(僵死进程)\n  Cpu(s): 11.7%us,  7.9%sy,  0.0%ni, 78.0%id,  0.0%wa,  0.3%hi,  2.1%si,  0.0%st\n  Mem:   2065496k total,  1367416k used,   698080k free,    95156k buffers\n  Swap:  4128760k total,        0k used,  4128760k free,   793392k cached\n\n  进入top界面，按i查看cpu，按?查看所有top命令\n  P：按CPU使用率排序\n  M:按内存使用率排序\n  ?:显示帮助信息\n  1:显示CPU核数\n  k pid:杀死进程\n  r pid -20 --- 19:修改指定进程的优先级\n\n   * 1.3 终止进程\n     #kill  信号  pid号\n     #kill -l  //查看可以给进程发送的信号\n     ctrl+c :终止进程\n     ctrl+z:暂停进程，把进程置入后并暂停\n     #pkill -9 进程名  //用进程名杀死进程\n     #kill -9 `cat /var/run/httpd.pid`    //用存放进行PID的文件来杀死进程，``用来表示执行本身功能\n     #killall -9 vim  //杀死所有vim进程\n  * 1.4进程存放地址\n     /proc/PID\n     进程都有一个单独的文件存放进程ID /var/run/httpd.pid\n     /proc/PID/environ //存放进程变量\n    \n  * 1.5 进程报警\n     #ps aux | wc -l //查看总进程\n     #nump=`ps aux | wc -l`  //把总进程数赋值给nump  \n     #echo $nump \n\n  * 1.6 激活后台暂停的进程\n     #bg 1 //1表示[1] \n     [root@www 123]# jobs           \n     [1]-  Stopped                 find / -perm +7000 >&/dev/null\n     [2]+  Stopped                 find / -perm -7000 >&/dev/null\n     #fg 编号  //把后台进程调入前台\n     #kill -9 %1 //1是编号，杀死进程\n     \n  补充:\n>     ;  #mkdir /pljtest1;cd /plgtest1   //;代表顺序执行命令\n    &> 把正确的输出信息和错误的输出信息都改变默认的输出位置\n    &  把进程放入后台运行\n    #find / -perm +7000 &> /dev/null\n    #jobs //查看当前系统内有没有后台运行的进程\n    [root@www 123]# jobs\n    [1]-  Stopped                 find / -perm +7000 >&/dev/null\n    [2]+  Stopped                 find / -perm -7000 >&/dev/null\n    ＋：表示最近一次停止的进程\n   * 1.7 查看某个服务是否开机启动\n       #chkconfig  --list httpd //从查看httpd服务是否是开机启动\n       [root@www 123]# chkconfig --list httpd\n       httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n       linux操作系统共有7个运行级别，编号从0－6\n       0：关机\n       1：单用户维护模式 root登录模式\n       2：没有网络服务的字符模式\n       3：完全用户字符模式\n       4：保留\n       5：图形模式\n       6：重启系统\n       \n       #runlevel  //查看当前系统运行级别\n         [root@www ~]# runlevel\n          N 5           //N：上一次运行级别，5:当前运行级别\n       #chkconfig --level 5 httpd on  //当运行级别为5的时候开启httpd进程\n       #chkconfig --level 35 httpd on //当运行级别为3，5的时候开启httpd进程\n       #cat /etc/inittab //查看系统默认运行级别，在配置文件/etc/inittab下\n       #ntsync  //查看图形界面启动服务\n   * 1.8 重启系统\n        #reboot\n        #init 6\n        #shutdown -r now\n\n     忘记密码： e->菜单->e 2行 ->io后面加1->回车->b         \n     \n  * 1.9 查看进程状态\n    #netstat -autnlp httpd\n     -a:all\n     -u:users\n     -t:tcp\n     -n:num\n     -l:listen\n     -p: pid\n     [root@www Desktop]# netstat -autnlp | grep httpd\n     tcp        0      0 :::80         :::*  LISTEN      5579/httpd \n  * 1.10 修改进行PRI的值  \n     #nice --20 service httpd start //起动时修改NI的值为-20\n     #renice -15 5616    //把PID为5616的进行NI改为-15\n     newpri = oldpri + nice\n   \n#### 2.计划任务\n    * 2.1一次性计划任务\n        #atq //查看是否有一次性计划任务\n        #at 时间      //定制一次性计划任务\n        时间：\n           2.1.1 当前时间 23:00\n             #at 23:00\n           2.1.2 当前时间推迟\n             #at now +3days|hours|minutes 三天之后\n           2.1.3 固定日期\n             #at 2013-05-12\n           [root@www Desktop]# at now +3days\n           at> cp /etc/passwd /tmp/pwd.txt\n           at> <EOT>\n           job 2 at 2013-05-29  15:42    //ctrl+d结束\n           [root@www Desktop]# atq\n            2       2013-05-29 15:42 a root\n           #atq -c 2 //2是编号，查看详细信息\n           #atrm 3  //删除计划任务\n           #rm -rf /var/spool/at/文件名   //删除计划任务\n          2.1.4 没开始执行的计划任务存放路径\n            /var/spool/at/文件名\n           \n          2.1.5 控制用户能否使用一次性计划任务\n               #cat /etc/at.deny   //控制计划任务配置文件\n               #echo u6 >> /etc/at.deny  //不让u6使用计划任务\n                //写入at.deny中的用户都不可以使用\n               //默认只有此文件存在，不让那个普通用户使用就把那个用户名添加\n               //到这个文件里，一个用户独占一行                \n               #echo u6 > /etc/at.allow //u6可以使用计划任务\n               //把用户加入at.allow中就可以使用计划任务，at.allow默认不存在\n\n    * 2.2周期性计划任务","source":"_posts/进程管理-计划任务.md","raw":"---\ntitle: 进程管理&计划任务\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:26:50\n---\n\n#### 1.进程管理\n    进程:运行中的程序\n    * 1.1 查看系统内的进行\n      #ps 选项\n       #ps aux\n       #ps -elf\n        -a:显示与终端无关的进行\n        -A:把系统内运行的所有类型的进程都显示出来\n        -u:把触发进程的用户名显示在前几列\n        -x -l -f :显示详细信息，一个比一个详细\n     #ps aux \n     USER     PID  %CPU %MEM VSZ      RSS       TTY                           STAT         START   TIME COMMAND\n     root      1   0.0  0.0  2164     648        ?                            Ss           10:25   0:00 init [5] \n          进程编号         虚拟内存KB 物理内存KB  在什么终端运行，?与终端无关 进程当前状态  进程触发时间 进程占用CPU 累计时间       进程名\n\n  进程状态 S s T Z D ？补全\n  R+:刚运行完或是进程组  \n  Sl:l表示进程是以线程方式运行的\n  #ps -elf\n  F    S   UID    PID    PPID    C    PRI     NI     ADDR    SZ    WCHAN    STIME    TTY    TIME      CMD\n  4    S   root    1       0     0    75       0       -     541     -      10:25     ?   00:00:00    init [5]   \n\n  PRI:系统内核给分配的优先级，无法修改\n  NI :管理员用户可以修改，修改NI的值改变PRI的值，值的范围-20~19,数越小优先级越高。\n  PRI=当前修改的NI值＋当前PRI值 \n  ADDR：物理内存\n  WCHAN：当前内存中的状态“－”表示正在运行\n\n  #pstree  选项     //查看进程数\n  #pgrep   进程名   //查看进行PID\n\n  * 1.2 动态显示进程\n       #top      //动态显示进程信息，默认5秒刷新一次\n         -d:指定刷新频率  #top -d 2  //2秒刷新一次\n         -b:指定执行\n         -n:执行次数\n         -p:单独查看指定进程的动态信息  \n       #top -p 进程PID  //动态查看进行信息\n       #top -b -n 2 > /tmp/top.txt   //显示2次输出到文件 \n  top - 12:20:55 up  1:55(系统运行多长时间),5 user(登录用户数),load average: 0.07, 0.13, 0.05(cpu1,5,15分钟平均数)\n  Tasks: 160 total(当前系统进程数),4 running(运行进程), 155 sleeping(睡觉进程),0 stopped(停止仅此),   1 zombie(僵死进程)\n  Cpu(s): 11.7%us,  7.9%sy,  0.0%ni, 78.0%id,  0.0%wa,  0.3%hi,  2.1%si,  0.0%st\n  Mem:   2065496k total,  1367416k used,   698080k free,    95156k buffers\n  Swap:  4128760k total,        0k used,  4128760k free,   793392k cached\n\n  进入top界面，按i查看cpu，按?查看所有top命令\n  P：按CPU使用率排序\n  M:按内存使用率排序\n  ?:显示帮助信息\n  1:显示CPU核数\n  k pid:杀死进程\n  r pid -20 --- 19:修改指定进程的优先级\n\n   * 1.3 终止进程\n     #kill  信号  pid号\n     #kill -l  //查看可以给进程发送的信号\n     ctrl+c :终止进程\n     ctrl+z:暂停进程，把进程置入后并暂停\n     #pkill -9 进程名  //用进程名杀死进程\n     #kill -9 `cat /var/run/httpd.pid`    //用存放进行PID的文件来杀死进程，``用来表示执行本身功能\n     #killall -9 vim  //杀死所有vim进程\n  * 1.4进程存放地址\n     /proc/PID\n     进程都有一个单独的文件存放进程ID /var/run/httpd.pid\n     /proc/PID/environ //存放进程变量\n    \n  * 1.5 进程报警\n     #ps aux | wc -l //查看总进程\n     #nump=`ps aux | wc -l`  //把总进程数赋值给nump  \n     #echo $nump \n\n  * 1.6 激活后台暂停的进程\n     #bg 1 //1表示[1] \n     [root@www 123]# jobs           \n     [1]-  Stopped                 find / -perm +7000 >&/dev/null\n     [2]+  Stopped                 find / -perm -7000 >&/dev/null\n     #fg 编号  //把后台进程调入前台\n     #kill -9 %1 //1是编号，杀死进程\n     \n  补充:\n>     ;  #mkdir /pljtest1;cd /plgtest1   //;代表顺序执行命令\n    &> 把正确的输出信息和错误的输出信息都改变默认的输出位置\n    &  把进程放入后台运行\n    #find / -perm +7000 &> /dev/null\n    #jobs //查看当前系统内有没有后台运行的进程\n    [root@www 123]# jobs\n    [1]-  Stopped                 find / -perm +7000 >&/dev/null\n    [2]+  Stopped                 find / -perm -7000 >&/dev/null\n    ＋：表示最近一次停止的进程\n   * 1.7 查看某个服务是否开机启动\n       #chkconfig  --list httpd //从查看httpd服务是否是开机启动\n       [root@www 123]# chkconfig --list httpd\n       httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off\n       linux操作系统共有7个运行级别，编号从0－6\n       0：关机\n       1：单用户维护模式 root登录模式\n       2：没有网络服务的字符模式\n       3：完全用户字符模式\n       4：保留\n       5：图形模式\n       6：重启系统\n       \n       #runlevel  //查看当前系统运行级别\n         [root@www ~]# runlevel\n          N 5           //N：上一次运行级别，5:当前运行级别\n       #chkconfig --level 5 httpd on  //当运行级别为5的时候开启httpd进程\n       #chkconfig --level 35 httpd on //当运行级别为3，5的时候开启httpd进程\n       #cat /etc/inittab //查看系统默认运行级别，在配置文件/etc/inittab下\n       #ntsync  //查看图形界面启动服务\n   * 1.8 重启系统\n        #reboot\n        #init 6\n        #shutdown -r now\n\n     忘记密码： e->菜单->e 2行 ->io后面加1->回车->b         \n     \n  * 1.9 查看进程状态\n    #netstat -autnlp httpd\n     -a:all\n     -u:users\n     -t:tcp\n     -n:num\n     -l:listen\n     -p: pid\n     [root@www Desktop]# netstat -autnlp | grep httpd\n     tcp        0      0 :::80         :::*  LISTEN      5579/httpd \n  * 1.10 修改进行PRI的值  \n     #nice --20 service httpd start //起动时修改NI的值为-20\n     #renice -15 5616    //把PID为5616的进行NI改为-15\n     newpri = oldpri + nice\n   \n#### 2.计划任务\n    * 2.1一次性计划任务\n        #atq //查看是否有一次性计划任务\n        #at 时间      //定制一次性计划任务\n        时间：\n           2.1.1 当前时间 23:00\n             #at 23:00\n           2.1.2 当前时间推迟\n             #at now +3days|hours|minutes 三天之后\n           2.1.3 固定日期\n             #at 2013-05-12\n           [root@www Desktop]# at now +3days\n           at> cp /etc/passwd /tmp/pwd.txt\n           at> <EOT>\n           job 2 at 2013-05-29  15:42    //ctrl+d结束\n           [root@www Desktop]# atq\n            2       2013-05-29 15:42 a root\n           #atq -c 2 //2是编号，查看详细信息\n           #atrm 3  //删除计划任务\n           #rm -rf /var/spool/at/文件名   //删除计划任务\n          2.1.4 没开始执行的计划任务存放路径\n            /var/spool/at/文件名\n           \n          2.1.5 控制用户能否使用一次性计划任务\n               #cat /etc/at.deny   //控制计划任务配置文件\n               #echo u6 >> /etc/at.deny  //不让u6使用计划任务\n                //写入at.deny中的用户都不可以使用\n               //默认只有此文件存在，不让那个普通用户使用就把那个用户名添加\n               //到这个文件里，一个用户独占一行                \n               #echo u6 > /etc/at.allow //u6可以使用计划任务\n               //把用户加入at.allow中就可以使用计划任务，at.allow默认不存在\n\n    * 2.2周期性计划任务","slug":"进程管理-计划任务","published":1,"updated":"2018-12-18T08:00:18.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3etp001iyes6ll7s4eu8","content":"<h4 id=\"1-进程管理\"><a href=\"#1-进程管理\" class=\"headerlink\" title=\"1.进程管理\"></a>1.进程管理</h4><pre><code>进程:运行中的程序\n* 1.1 查看系统内的进行\n  #ps 选项\n   #ps aux\n   #ps -elf\n    -a:显示与终端无关的进行\n    -A:把系统内运行的所有类型的进程都显示出来\n    -u:把触发进程的用户名显示在前几列\n    -x -l -f :显示详细信息，一个比一个详细\n #ps aux \n USER     PID  %CPU %MEM VSZ      RSS       TTY                           STAT         START   TIME COMMAND\n root      1   0.0  0.0  2164     648        ?                            Ss           10:25   0:00 init [5] \n      进程编号         虚拟内存KB 物理内存KB  在什么终端运行，?与终端无关 进程当前状态  进程触发时间 进程占用CPU 累计时间       进程名\n</code></pre><p>  进程状态 S s T Z D ？补全<br>  R+:刚运行完或是进程组<br>  Sl:l表示进程是以线程方式运行的</p>\n<p>  #ps -elf<br>  F    S   UID    PID    PPID    C    PRI     NI     ADDR    SZ    WCHAN    STIME    TTY    TIME      CMD<br>  4    S   root    1       0     0    75       0       -     541     -      10:25     ?   00:00:00    init [5]   </p>\n<p>  PRI:系统内核给分配的优先级，无法修改<br>  NI :管理员用户可以修改，修改NI的值改变PRI的值，值的范围-20~19,数越小优先级越高。<br>  PRI=当前修改的NI值＋当前PRI值<br>  ADDR：物理内存<br>  WCHAN：当前内存中的状态“－”表示正在运行</p>\n<p>  #pstree  选项     //查看进程数</p>\n<p>  #pgrep   进程名   //查看进行PID</p>\n<ul>\n<li><p>1.2 动态显示进程<br>   #top      //动态显示进程信息，默认5秒刷新一次</p>\n<pre><code>-d:指定刷新频率  #top -d 2  //2秒刷新一次\n-b:指定执行\n-n:执行次数\n-p:单独查看指定进程的动态信息  \n</code></pre><p>   #top -p 进程PID  //动态查看进行信息<br>   #top -b -n 2 &gt; /tmp/top.txt   //显示2次输出到文件<br>top - 12:20:55 up  1:55(系统运行多长时间),5 user(登录用户数),load average: 0.07, 0.13, 0.05(cpu1,5,15分钟平均数)<br>Tasks: 160 total(当前系统进程数),4 running(运行进程), 155 sleeping(睡觉进程),0 stopped(停止仅此),   1 zombie(僵死进程)<br>Cpu(s): 11.7%us,  7.9%sy,  0.0%ni, 78.0%id,  0.0%wa,  0.3%hi,  2.1%si,  0.0%st<br>Mem:   2065496k total,  1367416k used,   698080k free,    95156k buffers<br>Swap:  4128760k total,        0k used,  4128760k free,   793392k cached</p>\n<p>进入top界面，按i查看cpu，按?查看所有top命令<br>P：按CPU使用率排序<br>M:按内存使用率排序<br>?:显示帮助信息<br>1:显示CPU核数<br>k pid:杀死进程<br>r pid -20 — 19:修改指定进程的优先级</p>\n<ul>\n<li>1.3 终止进程<br>#kill  信号  pid号<br>#kill -l  //查看可以给进程发送的信号<br>ctrl+c :终止进程<br>ctrl+z:暂停进程，把进程置入后并暂停<br>#pkill -9 进程名  //用进程名杀死进程<br>#kill -9 <code>cat /var/run/httpd.pid</code>    //用存放进行PID的文件来杀死进程，<code></code>用来表示执行本身功能<br>#killall -9 vim  //杀死所有vim进程</li>\n</ul>\n</li>\n<li><p>1.4进程存放地址<br> /proc/PID<br> 进程都有一个单独的文件存放进程ID /var/run/httpd.pid<br> /proc/PID/environ //存放进程变量</p>\n</li>\n<li><p>1.5 进程报警<br> #ps aux | wc -l //查看总进程<br> #nump=<code>ps aux | wc -l</code>  //把总进程数赋值给nump<br> #echo $nump </p>\n</li>\n<li><p>1.6 激活后台暂停的进程<br> #bg 1 //1表示[1]<br> [root@www 123]# jobs<br> [1]-  Stopped                 find / -perm +7000 &gt;&amp;/dev/null<br> [2]+  Stopped                 find / -perm -7000 &gt;&amp;/dev/null<br> #fg 编号  //把后台进程调入前台<br> #kill -9 %1 //1是编号，杀死进程</p>\n<p>补充:</p>\n<blockquote>\n<pre><code>;  #mkdir /pljtest1;cd /plgtest1   //;代表顺序执行命令\n</code></pre><p>&amp;&gt; 把正确的输出信息和错误的输出信息都改变默认的输出位置<br>&amp;  把进程放入后台运行</p>\n</blockquote>\n<p>#find / -perm +7000 &amp;&gt; /dev/null<br>#jobs //查看当前系统内有没有后台运行的进程<br>[root@www 123]# jobs<br>[1]-  Stopped                 find / -perm +7000 &gt;&amp;/dev/null<br>[2]+  Stopped                 find / -perm -7000 &gt;&amp;/dev/null<br>＋：表示最近一次停止的进程</p>\n<ul>\n<li><p>1.7 查看某个服务是否开机启动<br> #chkconfig  –list httpd //从查看httpd服务是否是开机启动<br> [root@www 123]# chkconfig –list httpd<br> httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off<br> linux操作系统共有7个运行级别，编号从0－6<br> 0：关机<br> 1：单用户维护模式 root登录模式<br> 2：没有网络服务的字符模式<br> 3：完全用户字符模式<br> 4：保留<br> 5：图形模式<br> 6：重启系统</p>\n<p> #runlevel  //查看当前系统运行级别<br>   [root@www ~]# runlevel</p>\n<pre><code>N 5           //N：上一次运行级别，5:当前运行级别\n</code></pre><p> #chkconfig –level 5 httpd on  //当运行级别为5的时候开启httpd进程<br> #chkconfig –level 35 httpd on //当运行级别为3，5的时候开启httpd进程<br> #cat /etc/inittab //查看系统默认运行级别，在配置文件/etc/inittab下<br> #ntsync  //查看图形界面启动服务</p>\n</li>\n<li><p>1.8 重启系统<br>  #reboot<br>  #init 6<br>  #shutdown -r now</p>\n<p>忘记密码： e-&gt;菜单-&gt;e 2行 -&gt;io后面加1-&gt;回车-&gt;b         </p>\n</li>\n</ul>\n</li>\n<li><p>1.9 查看进程状态<br>#netstat -autnlp httpd<br> -a:all<br> -u:users<br> -t:tcp<br> -n:num<br> -l:listen<br> -p: pid<br> [root@www Desktop]# netstat -autnlp | grep httpd<br> tcp        0      0 :::80         :::*  LISTEN      5579/httpd </p>\n</li>\n<li>1.10 修改进行PRI的值<br> #nice –20 service httpd start //起动时修改NI的值为-20<br> #renice -15 5616    //把PID为5616的进行NI改为-15<br> newpri = oldpri + nice</li>\n</ul>\n<h4 id=\"2-计划任务\"><a href=\"#2-计划任务\" class=\"headerlink\" title=\"2.计划任务\"></a>2.计划任务</h4><pre><code>* 2.1一次性计划任务\n    #atq //查看是否有一次性计划任务\n    #at 时间      //定制一次性计划任务\n    时间：\n       2.1.1 当前时间 23:00\n         #at 23:00\n       2.1.2 当前时间推迟\n         #at now +3days|hours|minutes 三天之后\n       2.1.3 固定日期\n         #at 2013-05-12\n       [root@www Desktop]# at now +3days\n       at&gt; cp /etc/passwd /tmp/pwd.txt\n       at&gt; &lt;EOT&gt;\n       job 2 at 2013-05-29  15:42    //ctrl+d结束\n       [root@www Desktop]# atq\n        2       2013-05-29 15:42 a root\n       #atq -c 2 //2是编号，查看详细信息\n       #atrm 3  //删除计划任务\n       #rm -rf /var/spool/at/文件名   //删除计划任务\n      2.1.4 没开始执行的计划任务存放路径\n        /var/spool/at/文件名\n\n      2.1.5 控制用户能否使用一次性计划任务\n           #cat /etc/at.deny   //控制计划任务配置文件\n           #echo u6 &gt;&gt; /etc/at.deny  //不让u6使用计划任务\n            //写入at.deny中的用户都不可以使用\n           //默认只有此文件存在，不让那个普通用户使用就把那个用户名添加\n           //到这个文件里，一个用户独占一行                \n           #echo u6 &gt; /etc/at.allow //u6可以使用计划任务\n           //把用户加入at.allow中就可以使用计划任务，at.allow默认不存在\n\n* 2.2周期性计划任务\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-进程管理\"><a href=\"#1-进程管理\" class=\"headerlink\" title=\"1.进程管理\"></a>1.进程管理</h4><pre><code>进程:运行中的程序\n* 1.1 查看系统内的进行\n  #ps 选项\n   #ps aux\n   #ps -elf\n    -a:显示与终端无关的进行\n    -A:把系统内运行的所有类型的进程都显示出来\n    -u:把触发进程的用户名显示在前几列\n    -x -l -f :显示详细信息，一个比一个详细\n #ps aux \n USER     PID  %CPU %MEM VSZ      RSS       TTY                           STAT         START   TIME COMMAND\n root      1   0.0  0.0  2164     648        ?                            Ss           10:25   0:00 init [5] \n      进程编号         虚拟内存KB 物理内存KB  在什么终端运行，?与终端无关 进程当前状态  进程触发时间 进程占用CPU 累计时间       进程名\n</code></pre><p>  进程状态 S s T Z D ？补全<br>  R+:刚运行完或是进程组<br>  Sl:l表示进程是以线程方式运行的</p>\n<p>  #ps -elf<br>  F    S   UID    PID    PPID    C    PRI     NI     ADDR    SZ    WCHAN    STIME    TTY    TIME      CMD<br>  4    S   root    1       0     0    75       0       -     541     -      10:25     ?   00:00:00    init [5]   </p>\n<p>  PRI:系统内核给分配的优先级，无法修改<br>  NI :管理员用户可以修改，修改NI的值改变PRI的值，值的范围-20~19,数越小优先级越高。<br>  PRI=当前修改的NI值＋当前PRI值<br>  ADDR：物理内存<br>  WCHAN：当前内存中的状态“－”表示正在运行</p>\n<p>  #pstree  选项     //查看进程数</p>\n<p>  #pgrep   进程名   //查看进行PID</p>\n<ul>\n<li><p>1.2 动态显示进程<br>   #top      //动态显示进程信息，默认5秒刷新一次</p>\n<pre><code>-d:指定刷新频率  #top -d 2  //2秒刷新一次\n-b:指定执行\n-n:执行次数\n-p:单独查看指定进程的动态信息  \n</code></pre><p>   #top -p 进程PID  //动态查看进行信息<br>   #top -b -n 2 &gt; /tmp/top.txt   //显示2次输出到文件<br>top - 12:20:55 up  1:55(系统运行多长时间),5 user(登录用户数),load average: 0.07, 0.13, 0.05(cpu1,5,15分钟平均数)<br>Tasks: 160 total(当前系统进程数),4 running(运行进程), 155 sleeping(睡觉进程),0 stopped(停止仅此),   1 zombie(僵死进程)<br>Cpu(s): 11.7%us,  7.9%sy,  0.0%ni, 78.0%id,  0.0%wa,  0.3%hi,  2.1%si,  0.0%st<br>Mem:   2065496k total,  1367416k used,   698080k free,    95156k buffers<br>Swap:  4128760k total,        0k used,  4128760k free,   793392k cached</p>\n<p>进入top界面，按i查看cpu，按?查看所有top命令<br>P：按CPU使用率排序<br>M:按内存使用率排序<br>?:显示帮助信息<br>1:显示CPU核数<br>k pid:杀死进程<br>r pid -20 — 19:修改指定进程的优先级</p>\n<ul>\n<li>1.3 终止进程<br>#kill  信号  pid号<br>#kill -l  //查看可以给进程发送的信号<br>ctrl+c :终止进程<br>ctrl+z:暂停进程，把进程置入后并暂停<br>#pkill -9 进程名  //用进程名杀死进程<br>#kill -9 <code>cat /var/run/httpd.pid</code>    //用存放进行PID的文件来杀死进程，<code></code>用来表示执行本身功能<br>#killall -9 vim  //杀死所有vim进程</li>\n</ul>\n</li>\n<li><p>1.4进程存放地址<br> /proc/PID<br> 进程都有一个单独的文件存放进程ID /var/run/httpd.pid<br> /proc/PID/environ //存放进程变量</p>\n</li>\n<li><p>1.5 进程报警<br> #ps aux | wc -l //查看总进程<br> #nump=<code>ps aux | wc -l</code>  //把总进程数赋值给nump<br> #echo $nump </p>\n</li>\n<li><p>1.6 激活后台暂停的进程<br> #bg 1 //1表示[1]<br> [root@www 123]# jobs<br> [1]-  Stopped                 find / -perm +7000 &gt;&amp;/dev/null<br> [2]+  Stopped                 find / -perm -7000 &gt;&amp;/dev/null<br> #fg 编号  //把后台进程调入前台<br> #kill -9 %1 //1是编号，杀死进程</p>\n<p>补充:</p>\n<blockquote>\n<pre><code>;  #mkdir /pljtest1;cd /plgtest1   //;代表顺序执行命令\n</code></pre><p>&amp;&gt; 把正确的输出信息和错误的输出信息都改变默认的输出位置<br>&amp;  把进程放入后台运行</p>\n</blockquote>\n<p>#find / -perm +7000 &amp;&gt; /dev/null<br>#jobs //查看当前系统内有没有后台运行的进程<br>[root@www 123]# jobs<br>[1]-  Stopped                 find / -perm +7000 &gt;&amp;/dev/null<br>[2]+  Stopped                 find / -perm -7000 &gt;&amp;/dev/null<br>＋：表示最近一次停止的进程</p>\n<ul>\n<li><p>1.7 查看某个服务是否开机启动<br> #chkconfig  –list httpd //从查看httpd服务是否是开机启动<br> [root@www 123]# chkconfig –list httpd<br> httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off<br> linux操作系统共有7个运行级别，编号从0－6<br> 0：关机<br> 1：单用户维护模式 root登录模式<br> 2：没有网络服务的字符模式<br> 3：完全用户字符模式<br> 4：保留<br> 5：图形模式<br> 6：重启系统</p>\n<p> #runlevel  //查看当前系统运行级别<br>   [root@www ~]# runlevel</p>\n<pre><code>N 5           //N：上一次运行级别，5:当前运行级别\n</code></pre><p> #chkconfig –level 5 httpd on  //当运行级别为5的时候开启httpd进程<br> #chkconfig –level 35 httpd on //当运行级别为3，5的时候开启httpd进程<br> #cat /etc/inittab //查看系统默认运行级别，在配置文件/etc/inittab下<br> #ntsync  //查看图形界面启动服务</p>\n</li>\n<li><p>1.8 重启系统<br>  #reboot<br>  #init 6<br>  #shutdown -r now</p>\n<p>忘记密码： e-&gt;菜单-&gt;e 2行 -&gt;io后面加1-&gt;回车-&gt;b         </p>\n</li>\n</ul>\n</li>\n<li><p>1.9 查看进程状态<br>#netstat -autnlp httpd<br> -a:all<br> -u:users<br> -t:tcp<br> -n:num<br> -l:listen<br> -p: pid<br> [root@www Desktop]# netstat -autnlp | grep httpd<br> tcp        0      0 :::80         :::*  LISTEN      5579/httpd </p>\n</li>\n<li>1.10 修改进行PRI的值<br> #nice –20 service httpd start //起动时修改NI的值为-20<br> #renice -15 5616    //把PID为5616的进行NI改为-15<br> newpri = oldpri + nice</li>\n</ul>\n<h4 id=\"2-计划任务\"><a href=\"#2-计划任务\" class=\"headerlink\" title=\"2.计划任务\"></a>2.计划任务</h4><pre><code>* 2.1一次性计划任务\n    #atq //查看是否有一次性计划任务\n    #at 时间      //定制一次性计划任务\n    时间：\n       2.1.1 当前时间 23:00\n         #at 23:00\n       2.1.2 当前时间推迟\n         #at now +3days|hours|minutes 三天之后\n       2.1.3 固定日期\n         #at 2013-05-12\n       [root@www Desktop]# at now +3days\n       at&gt; cp /etc/passwd /tmp/pwd.txt\n       at&gt; &lt;EOT&gt;\n       job 2 at 2013-05-29  15:42    //ctrl+d结束\n       [root@www Desktop]# atq\n        2       2013-05-29 15:42 a root\n       #atq -c 2 //2是编号，查看详细信息\n       #atrm 3  //删除计划任务\n       #rm -rf /var/spool/at/文件名   //删除计划任务\n      2.1.4 没开始执行的计划任务存放路径\n        /var/spool/at/文件名\n\n      2.1.5 控制用户能否使用一次性计划任务\n           #cat /etc/at.deny   //控制计划任务配置文件\n           #echo u6 &gt;&gt; /etc/at.deny  //不让u6使用计划任务\n            //写入at.deny中的用户都不可以使用\n           //默认只有此文件存在，不让那个普通用户使用就把那个用户名添加\n           //到这个文件里，一个用户独占一行                \n           #echo u6 &gt; /etc/at.allow //u6可以使用计划任务\n           //把用户加入at.allow中就可以使用计划任务，at.allow默认不存在\n\n* 2.2周期性计划任务\n</code></pre>"},{"title":"使用phpunit进行单元测试","originContent":"PHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent Beck的SUnit，是xUnit家族的框架之一。\n\n单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一 些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元， 例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。\n\n总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带 了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。\n\n另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。\n\n官网地址：https://phpunit.de/\n官方文档：https://phpunit.readthedocs.io/zh_CN/latest/\n### 1、安装phpunit\n可以全局安装，也可以在项目中通过composer安装\n\n全局安装\n```bash\n$:cd /usr/local/bin\n$:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar\n$:chmod a+x phpunit\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\ncomposer依赖\n```bash\n$:composer require --dev phpunit/phpunit ^7\n$:./vendor/bin/phpunit --version\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\n### 2、配置phpunit\n在phpstorm中，在reference中选择 Languages & Frameworks > PHP > Test Frameworks。\n![Test Frameworks](../images/image2018-12-4_13-23-29.png)\n\n在右侧点击“+”号，选择添加“PHPUnit Local”。\n![PHPUnit Local](../images/image2018-12-4_13-24-12-2.png)\n\n选择“Path to phpunit.phar\"，路径为“/usr/local/bin/phpunit”，“Default configuration file:”为项目中的phpunit.xml文件即可。\n![Path to phpunit](../images/image2018-12-4_13-30-47-3.png)\n\n经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。\n\n### 3、配置文件\nlavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。\n\n一般的lavarel的phpunit.xml的内容如下：\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"bootstrap/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <!--这段代码可用来生成测试覆盖率报告-->\n        <log type=\"coverage-html\" target=\"./reports/\" charset=\"UTF-8\"/>\n    </logging>\n    <php>\n        <env name=\"APP_ENV\" value=\"testing\"/>\n        <env name=\"CACHE_DRIVER\" value=\"array\"/>\n        <env name=\"SESSION_DRIVER\" value=\"array\"/>\n        <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    </php>\n</phpunit>\n\n```\n具体的用法可以通过这个文档进一步了解：https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\n\n\n### 4、创建测试用例\n在laravel中创建测试用例，可以使用下面的命令：\n```bash\n// 在 Feature 目录下创建测试类...\nphp artisan make:test UserTest\n\n// 在 Unit 目录下创建测试类...\nphp artisan make:test UserTest --unit\n\n```\n\n下面就是一个简单地对Model进行测试的单测\n```php\n<?php\nnamespace Tests\\Feature;\n\nuse App\\Models\\Schedule;\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ConflictTest extends TestCase\n{\n    /**\n     * A basic test example.\n     *\n     * @return void\n     */\n    public function testExample()\n    {\n        $teachers = Schedule::where('teacher_id', 2574)->get()->toArray();\n        // 断言返回的数据不为空\n        $this->assertNotEmpty($teachers);\n    }\n}\n```\n\n![](../images/image2018-12-4_13-45-12-4.png)\n点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。\n![](../images/image2018-12-4_13-46-6-5.png)\n\n### 5、代码覆盖率\n如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。\n![](../images/image2018-12-4_14-7-13-6.png)\n\n根据报表可以查看某个方法的测试覆盖率。\n![](../images/image2018-12-4_14-10-10-7.png)\n\n进入到文件，可以查看更详细地覆盖情况。\n![](../images/image2018-12-4_14-8-16-8.png)\n绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。","toc":true,"date":"2018-12-05T07:56:14.000Z","_content":"\nPHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent Beck的SUnit，是xUnit家族的框架之一。\n\n单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一 些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元， 例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。\n\n总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带 了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。\n\n另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。\n\n官网地址：https://phpunit.de/\n官方文档：https://phpunit.readthedocs.io/zh_CN/latest/\n### 1、安装phpunit\n可以全局安装，也可以在项目中通过composer安装\n\n全局安装\n```bash\n$:cd /usr/local/bin\n$:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar\n$:chmod a+x phpunit\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\ncomposer依赖\n```bash\n$:composer require --dev phpunit/phpunit ^7\n$:./vendor/bin/phpunit --version\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\n### 2、配置phpunit\n在phpstorm中，在reference中选择 Languages & Frameworks > PHP > Test Frameworks。\n![Test Frameworks](/images/image2018-12-4_13-23-29.png)\n\n在右侧点击“+”号，选择添加“PHPUnit Local”。\n![PHPUnit Local](/images/image2018-12-4_13-24-12-2.png)\n\n选择“Path to phpunit.phar\"，路径为“/usr/local/bin/phpunit”，“Default configuration file:”为项目中的phpunit.xml文件即可。\n![Path to phpunit](/images/image2018-12-4_13-30-47-3.png)\n\n经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。\n\n### 3、配置文件\nlavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。\n\n一般的lavarel的phpunit.xml的内容如下：\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"bootstrap/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <!--这段代码可用来生成测试覆盖率报告-->\n        <log type=\"coverage-html\" target=\"./reports/\" charset=\"UTF-8\"/>\n    </logging>\n    <php>\n        <env name=\"APP_ENV\" value=\"testing\"/>\n        <env name=\"CACHE_DRIVER\" value=\"array\"/>\n        <env name=\"SESSION_DRIVER\" value=\"array\"/>\n        <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    </php>\n</phpunit>\n\n```\n具体的用法可以通过这个文档进一步了解：https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\n\n\n### 4、创建测试用例\n在laravel中创建测试用例，可以使用下面的命令：\n```bash\n// 在 Feature 目录下创建测试类...\nphp artisan make:test UserTest\n\n// 在 Unit 目录下创建测试类...\nphp artisan make:test UserTest --unit\n\n```\n\n下面就是一个简单地对Model进行测试的单测\n```php\n<?php\nnamespace Tests\\Feature;\n\nuse App\\Models\\Schedule;\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ConflictTest extends TestCase\n{\n    /**\n     * A basic test example.\n     *\n     * @return void\n     */\n    public function testExample()\n    {\n        $teachers = Schedule::where('teacher_id', 2574)->get()->toArray();\n        // 断言返回的数据不为空\n        $this->assertNotEmpty($teachers);\n    }\n}\n```\n\n![](/images/image2018-12-4_13-45-12-4.png)\n点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。\n![](/images/image2018-12-4_13-46-6-5.png)\n\n### 5、代码覆盖率\n如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。\n![](/images/image2018-12-4_14-7-13-6.png)\n\n根据报表可以查看某个方法的测试覆盖率。\n![](/images/image2018-12-4_14-10-10-7.png)\n\n进入到文件，可以查看更详细地覆盖情况。\n![](/images/image2018-12-4_14-8-16-8.png)\n绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。","source":"_posts/使用phpunit进行单元测试.md","raw":"---\ntitle: 使用phpunit进行单元测试\ntags:\n  - php\noriginContent: >-\n  PHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent\n  Beck的SUnit，是xUnit家族的框架之一。\n\n\n  单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一\n  些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元，\n  例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。\n\n\n  总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带\n  了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。\n\n\n  另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。\n\n\n  官网地址：https://phpunit.de/\n\n  官方文档：https://phpunit.readthedocs.io/zh_CN/latest/\n\n  ### 1、安装phpunit\n\n  可以全局安装，也可以在项目中通过composer安装\n\n\n  全局安装\n\n  ```bash\n\n  $:cd /usr/local/bin\n\n  $:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar\n\n  $:chmod a+x phpunit\n\n  PHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n\n  ```\n\n\n  composer依赖\n\n  ```bash\n\n  $:composer require --dev phpunit/phpunit ^7\n\n  $:./vendor/bin/phpunit --version\n\n  PHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n\n  ```\n\n\n  ### 2、配置phpunit\n\n  在phpstorm中，在reference中选择 Languages & Frameworks > PHP > Test Frameworks。\n\n  ![Test Frameworks](../images/image2018-12-4_13-23-29.png)\n\n\n  在右侧点击“+”号，选择添加“PHPUnit Local”。\n\n  ![PHPUnit Local](../images/image2018-12-4_13-24-12-2.png)\n\n\n  选择“Path to phpunit.phar\"，路径为“/usr/local/bin/phpunit”，“Default configuration\n  file:”为项目中的phpunit.xml文件即可。\n\n  ![Path to phpunit](../images/image2018-12-4_13-30-47-3.png)\n\n\n  经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。\n\n\n  ### 3、配置文件\n\n  lavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。\n\n\n  一般的lavarel的phpunit.xml的内容如下：\n\n  ```xml\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n  <phpunit backupGlobals=\"false\"\n           backupStaticAttributes=\"false\"\n           bootstrap=\"bootstrap/autoload.php\"\n           colors=\"true\"\n           convertErrorsToExceptions=\"true\"\n           convertNoticesToExceptions=\"true\"\n           convertWarningsToExceptions=\"true\"\n           processIsolation=\"false\"\n           stopOnFailure=\"false\">\n      <testsuites>\n          <testsuite name=\"Feature\">\n              <directory suffix=\"Test.php\">./tests/Feature</directory>\n          </testsuite>\n\n          <testsuite name=\"Unit\">\n              <directory suffix=\"Test.php\">./tests/Unit</directory>\n          </testsuite>\n      </testsuites>\n      <filter>\n          <whitelist processUncoveredFilesFromWhitelist=\"true\">\n              <directory suffix=\".php\">./app</directory>\n          </whitelist>\n      </filter>\n      <logging>\n          <!--这段代码可用来生成测试覆盖率报告-->\n          <log type=\"coverage-html\" target=\"./reports/\" charset=\"UTF-8\"/>\n      </logging>\n      <php>\n          <env name=\"APP_ENV\" value=\"testing\"/>\n          <env name=\"CACHE_DRIVER\" value=\"array\"/>\n          <env name=\"SESSION_DRIVER\" value=\"array\"/>\n          <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n      </php>\n  </phpunit>\n\n\n  ```\n\n  具体的用法可以通过这个文档进一步了解：https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\n\n\n\n  ### 4、创建测试用例\n\n  在laravel中创建测试用例，可以使用下面的命令：\n\n  ```bash\n\n  // 在 Feature 目录下创建测试类...\n\n  php artisan make:test UserTest\n\n\n  // 在 Unit 目录下创建测试类...\n\n  php artisan make:test UserTest --unit\n\n\n  ```\n\n\n  下面就是一个简单地对Model进行测试的单测\n\n  ```php\n\n  <?php\n\n  namespace Tests\\Feature;\n\n\n  use App\\Models\\Schedule;\n\n  use Tests\\TestCase;\n\n  use Illuminate\\Foundation\\Testing\\WithFaker;\n\n  use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\n\n  class ConflictTest extends TestCase\n\n  {\n      /**\n       * A basic test example.\n       *\n       * @return void\n       */\n      public function testExample()\n      {\n          $teachers = Schedule::where('teacher_id', 2574)->get()->toArray();\n          // 断言返回的数据不为空\n          $this->assertNotEmpty($teachers);\n      }\n  }\n\n  ```\n\n\n  ![](../images/image2018-12-4_13-45-12-4.png)\n\n  点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。\n\n  ![](../images/image2018-12-4_13-46-6-5.png)\n\n\n  ### 5、代码覆盖率\n\n  如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。\n\n  ![](../images/image2018-12-4_14-7-13-6.png)\n\n\n  根据报表可以查看某个方法的测试覆盖率。\n\n  ![](../images/image2018-12-4_14-10-10-7.png)\n\n\n  进入到文件，可以查看更详细地覆盖情况。\n\n  ![](../images/image2018-12-4_14-8-16-8.png)\n\n  绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。\ncategories:\n  - php\ntoc: true\ndate: 2018-12-05 15:56:14\n---\n\nPHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent Beck的SUnit，是xUnit家族的框架之一。\n\n单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一 些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元， 例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。\n\n总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带 了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。\n\n另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。\n\n官网地址：https://phpunit.de/\n官方文档：https://phpunit.readthedocs.io/zh_CN/latest/\n### 1、安装phpunit\n可以全局安装，也可以在项目中通过composer安装\n\n全局安装\n```bash\n$:cd /usr/local/bin\n$:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar\n$:chmod a+x phpunit\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\ncomposer依赖\n```bash\n$:composer require --dev phpunit/phpunit ^7\n$:./vendor/bin/phpunit --version\nPHPUnit 7.0.0 by Sebastian Bergmann and contributors.\n```\n\n### 2、配置phpunit\n在phpstorm中，在reference中选择 Languages & Frameworks > PHP > Test Frameworks。\n![Test Frameworks](/images/image2018-12-4_13-23-29.png)\n\n在右侧点击“+”号，选择添加“PHPUnit Local”。\n![PHPUnit Local](/images/image2018-12-4_13-24-12-2.png)\n\n选择“Path to phpunit.phar\"，路径为“/usr/local/bin/phpunit”，“Default configuration file:”为项目中的phpunit.xml文件即可。\n![Path to phpunit](/images/image2018-12-4_13-30-47-3.png)\n\n经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。\n\n### 3、配置文件\nlavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。\n\n一般的lavarel的phpunit.xml的内容如下：\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"bootstrap/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\">\n    <testsuites>\n        <testsuite name=\"Feature\">\n            <directory suffix=\"Test.php\">./tests/Feature</directory>\n        </testsuite>\n\n        <testsuite name=\"Unit\">\n            <directory suffix=\"Test.php\">./tests/Unit</directory>\n        </testsuite>\n    </testsuites>\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist=\"true\">\n            <directory suffix=\".php\">./app</directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <!--这段代码可用来生成测试覆盖率报告-->\n        <log type=\"coverage-html\" target=\"./reports/\" charset=\"UTF-8\"/>\n    </logging>\n    <php>\n        <env name=\"APP_ENV\" value=\"testing\"/>\n        <env name=\"CACHE_DRIVER\" value=\"array\"/>\n        <env name=\"SESSION_DRIVER\" value=\"array\"/>\n        <env name=\"QUEUE_DRIVER\" value=\"sync\"/>\n    </php>\n</phpunit>\n\n```\n具体的用法可以通过这个文档进一步了解：https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\n\n\n### 4、创建测试用例\n在laravel中创建测试用例，可以使用下面的命令：\n```bash\n// 在 Feature 目录下创建测试类...\nphp artisan make:test UserTest\n\n// 在 Unit 目录下创建测试类...\nphp artisan make:test UserTest --unit\n\n```\n\n下面就是一个简单地对Model进行测试的单测\n```php\n<?php\nnamespace Tests\\Feature;\n\nuse App\\Models\\Schedule;\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ConflictTest extends TestCase\n{\n    /**\n     * A basic test example.\n     *\n     * @return void\n     */\n    public function testExample()\n    {\n        $teachers = Schedule::where('teacher_id', 2574)->get()->toArray();\n        // 断言返回的数据不为空\n        $this->assertNotEmpty($teachers);\n    }\n}\n```\n\n![](/images/image2018-12-4_13-45-12-4.png)\n点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。\n![](/images/image2018-12-4_13-46-6-5.png)\n\n### 5、代码覆盖率\n如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。\n![](/images/image2018-12-4_14-7-13-6.png)\n\n根据报表可以查看某个方法的测试覆盖率。\n![](/images/image2018-12-4_14-10-10-7.png)\n\n进入到文件，可以查看更详细地覆盖情况。\n![](/images/image2018-12-4_14-8-16-8.png)\n绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。","slug":"使用phpunit进行单元测试","published":1,"updated":"2018-12-18T08:00:18.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eu4002byes66tjvq5ce","content":"<p>PHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent Beck的SUnit，是xUnit家族的框架之一。</p>\n<p>单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一 些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元， 例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。</p>\n<p>总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带 了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。</p>\n<p>另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。</p>\n<p>官网地址：<a href=\"https://phpunit.de/\" target=\"_blank\" rel=\"noopener\">https://phpunit.de/</a><br>官方文档：<a href=\"https://phpunit.readthedocs.io/zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">https://phpunit.readthedocs.io/zh_CN/latest/</a></p>\n<h3 id=\"1、安装phpunit\"><a href=\"#1、安装phpunit\" class=\"headerlink\" title=\"1、安装phpunit\"></a>1、安装phpunit</h3><p>可以全局安装，也可以在项目中通过composer安装</p>\n<p>全局安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$:<span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\">$:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar</span><br><span class=\"line\">$:chmod a+x phpunit</span><br><span class=\"line\">PHPUnit 7.0.0 by Sebastian Bergmann and contributors.</span><br></pre></td></tr></table></figure></p>\n<p>composer依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$:composer require --dev phpunit/phpunit ^7</span><br><span class=\"line\">$:./vendor/bin/phpunit --version</span><br><span class=\"line\">PHPUnit 7.0.0 by Sebastian Bergmann and contributors.</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2、配置phpunit\"><a href=\"#2、配置phpunit\" class=\"headerlink\" title=\"2、配置phpunit\"></a>2、配置phpunit</h3><p>在phpstorm中，在reference中选择 Languages &amp; Frameworks &gt; PHP &gt; Test Frameworks。<br><img src=\"/images/image2018-12-4_13-23-29.png\" alt=\"Test Frameworks\"></p>\n<p>在右侧点击“+”号，选择添加“PHPUnit Local”。<br><img src=\"/images/image2018-12-4_13-24-12-2.png\" alt=\"PHPUnit Local\"></p>\n<p>选择“Path to phpunit.phar”，路径为“/usr/local/bin/phpunit”，“Default configuration file:”为项目中的phpunit.xml文件即可。<br><img src=\"/images/image2018-12-4_13-30-47-3.png\" alt=\"Path to phpunit\"></p>\n<p>经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。</p>\n<h3 id=\"3、配置文件\"><a href=\"#3、配置文件\" class=\"headerlink\" title=\"3、配置文件\"></a>3、配置文件</h3><p>lavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。</p>\n<p>一般的lavarel的phpunit.xml的内容如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">phpunit</span> <span class=\"attr\">backupGlobals</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">backupStaticAttributes</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">bootstrap</span>=<span class=\"string\">\"bootstrap/autoload.php\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">colors</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertErrorsToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertNoticesToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertWarningsToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">processIsolation</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">stopOnFailure</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testsuites</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testsuite</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Feature\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\"Test.php\"</span>&gt;</span>./tests/Feature<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testsuite</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testsuite</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Unit\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\"Test.php\"</span>&gt;</span>./tests/Unit<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testsuite</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">testsuites</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">whitelist</span> <span class=\"attr\">processUncoveredFilesFromWhitelist</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".php\"</span>&gt;</span>./app<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">whitelist</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logging</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--这段代码可用来生成测试覆盖率报告--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">log</span> <span class=\"attr\">type</span>=<span class=\"string\">\"coverage-html\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"./reports/\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logging</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">php</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"APP_ENV\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"testing\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"CACHE_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"array\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"SESSION_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"array\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"QUEUE_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sync\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">php</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">phpunit</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>具体的用法可以通过这个文档进一步了解：<a href=\"https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\" target=\"_blank\" rel=\"noopener\">https://phpunit.readthedocs.io/zh_CN/latest/configuration.html</a></p>\n<h3 id=\"4、创建测试用例\"><a href=\"#4、创建测试用例\" class=\"headerlink\" title=\"4、创建测试用例\"></a>4、创建测试用例</h3><p>在laravel中创建测试用例，可以使用下面的命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在 Feature 目录下创建测试类...</span><br><span class=\"line\">php artisan make:<span class=\"built_in\">test</span> UserTest</span><br><span class=\"line\"></span><br><span class=\"line\">// 在 Unit 目录下创建测试类...</span><br><span class=\"line\">php artisan make:<span class=\"built_in\">test</span> UserTest --unit</span><br></pre></td></tr></table></figure></p>\n<p>下面就是一个简单地对Model进行测试的单测<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Tests</span>\\<span class=\"title\">Feature</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>\\<span class=\"title\">Schedule</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Tests</span>\\<span class=\"title\">TestCase</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Testing</span>\\<span class=\"title\">WithFaker</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Testing</span>\\<span class=\"title\">RefreshDatabase</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConflictTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">TestCase</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * A basic test example.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testExample</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $teachers = Schedule::where(<span class=\"string\">'teacher_id'</span>, <span class=\"number\">2574</span>)-&gt;get()-&gt;toArray();</span><br><span class=\"line\">        <span class=\"comment\">// 断言返回的数据不为空</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;assertNotEmpty($teachers);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/images/image2018-12-4_13-45-12-4.png\" alt><br>点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。<br><img src=\"/images/image2018-12-4_13-46-6-5.png\" alt></p>\n<h3 id=\"5、代码覆盖率\"><a href=\"#5、代码覆盖率\" class=\"headerlink\" title=\"5、代码覆盖率\"></a>5、代码覆盖率</h3><p>如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。<br><img src=\"/images/image2018-12-4_14-7-13-6.png\" alt></p>\n<p>根据报表可以查看某个方法的测试覆盖率。<br><img src=\"/images/image2018-12-4_14-10-10-7.png\" alt></p>\n<p>进入到文件，可以查看更详细地覆盖情况。<br><img src=\"/images/image2018-12-4_14-8-16-8.png\" alt><br>绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>PHPUnit 是一个用PHP编程语言开发的开源软件，是一个单元测试框架。PHPUnit由Sebastian Bergmann创建，源于Kent Beck的SUnit，是xUnit家族的框架之一。</p>\n<p>单元测试是对单独的代码对象进行测试的过程，比如对函数、类、方法进行测试。单元测试可以使用任意一段已经写好的测试代码，也可以使用一 些已经存在的测试框架，比如JUnit、PHPUnit或者Cantata++，单元测试框架提供了一系列共同、有用的功能来帮助人们编写自动化的检测单元， 例如检查一个实际的值是否符合我们期望的值的断言。单元测试框架经常会包含每个测试的报告，以及给出你已经覆盖到的代码覆盖率。</p>\n<p>总之一句话，使用 phpunit 进行自动测试，会使你的代码更健壮，减少后期维护的成本，也是一种比较标准的规范，现如今流行的PHP框架都带 了单元测试，如Laraval,Symfony,Yii2等，单元测试已经成了标配。</p>\n<p>另外，单元测试用例是通过命令操控测试脚本的，而不是通过浏览器访问URL的。 这里以phpstorm为例，说明如何利用phpunit做单元测试。</p>\n<p>官网地址：<a href=\"https://phpunit.de/\" target=\"_blank\" rel=\"noopener\">https://phpunit.de/</a><br>官方文档：<a href=\"https://phpunit.readthedocs.io/zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">https://phpunit.readthedocs.io/zh_CN/latest/</a></p>\n<h3 id=\"1、安装phpunit\"><a href=\"#1、安装phpunit\" class=\"headerlink\" title=\"1、安装phpunit\"></a>1、安装phpunit</h3><p>可以全局安装，也可以在项目中通过composer安装</p>\n<p>全局安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$:<span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\">$:wget -O phpunit https://phar.phpunit.de/phpunit-7.phar</span><br><span class=\"line\">$:chmod a+x phpunit</span><br><span class=\"line\">PHPUnit 7.0.0 by Sebastian Bergmann and contributors.</span><br></pre></td></tr></table></figure></p>\n<p>composer依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$:composer require --dev phpunit/phpunit ^7</span><br><span class=\"line\">$:./vendor/bin/phpunit --version</span><br><span class=\"line\">PHPUnit 7.0.0 by Sebastian Bergmann and contributors.</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2、配置phpunit\"><a href=\"#2、配置phpunit\" class=\"headerlink\" title=\"2、配置phpunit\"></a>2、配置phpunit</h3><p>在phpstorm中，在reference中选择 Languages &amp; Frameworks &gt; PHP &gt; Test Frameworks。<br><img src=\"/images/image2018-12-4_13-23-29.png\" alt=\"Test Frameworks\"></p>\n<p>在右侧点击“+”号，选择添加“PHPUnit Local”。<br><img src=\"/images/image2018-12-4_13-24-12-2.png\" alt=\"PHPUnit Local\"></p>\n<p>选择“Path to phpunit.phar”，路径为“/usr/local/bin/phpunit”，“Default configuration file:”为项目中的phpunit.xml文件即可。<br><img src=\"/images/image2018-12-4_13-30-47-3.png\" alt=\"Path to phpunit\"></p>\n<p>经过上面的步骤，在phpstorm里边就可以对项目中的测试用例进行测试了。</p>\n<h3 id=\"3、配置文件\"><a href=\"#3、配置文件\" class=\"headerlink\" title=\"3、配置文件\"></a>3、配置文件</h3><p>lavarel框架中，已经默认置入对phpunit的支持了，在项目目录中的phpunit.xml就是phpunit的配置文件，它指明了phpunit的启动文件、对哪些文件进行测试，是否输出测试覆盖率等行为。</p>\n<p>一般的lavarel的phpunit.xml的内容如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">phpunit</span> <span class=\"attr\">backupGlobals</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">backupStaticAttributes</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">bootstrap</span>=<span class=\"string\">\"bootstrap/autoload.php\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">colors</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertErrorsToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertNoticesToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">convertWarningsToExceptions</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">processIsolation</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">stopOnFailure</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">testsuites</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testsuite</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Feature\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\"Test.php\"</span>&gt;</span>./tests/Feature<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testsuite</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">testsuite</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Unit\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\"Test.php\"</span>&gt;</span>./tests/Unit<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">testsuite</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">testsuites</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">whitelist</span> <span class=\"attr\">processUncoveredFilesFromWhitelist</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".php\"</span>&gt;</span>./app<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">whitelist</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">logging</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--这段代码可用来生成测试覆盖率报告--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">log</span> <span class=\"attr\">type</span>=<span class=\"string\">\"coverage-html\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"./reports/\"</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">logging</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">php</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"APP_ENV\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"testing\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"CACHE_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"array\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"SESSION_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"array\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">env</span> <span class=\"attr\">name</span>=<span class=\"string\">\"QUEUE_DRIVER\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sync\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">php</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">phpunit</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>具体的用法可以通过这个文档进一步了解：<a href=\"https://phpunit.readthedocs.io/zh_CN/latest/configuration.html\" target=\"_blank\" rel=\"noopener\">https://phpunit.readthedocs.io/zh_CN/latest/configuration.html</a></p>\n<h3 id=\"4、创建测试用例\"><a href=\"#4、创建测试用例\" class=\"headerlink\" title=\"4、创建测试用例\"></a>4、创建测试用例</h3><p>在laravel中创建测试用例，可以使用下面的命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在 Feature 目录下创建测试类...</span><br><span class=\"line\">php artisan make:<span class=\"built_in\">test</span> UserTest</span><br><span class=\"line\"></span><br><span class=\"line\">// 在 Unit 目录下创建测试类...</span><br><span class=\"line\">php artisan make:<span class=\"built_in\">test</span> UserTest --unit</span><br></pre></td></tr></table></figure></p>\n<p>下面就是一个简单地对Model进行测试的单测<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Tests</span>\\<span class=\"title\">Feature</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">App</span>\\<span class=\"title\">Models</span>\\<span class=\"title\">Schedule</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Tests</span>\\<span class=\"title\">TestCase</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Testing</span>\\<span class=\"title\">WithFaker</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Testing</span>\\<span class=\"title\">RefreshDatabase</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConflictTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">TestCase</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * A basic test example.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> void</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">testExample</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $teachers = Schedule::where(<span class=\"string\">'teacher_id'</span>, <span class=\"number\">2574</span>)-&gt;get()-&gt;toArray();</span><br><span class=\"line\">        <span class=\"comment\">// 断言返回的数据不为空</span></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;assertNotEmpty($teachers);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/images/image2018-12-4_13-45-12-4.png\" alt><br>点击phpstorm左侧的绿色圆圈，就可以对testExample方法进行测试了。<br><img src=\"/images/image2018-12-4_13-46-6-5.png\" alt></p>\n<h3 id=\"5、代码覆盖率\"><a href=\"#5、代码覆盖率\" class=\"headerlink\" title=\"5、代码覆盖率\"></a>5、代码覆盖率</h3><p>如果在phpunit.xml中使用了代码覆盖率功能，则会在对应的目录生成测试报告。<br><img src=\"/images/image2018-12-4_14-7-13-6.png\" alt></p>\n<p>根据报表可以查看某个方法的测试覆盖率。<br><img src=\"/images/image2018-12-4_14-10-10-7.png\" alt></p>\n<p>进入到文件，可以查看更详细地覆盖情况。<br><img src=\"/images/image2018-12-4_14-8-16-8.png\" alt><br>绿色的代码行表示在测试过程中有进入这段代码，红色表示未进入过。一方面可以查看哪些逻辑为考虑到位，另一方面也可以检查是否按照既定的 业务逻辑在运行代码。</p>\n"},{"title":"周期性计划任务于网络配置","originContent":"","toc":true,"date":"2018-12-12T08:37:00.000Z","_content":"\n#### 1. 周期性计划任务\n   * 1.1 查看计划任务\n        #crontab -l\n   * 1.2 编辑计划任务\n        #crontab -e\n\t          \t时间         任务内容\n\t\t分钟 小时 日期 月份 星期                     shutdown -h now //每天16:30让系统自动关机\n\t\t 30  16    *    *    *                              \n\t\t \n\t\t 00   20    *   *    5                       tar -zxvf ftp..tar.gz   /var/ftp/*    //每周五20:00点把ftp上的所有上传文件打包压缩\n\t     59   23   30 \t*    *                       sh  /root/a.sh\n         1    */2   *   *    *                       rm -rf /tmp/*.txt      //每隔2个小时把tmp/目录下的已.txt结尾的文件全部删除\t\t \n\t    分钟    小时     日期     月份    星期\n\t    0-59     0-23     1-31     1-12    0-7\n\t\n\t    1-3  ：连续时间\n\t    1,3,5: 间隔时间\n\t    */5 :频率 （每隔5分钟要干什么）\n\t* 1.3 周期性计划任务存放目录 \n\t     /var/spool/cron/ ，以用户名为文件名称存放\n\t* 1.4 删除周期性计划任务  \n\t     #crontab -r \t\t \n    * 1.5\t给指定用户编辑计划任务\n    \t#crontab -e -u 用户名   //编辑\n\t    #crontab -r -u 用户名   //删除\n\t\t#crontab -l -u 用户名   //查看\n    * 1.6 限制普通用户使用周期性计划任务\n\t    /etc/cron.deny\n\t\t/etc/cron.allow\n\t\t限制方式用at.deny at.allow一样\n\t\t\n\t* 1.7 系统周期性计划任务  /etc/crontab\t\n\t\t[root@localhost ~]# cat /etc/crontab \n\t\tSHELL=/bin/bash\n\t\tPATH=/sbin:/bin:/usr/sbin:/usr/bin\n\t\tMAILTO=root\n\t\tHOME=/\n\n\t\t#run-parts\n\t\t01 * * * * root run-parts /etc/cron.hourly   //每小时执行/etc/cron.hourly目录下的脚本文件\n\t\t02 4 * * * root run-parts /etc/cron.daily    //每天4点02执行/etc/cron.daily目录下的脚本文件\n\t\t22 4 * * 0 root run-parts /etc/cron.weekly\n\t\t42 4 1 * * root run-parts /etc/cron.monthly\n\t\t注：可以把自己的周期性计划任务放到上面的目录下，按规定的时间执行\n\t\t\n\t\t[root@localhost ~]# ls  /etc/cron.*\n\t\t/etc/cron.deny\n\n\t\t/etc/cron.d:\n\n\t\t/etc/cron.daily:\n\t\t0anacron   cups       makewhatis.cron  prelink  rpm\n\t\t0logwatch  logrotate  mlocate.cron     rhsmd    tmpwatch\n\n\t\t/etc/cron.hourly:\n\n\t\t/etc/cron.monthly:\n\t\t0anacron\n\n\t\t/etc/cron.weekly:\n\t\t0anacron  99-raid-check  makewhatis.cron\n    * 1.8 延时性计划任务  /etc/init.d/anacron\n\t    检查把没有执行过的计划任务重新执行一遍\n\t\t配置文件 /etc/anacrontab\n\t\t[root@localhost ~]# cat /etc/anacrontab \n\t\t#/etc/anacrontab: configuration file for anacron\n\n\t\t#See anacron(8) and anacrontab(5) for details.\n\n\t\tSHELL=/bin/sh\n\t\tPATH=/sbin:/bin:/usr/sbin:/usr/bin\n\t\tMAILTO=root\n        天      分钟\n\t\t1       65      cron.daily              run-parts /etc/cron.daily   //每天开机后的65分钟运行/etc/daily目录下的脚本文件\n\t\t7       70      cron.weekly             run-parts /etc/cron.weekly\n\t\t30      75      cron.monthly            run-parts /etc/cron.monthly\n\n\t\t[root@localhost ~]# ls /var/spool/anacron/\n\t\tcron.daily  cron.monthly  cron.weekly\n\t\t[root@localhost ~]# cat /var/spool/anacron/cron.daily  //如果当前系统时间与保存的时间不一样则执行计划任务\n\t\t20130531\n\n\t\t\n\t让一台pc联网，需要哪些设置\n\tip 5类\n\tA   1.0.0.0   --------    126.255.255.255/8    2^24-2 10.0.0.0     -10.255.255.255/8\n\tB   128.0.0.0 --------    191.255.255.255/16   2^16-2 172.16.0.0   -172.31.255.255/16\n\tC   192.0.0.0 --------    223.255.255.255/24   2^8-2  192.168.0.0  -192.168.255.255/24\n\tD   224.0.0.0 --------    239.255.255.254\n\tE   240.0.0.0 --------    255.255.255.255\n#### 2.子网掩码\n\t子网掩码：由连续的1组成，标识ip地址的网络位\n\t网关：与其他网段主机通信的接口\n\tDNS：把主机名解析到对应的IP地址\n\t路由：数据包到达目标地址要看的地图\n\n\t子网掩码是为了确定IP地址的网络位是多少\n\tIP二进制*子网掩码二进制 = （转换成十进制）网段\n\t192.168.3.9/16\n\t11000000.10101000.00000011.00000111\n\t11111111.11111111.00000000.00000000\n\t192.168.0.0/16\n\t手动配置IP地址： \n\t ifconfig 网卡接口名  ip地址\n\t ifconfig 网卡接口名  ip地址/子网掩码\n\t ifconfig 网卡接口名  ip地址 netmask 子网掩码\n\t ifdown eth0  //停用网卡\n\t ifup  eth0  //启用网卡\n\t service network restart   //重启网络服务\n\t /etc/sysconfig/network-scripts/ 网络配置信息 \n\t\t[root@localhost network-scripts]# cat ifcfg-eth0 \n\t\t# Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]\n\t\tDEVICE=eth0  //网卡接口名，要和配置文件名的接口名匹配\n\t\tBOOTPROTO=none 设置网卡获取IP地址的方式（static,none,dhcp）\n\t\t\t\t  dhcp //入网参数是DHCP服务器分配的\n\t\tBROADCAST=192.168.2.255 //设置网卡使用的广播地址\n\t\tHWADDR=00:0C:29:B9:E7:63 //当前网卡的MAC地址\n\t\tONBOOT=yes   //开机激活网卡\n\t\tNETMASK=255.255.255.0  //指定当前网卡使用的子网掩码\n\t\tIPADDR=192.168.0.22 //指定当前网卡使用的IP地址\n\t\tGATEWAY=192.168.0.1\n\t\tNETWORK=192.168.2.0 //指定当前网卡IP地址所在的网段\n\t\tTYPE=Ethernet\n\t\tUSERCTL=no\n\t\tIPV6INIT=no\n\t\tPEERDNS=yes\t\n\t\t\t\n\t\t#setup //配置网络地址\n\t\t\n\t\t[root@localhost ~]# ifconfig  eth0:1 192.168.0.221  //临时绑定多个IP地址\n\t\t[root@localhost ~]# ifconfig  eth0:2 192.168.0.222\n\t\t//永久配置多个IP地址\n\t\t#cp /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0:0\n\t\t#vim /etc/sysconfig/network-script/ifcfg-eth0:0 //编辑进行绑定多个IP地址\n\t\t#ifconfig -a //查看所有网卡\n\t\t网卡接口：eth      sit     ppp      fddi    virbr               xenbr\n\t\t\t\t 以太网卡  IPV6    VPN       光纤   XEN虚拟机内桥      XEN外桥\n\t\t\n#### 3.网关配置：\n\t    #vim /etc/sysconfig/network-script/ifcfg-eth0  //永久生效配置\n\t\t   GATEWAY=192.168.2.254\n\t\t#service network restart\n\t\t#route add default gw 192.168.2.254   //临时添加网关\n\t\t#route del default gw 192.168.2.254   //删除网关\n\t\t#route -n  //查看路由表\n\t\t[root@localhost ~]# route -n\n\t\tKernel IP routing table\n\t\tDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n\t\t192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0\n\t\t169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 eth0\n\t\t0.0.0.0         192.168.0.1     0.0.0.0         UG    0      0        0 eth0   //默认网关UG\n\t\t#route add default gw 192.168.3.254/24 \n\t\t#route add -net 192.168.3.0/24 dev eth0\n\t\t\n\t\t192.168.2.245/24  eth0   VPC   eth0   192.168.3.245/24\n\t\t                  2.245         3.245\n\t\t#ping 192.168.2.245   //可以通\n\t\t#ping 192.168.3.245   //不通\n\t\t1.设置192.168.2.245的默认网关 #route add default gw 192.168.2.245\n\t\t2.添加192.168.3.245 eth1  #ifconfig 192.168.2.245/24\n\t\tVPC配置\n\t\t [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward  //默认值为0\n\t\t 0\n         [root@teacher ftp]# echo 1 > /proc/sys/net/ipv4/ip_forward //设置为1,启动\n         [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward \n\t\t [root@teacher ftp]# vim /etc/sysctl.conf    //另一种配置方法\n          net.ipv4.ip_forward = 1   //修改值为1\n\t\t  [root@localhost ~]# sysctl -p\n\t\t\tnet.ipv4.ip_forward = 1\n\t\t\tnet.ipv4.conf.default.rp_filter = 1\n\t\t\tnet.ipv4.conf.default.accept_source_route = 0\n\t\t\tkernel.sysrq = 0\n\t\t\tkernel.core_uses_pid = 1\n\t\t\tnet.ipv4.tcp_syncookies = 1\n\t\t\tkernel.msgmnb = 65536\n\t\t\tkernel.msgmax = 65536\n\t\t\tkernel.shmmax = 4294967295\n\t\t\tkernel.shmall = 268435456 \n\t\t\n\t\t\n#### 4. DHCP \n    1.1 DHCP工作原理 C/S\n\t  /etc/dhcpd.conf  //主配置文件\n\t  /usr/share/doc/dhcp-3.0.5/dhcpd.conf.sample  模板文件\n\t  用IP地址是192.168.2.1的主机作DHCP服务器\n\t  能够分配192.168.2.0/24网段内的IP地址给客户端使用\n\t  并且IP地址192.168.2.100-101这个范围内的IP地址不会动态\n\t  分配给客户端使用，要求IP地址192.168.2.188 108 88\n\t  只分配给BOSS BOSS2 BOSS3\n\t  所有主机的网关是192.168.2.254\n\tsubnet 192.168.0.0 netmask 255.255.255.0  {-\n\t    option routers    192.168.2.254; //网关\n\t    option subnet-mask   255.255.255.0;//子网掩码\n\t\toption domain-name    \"domain.org\"//客户端主机所在的区\n\t\toption domain-name-servers 1.1.1.1,2.2.2.2,3.3.3.3; //指定DNS服务器 \n\t\toption time-offset    -18000;//标准时间偏差值\n\t\trange   dynamic-bootp 192.168.2.1 192.168.2.99;   //动态分配IP地址范围\n\t\trange   dynamic-bootp 192.168.2.111 192.168.2.253;   //动态分配IP地址范围\n\t\t\n\t\tdefault-lease-time   21600   //默认租期 单位秒\n\t\tmax-lease-time   43200;   //最大租期\n\t\thost  boss{    //host 标识名{}\n\t\t    hardware ethernet  00:14:78:57:c0:98;//指定MAC地址\n\t\t\tfixed-addess  192.168.2.188;\n\t\t}\n\t\thost  boss2{    //host 标识名{}\n\t\t    hardware ethernet  00:0C:32:EG:8E:4R;//指定MAC地址\n\t\t\tfixed-addess  192.168.2.108;\n\t\t}\n\t} //分配IP地址的网段\n\t\n\t #service dhcpd restart  //从启DHCP\n\t #dhcpd  //检测配置文件是否有语法错误\n\t \n\t 客户端配置\n\t #vim ifcfg.eth0   //编辑此文件\n\t BOOTPROTO=dhcp  //修改为dhcp\n\t \n    #pkill -9 dhclient   //杀死客户端进程\n\t#cat /etc/reslvo.conf\n\t\n\tdhcp-server\n\t租约文件 来记录把IP地址都分配给谁了\n\t#cat /var/lib/dhcpd/dhcpd.leases\n\t\n\t/var/log/messages //错误日志\n\t","source":"_posts/周期性计划任务于网络配置.md","raw":"---\ntitle: 周期性计划任务于网络配置\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:37:00\n---\n\n#### 1. 周期性计划任务\n   * 1.1 查看计划任务\n        #crontab -l\n   * 1.2 编辑计划任务\n        #crontab -e\n\t          \t时间         任务内容\n\t\t分钟 小时 日期 月份 星期                     shutdown -h now //每天16:30让系统自动关机\n\t\t 30  16    *    *    *                              \n\t\t \n\t\t 00   20    *   *    5                       tar -zxvf ftp..tar.gz   /var/ftp/*    //每周五20:00点把ftp上的所有上传文件打包压缩\n\t     59   23   30 \t*    *                       sh  /root/a.sh\n         1    */2   *   *    *                       rm -rf /tmp/*.txt      //每隔2个小时把tmp/目录下的已.txt结尾的文件全部删除\t\t \n\t    分钟    小时     日期     月份    星期\n\t    0-59     0-23     1-31     1-12    0-7\n\t\n\t    1-3  ：连续时间\n\t    1,3,5: 间隔时间\n\t    */5 :频率 （每隔5分钟要干什么）\n\t* 1.3 周期性计划任务存放目录 \n\t     /var/spool/cron/ ，以用户名为文件名称存放\n\t* 1.4 删除周期性计划任务  \n\t     #crontab -r \t\t \n    * 1.5\t给指定用户编辑计划任务\n    \t#crontab -e -u 用户名   //编辑\n\t    #crontab -r -u 用户名   //删除\n\t\t#crontab -l -u 用户名   //查看\n    * 1.6 限制普通用户使用周期性计划任务\n\t    /etc/cron.deny\n\t\t/etc/cron.allow\n\t\t限制方式用at.deny at.allow一样\n\t\t\n\t* 1.7 系统周期性计划任务  /etc/crontab\t\n\t\t[root@localhost ~]# cat /etc/crontab \n\t\tSHELL=/bin/bash\n\t\tPATH=/sbin:/bin:/usr/sbin:/usr/bin\n\t\tMAILTO=root\n\t\tHOME=/\n\n\t\t#run-parts\n\t\t01 * * * * root run-parts /etc/cron.hourly   //每小时执行/etc/cron.hourly目录下的脚本文件\n\t\t02 4 * * * root run-parts /etc/cron.daily    //每天4点02执行/etc/cron.daily目录下的脚本文件\n\t\t22 4 * * 0 root run-parts /etc/cron.weekly\n\t\t42 4 1 * * root run-parts /etc/cron.monthly\n\t\t注：可以把自己的周期性计划任务放到上面的目录下，按规定的时间执行\n\t\t\n\t\t[root@localhost ~]# ls  /etc/cron.*\n\t\t/etc/cron.deny\n\n\t\t/etc/cron.d:\n\n\t\t/etc/cron.daily:\n\t\t0anacron   cups       makewhatis.cron  prelink  rpm\n\t\t0logwatch  logrotate  mlocate.cron     rhsmd    tmpwatch\n\n\t\t/etc/cron.hourly:\n\n\t\t/etc/cron.monthly:\n\t\t0anacron\n\n\t\t/etc/cron.weekly:\n\t\t0anacron  99-raid-check  makewhatis.cron\n    * 1.8 延时性计划任务  /etc/init.d/anacron\n\t    检查把没有执行过的计划任务重新执行一遍\n\t\t配置文件 /etc/anacrontab\n\t\t[root@localhost ~]# cat /etc/anacrontab \n\t\t#/etc/anacrontab: configuration file for anacron\n\n\t\t#See anacron(8) and anacrontab(5) for details.\n\n\t\tSHELL=/bin/sh\n\t\tPATH=/sbin:/bin:/usr/sbin:/usr/bin\n\t\tMAILTO=root\n        天      分钟\n\t\t1       65      cron.daily              run-parts /etc/cron.daily   //每天开机后的65分钟运行/etc/daily目录下的脚本文件\n\t\t7       70      cron.weekly             run-parts /etc/cron.weekly\n\t\t30      75      cron.monthly            run-parts /etc/cron.monthly\n\n\t\t[root@localhost ~]# ls /var/spool/anacron/\n\t\tcron.daily  cron.monthly  cron.weekly\n\t\t[root@localhost ~]# cat /var/spool/anacron/cron.daily  //如果当前系统时间与保存的时间不一样则执行计划任务\n\t\t20130531\n\n\t\t\n\t让一台pc联网，需要哪些设置\n\tip 5类\n\tA   1.0.0.0   --------    126.255.255.255/8    2^24-2 10.0.0.0     -10.255.255.255/8\n\tB   128.0.0.0 --------    191.255.255.255/16   2^16-2 172.16.0.0   -172.31.255.255/16\n\tC   192.0.0.0 --------    223.255.255.255/24   2^8-2  192.168.0.0  -192.168.255.255/24\n\tD   224.0.0.0 --------    239.255.255.254\n\tE   240.0.0.0 --------    255.255.255.255\n#### 2.子网掩码\n\t子网掩码：由连续的1组成，标识ip地址的网络位\n\t网关：与其他网段主机通信的接口\n\tDNS：把主机名解析到对应的IP地址\n\t路由：数据包到达目标地址要看的地图\n\n\t子网掩码是为了确定IP地址的网络位是多少\n\tIP二进制*子网掩码二进制 = （转换成十进制）网段\n\t192.168.3.9/16\n\t11000000.10101000.00000011.00000111\n\t11111111.11111111.00000000.00000000\n\t192.168.0.0/16\n\t手动配置IP地址： \n\t ifconfig 网卡接口名  ip地址\n\t ifconfig 网卡接口名  ip地址/子网掩码\n\t ifconfig 网卡接口名  ip地址 netmask 子网掩码\n\t ifdown eth0  //停用网卡\n\t ifup  eth0  //启用网卡\n\t service network restart   //重启网络服务\n\t /etc/sysconfig/network-scripts/ 网络配置信息 \n\t\t[root@localhost network-scripts]# cat ifcfg-eth0 \n\t\t# Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]\n\t\tDEVICE=eth0  //网卡接口名，要和配置文件名的接口名匹配\n\t\tBOOTPROTO=none 设置网卡获取IP地址的方式（static,none,dhcp）\n\t\t\t\t  dhcp //入网参数是DHCP服务器分配的\n\t\tBROADCAST=192.168.2.255 //设置网卡使用的广播地址\n\t\tHWADDR=00:0C:29:B9:E7:63 //当前网卡的MAC地址\n\t\tONBOOT=yes   //开机激活网卡\n\t\tNETMASK=255.255.255.0  //指定当前网卡使用的子网掩码\n\t\tIPADDR=192.168.0.22 //指定当前网卡使用的IP地址\n\t\tGATEWAY=192.168.0.1\n\t\tNETWORK=192.168.2.0 //指定当前网卡IP地址所在的网段\n\t\tTYPE=Ethernet\n\t\tUSERCTL=no\n\t\tIPV6INIT=no\n\t\tPEERDNS=yes\t\n\t\t\t\n\t\t#setup //配置网络地址\n\t\t\n\t\t[root@localhost ~]# ifconfig  eth0:1 192.168.0.221  //临时绑定多个IP地址\n\t\t[root@localhost ~]# ifconfig  eth0:2 192.168.0.222\n\t\t//永久配置多个IP地址\n\t\t#cp /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0:0\n\t\t#vim /etc/sysconfig/network-script/ifcfg-eth0:0 //编辑进行绑定多个IP地址\n\t\t#ifconfig -a //查看所有网卡\n\t\t网卡接口：eth      sit     ppp      fddi    virbr               xenbr\n\t\t\t\t 以太网卡  IPV6    VPN       光纤   XEN虚拟机内桥      XEN外桥\n\t\t\n#### 3.网关配置：\n\t    #vim /etc/sysconfig/network-script/ifcfg-eth0  //永久生效配置\n\t\t   GATEWAY=192.168.2.254\n\t\t#service network restart\n\t\t#route add default gw 192.168.2.254   //临时添加网关\n\t\t#route del default gw 192.168.2.254   //删除网关\n\t\t#route -n  //查看路由表\n\t\t[root@localhost ~]# route -n\n\t\tKernel IP routing table\n\t\tDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n\t\t192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0\n\t\t169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 eth0\n\t\t0.0.0.0         192.168.0.1     0.0.0.0         UG    0      0        0 eth0   //默认网关UG\n\t\t#route add default gw 192.168.3.254/24 \n\t\t#route add -net 192.168.3.0/24 dev eth0\n\t\t\n\t\t192.168.2.245/24  eth0   VPC   eth0   192.168.3.245/24\n\t\t                  2.245         3.245\n\t\t#ping 192.168.2.245   //可以通\n\t\t#ping 192.168.3.245   //不通\n\t\t1.设置192.168.2.245的默认网关 #route add default gw 192.168.2.245\n\t\t2.添加192.168.3.245 eth1  #ifconfig 192.168.2.245/24\n\t\tVPC配置\n\t\t [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward  //默认值为0\n\t\t 0\n         [root@teacher ftp]# echo 1 > /proc/sys/net/ipv4/ip_forward //设置为1,启动\n         [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward \n\t\t [root@teacher ftp]# vim /etc/sysctl.conf    //另一种配置方法\n          net.ipv4.ip_forward = 1   //修改值为1\n\t\t  [root@localhost ~]# sysctl -p\n\t\t\tnet.ipv4.ip_forward = 1\n\t\t\tnet.ipv4.conf.default.rp_filter = 1\n\t\t\tnet.ipv4.conf.default.accept_source_route = 0\n\t\t\tkernel.sysrq = 0\n\t\t\tkernel.core_uses_pid = 1\n\t\t\tnet.ipv4.tcp_syncookies = 1\n\t\t\tkernel.msgmnb = 65536\n\t\t\tkernel.msgmax = 65536\n\t\t\tkernel.shmmax = 4294967295\n\t\t\tkernel.shmall = 268435456 \n\t\t\n\t\t\n#### 4. DHCP \n    1.1 DHCP工作原理 C/S\n\t  /etc/dhcpd.conf  //主配置文件\n\t  /usr/share/doc/dhcp-3.0.5/dhcpd.conf.sample  模板文件\n\t  用IP地址是192.168.2.1的主机作DHCP服务器\n\t  能够分配192.168.2.0/24网段内的IP地址给客户端使用\n\t  并且IP地址192.168.2.100-101这个范围内的IP地址不会动态\n\t  分配给客户端使用，要求IP地址192.168.2.188 108 88\n\t  只分配给BOSS BOSS2 BOSS3\n\t  所有主机的网关是192.168.2.254\n\tsubnet 192.168.0.0 netmask 255.255.255.0  {-\n\t    option routers    192.168.2.254; //网关\n\t    option subnet-mask   255.255.255.0;//子网掩码\n\t\toption domain-name    \"domain.org\"//客户端主机所在的区\n\t\toption domain-name-servers 1.1.1.1,2.2.2.2,3.3.3.3; //指定DNS服务器 \n\t\toption time-offset    -18000;//标准时间偏差值\n\t\trange   dynamic-bootp 192.168.2.1 192.168.2.99;   //动态分配IP地址范围\n\t\trange   dynamic-bootp 192.168.2.111 192.168.2.253;   //动态分配IP地址范围\n\t\t\n\t\tdefault-lease-time   21600   //默认租期 单位秒\n\t\tmax-lease-time   43200;   //最大租期\n\t\thost  boss{    //host 标识名{}\n\t\t    hardware ethernet  00:14:78:57:c0:98;//指定MAC地址\n\t\t\tfixed-addess  192.168.2.188;\n\t\t}\n\t\thost  boss2{    //host 标识名{}\n\t\t    hardware ethernet  00:0C:32:EG:8E:4R;//指定MAC地址\n\t\t\tfixed-addess  192.168.2.108;\n\t\t}\n\t} //分配IP地址的网段\n\t\n\t #service dhcpd restart  //从启DHCP\n\t #dhcpd  //检测配置文件是否有语法错误\n\t \n\t 客户端配置\n\t #vim ifcfg.eth0   //编辑此文件\n\t BOOTPROTO=dhcp  //修改为dhcp\n\t \n    #pkill -9 dhclient   //杀死客户端进程\n\t#cat /etc/reslvo.conf\n\t\n\tdhcp-server\n\t租约文件 来记录把IP地址都分配给谁了\n\t#cat /var/lib/dhcpd/dhcpd.leases\n\t\n\t/var/log/messages //错误日志\n\t","slug":"周期性计划任务于网络配置","published":1,"updated":"2018-12-18T08:00:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eu6002cyes6k33qh6q1","content":"<h4 id=\"1-周期性计划任务\"><a href=\"#1-周期性计划任务\" class=\"headerlink\" title=\"1. 周期性计划任务\"></a>1. 周期性计划任务</h4><ul>\n<li>1.1 查看计划任务<br>   #crontab -l</li>\n<li><p>1.2 编辑计划任务<br>   #crontab -e</p>\n<pre><code>时间         任务内容\n</code></pre><p>   分钟 小时 日期 月份 星期                     shutdown -h now //每天16:30让系统自动关机</p>\n<pre><code>30  16    *    *    *                              \n\n00   20    *   *    5                       tar -zxvf ftp..tar.gz   /var/ftp/*    //每周五20:00点把ftp上的所有上传文件打包压缩\n59   23   30     *    *                       sh  /root/a.sh\n1    */2   *   *    *                       rm -rf /tmp/*.txt      //每隔2个小时把tmp/目录下的已.txt结尾的文件全部删除         \n</code></pre><p>   分钟    小时     日期     月份    星期<br>   0-59     0-23     1-31     1-12    0-7</p>\n<p>   1-3  ：连续时间<br>   1,3,5: 间隔时间<br>   */5 :频率 （每隔5分钟要干什么）</p>\n<ul>\n<li>1.3 周期性计划任务存放目录<br>  /var/spool/cron/ ，以用户名为文件名称存放</li>\n<li>1.4 删除周期性计划任务<br>  #crontab -r          </li>\n<li>1.5    给指定用户编辑计划任务<br> #crontab -e -u 用户名   //编辑<br> #crontab -r -u 用户名   //删除<br> #crontab -l -u 用户名   //查看</li>\n<li><p>1.6 限制普通用户使用周期性计划任务<br> /etc/cron.deny<br> /etc/cron.allow<br> 限制方式用at.deny at.allow一样</p>\n</li>\n<li><p>1.7 系统周期性计划任务  /etc/crontab<br> [root@localhost ~]# cat /etc/crontab<br> SHELL=/bin/bash<br> PATH=/sbin:/bin:/usr/sbin:/usr/bin<br> MAILTO=root<br> HOME=/</p>\n<p> #run-parts<br> 01 <em> </em> <em> </em> root run-parts /etc/cron.hourly   //每小时执行/etc/cron.hourly目录下的脚本文件<br> 02 4 <em> </em> <em> root run-parts /etc/cron.daily    //每天4点02执行/etc/cron.daily目录下的脚本文件<br> 22 4 </em> <em> 0 root run-parts /etc/cron.weekly<br> 42 4 1 </em> * root run-parts /etc/cron.monthly<br> 注：可以把自己的周期性计划任务放到上面的目录下，按规定的时间执行</p>\n<p> [root@localhost ~]# ls  /etc/cron.*<br> /etc/cron.deny</p>\n<p> /etc/cron.d:</p>\n<p> /etc/cron.daily:<br> 0anacron   cups       makewhatis.cron  prelink  rpm<br> 0logwatch  logrotate  mlocate.cron     rhsmd    tmpwatch</p>\n<p> /etc/cron.hourly:</p>\n<p> /etc/cron.monthly:<br> 0anacron</p>\n<p> /etc/cron.weekly:<br> 0anacron  99-raid-check  makewhatis.cron</p>\n</li>\n<li><p>1.8 延时性计划任务  /etc/init.d/anacron<br> 检查把没有执行过的计划任务重新执行一遍<br> 配置文件 /etc/anacrontab<br> [root@localhost ~]# cat /etc/anacrontab<br> #/etc/anacrontab: configuration file for anacron</p>\n<p> #See anacron(8) and anacrontab(5) for details.</p>\n<p> SHELL=/bin/sh<br> PATH=/sbin:/bin:/usr/sbin:/usr/bin<br> MAILTO=root<br> 天      分钟<br> 1       65      cron.daily              run-parts /etc/cron.daily   //每天开机后的65分钟运行/etc/daily目录下的脚本文件<br> 7       70      cron.weekly             run-parts /etc/cron.weekly<br> 30      75      cron.monthly            run-parts /etc/cron.monthly</p>\n<p> [root@localhost ~]# ls /var/spool/anacron/<br> cron.daily  cron.monthly  cron.weekly<br> [root@localhost ~]# cat /var/spool/anacron/cron.daily  //如果当前系统时间与保存的时间不一样则执行计划任务<br> 20130531</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>让一台pc联网，需要哪些设置\nip 5类\nA   1.0.0.0   --------    126.255.255.255/8    2^24-2 10.0.0.0     -10.255.255.255/8\nB   128.0.0.0 --------    191.255.255.255/16   2^16-2 172.16.0.0   -172.31.255.255/16\nC   192.0.0.0 --------    223.255.255.255/24   2^8-2  192.168.0.0  -192.168.255.255/24\nD   224.0.0.0 --------    239.255.255.254\nE   240.0.0.0 --------    255.255.255.255\n</code></pre><h4 id=\"2-子网掩码\"><a href=\"#2-子网掩码\" class=\"headerlink\" title=\"2.子网掩码\"></a>2.子网掩码</h4><pre><code>子网掩码：由连续的1组成，标识ip地址的网络位\n网关：与其他网段主机通信的接口\nDNS：把主机名解析到对应的IP地址\n路由：数据包到达目标地址要看的地图\n\n子网掩码是为了确定IP地址的网络位是多少\nIP二进制*子网掩码二进制 = （转换成十进制）网段\n192.168.3.9/16\n11000000.10101000.00000011.00000111\n11111111.11111111.00000000.00000000\n192.168.0.0/16\n手动配置IP地址： \n ifconfig 网卡接口名  ip地址\n ifconfig 网卡接口名  ip地址/子网掩码\n ifconfig 网卡接口名  ip地址 netmask 子网掩码\n ifdown eth0  //停用网卡\n ifup  eth0  //启用网卡\n service network restart   //重启网络服务\n /etc/sysconfig/network-scripts/ 网络配置信息 \n    [root@localhost network-scripts]# cat ifcfg-eth0 \n    # Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]\n    DEVICE=eth0  //网卡接口名，要和配置文件名的接口名匹配\n    BOOTPROTO=none 设置网卡获取IP地址的方式（static,none,dhcp）\n              dhcp //入网参数是DHCP服务器分配的\n    BROADCAST=192.168.2.255 //设置网卡使用的广播地址\n    HWADDR=00:0C:29:B9:E7:63 //当前网卡的MAC地址\n    ONBOOT=yes   //开机激活网卡\n    NETMASK=255.255.255.0  //指定当前网卡使用的子网掩码\n    IPADDR=192.168.0.22 //指定当前网卡使用的IP地址\n    GATEWAY=192.168.0.1\n    NETWORK=192.168.2.0 //指定当前网卡IP地址所在的网段\n    TYPE=Ethernet\n    USERCTL=no\n    IPV6INIT=no\n    PEERDNS=yes    \n\n    #setup //配置网络地址\n\n    [root@localhost ~]# ifconfig  eth0:1 192.168.0.221  //临时绑定多个IP地址\n    [root@localhost ~]# ifconfig  eth0:2 192.168.0.222\n    //永久配置多个IP地址\n    #cp /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0:0\n    #vim /etc/sysconfig/network-script/ifcfg-eth0:0 //编辑进行绑定多个IP地址\n    #ifconfig -a //查看所有网卡\n    网卡接口：eth      sit     ppp      fddi    virbr               xenbr\n             以太网卡  IPV6    VPN       光纤   XEN虚拟机内桥      XEN外桥\n</code></pre><h4 id=\"3-网关配置：\"><a href=\"#3-网关配置：\" class=\"headerlink\" title=\"3.网关配置：\"></a>3.网关配置：</h4><pre><code>#vim /etc/sysconfig/network-script/ifcfg-eth0  //永久生效配置\n   GATEWAY=192.168.2.254\n#service network restart\n#route add default gw 192.168.2.254   //临时添加网关\n#route del default gw 192.168.2.254   //删除网关\n#route -n  //查看路由表\n[root@localhost ~]# route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0\n169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 eth0\n0.0.0.0         192.168.0.1     0.0.0.0         UG    0      0        0 eth0   //默认网关UG\n#route add default gw 192.168.3.254/24 \n#route add -net 192.168.3.0/24 dev eth0\n\n192.168.2.245/24  eth0   VPC   eth0   192.168.3.245/24\n                  2.245         3.245\n#ping 192.168.2.245   //可以通\n#ping 192.168.3.245   //不通\n1.设置192.168.2.245的默认网关 #route add default gw 192.168.2.245\n2.添加192.168.3.245 eth1  #ifconfig 192.168.2.245/24\nVPC配置\n [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward  //默认值为0\n 0\n [root@teacher ftp]# echo 1 &gt; /proc/sys/net/ipv4/ip_forward //设置为1,启动\n [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward \n [root@teacher ftp]# vim /etc/sysctl.conf    //另一种配置方法\n  net.ipv4.ip_forward = 1   //修改值为1\n  [root@localhost ~]# sysctl -p\n    net.ipv4.ip_forward = 1\n    net.ipv4.conf.default.rp_filter = 1\n    net.ipv4.conf.default.accept_source_route = 0\n    kernel.sysrq = 0\n    kernel.core_uses_pid = 1\n    net.ipv4.tcp_syncookies = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.shmmax = 4294967295\n    kernel.shmall = 268435456 \n</code></pre><h4 id=\"4-DHCP\"><a href=\"#4-DHCP\" class=\"headerlink\" title=\"4. DHCP\"></a>4. DHCP</h4><pre><code>1.1 DHCP工作原理 C/S\n  /etc/dhcpd.conf  //主配置文件\n  /usr/share/doc/dhcp-3.0.5/dhcpd.conf.sample  模板文件\n  用IP地址是192.168.2.1的主机作DHCP服务器\n  能够分配192.168.2.0/24网段内的IP地址给客户端使用\n  并且IP地址192.168.2.100-101这个范围内的IP地址不会动态\n  分配给客户端使用，要求IP地址192.168.2.188 108 88\n  只分配给BOSS BOSS2 BOSS3\n  所有主机的网关是192.168.2.254\nsubnet 192.168.0.0 netmask 255.255.255.0  {-\n    option routers    192.168.2.254; //网关\n    option subnet-mask   255.255.255.0;//子网掩码\n    option domain-name    &quot;domain.org&quot;//客户端主机所在的区\n    option domain-name-servers 1.1.1.1,2.2.2.2,3.3.3.3; //指定DNS服务器 \n    option time-offset    -18000;//标准时间偏差值\n    range   dynamic-bootp 192.168.2.1 192.168.2.99;   //动态分配IP地址范围\n    range   dynamic-bootp 192.168.2.111 192.168.2.253;   //动态分配IP地址范围\n\n    default-lease-time   21600   //默认租期 单位秒\n    max-lease-time   43200;   //最大租期\n    host  boss{    //host 标识名{}\n        hardware ethernet  00:14:78:57:c0:98;//指定MAC地址\n        fixed-addess  192.168.2.188;\n    }\n    host  boss2{    //host 标识名{}\n        hardware ethernet  00:0C:32:EG:8E:4R;//指定MAC地址\n        fixed-addess  192.168.2.108;\n    }\n} //分配IP地址的网段\n\n #service dhcpd restart  //从启DHCP\n #dhcpd  //检测配置文件是否有语法错误\n\n 客户端配置\n #vim ifcfg.eth0   //编辑此文件\n BOOTPROTO=dhcp  //修改为dhcp\n\n#pkill -9 dhclient   //杀死客户端进程\n#cat /etc/reslvo.conf\n\ndhcp-server\n租约文件 来记录把IP地址都分配给谁了\n#cat /var/lib/dhcpd/dhcpd.leases\n\n/var/log/messages //错误日志\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-周期性计划任务\"><a href=\"#1-周期性计划任务\" class=\"headerlink\" title=\"1. 周期性计划任务\"></a>1. 周期性计划任务</h4><ul>\n<li>1.1 查看计划任务<br>   #crontab -l</li>\n<li><p>1.2 编辑计划任务<br>   #crontab -e</p>\n<pre><code>时间         任务内容\n</code></pre><p>   分钟 小时 日期 月份 星期                     shutdown -h now //每天16:30让系统自动关机</p>\n<pre><code>30  16    *    *    *                              \n\n00   20    *   *    5                       tar -zxvf ftp..tar.gz   /var/ftp/*    //每周五20:00点把ftp上的所有上传文件打包压缩\n59   23   30     *    *                       sh  /root/a.sh\n1    */2   *   *    *                       rm -rf /tmp/*.txt      //每隔2个小时把tmp/目录下的已.txt结尾的文件全部删除         \n</code></pre><p>   分钟    小时     日期     月份    星期<br>   0-59     0-23     1-31     1-12    0-7</p>\n<p>   1-3  ：连续时间<br>   1,3,5: 间隔时间<br>   */5 :频率 （每隔5分钟要干什么）</p>\n<ul>\n<li>1.3 周期性计划任务存放目录<br>  /var/spool/cron/ ，以用户名为文件名称存放</li>\n<li>1.4 删除周期性计划任务<br>  #crontab -r          </li>\n<li>1.5    给指定用户编辑计划任务<br> #crontab -e -u 用户名   //编辑<br> #crontab -r -u 用户名   //删除<br> #crontab -l -u 用户名   //查看</li>\n<li><p>1.6 限制普通用户使用周期性计划任务<br> /etc/cron.deny<br> /etc/cron.allow<br> 限制方式用at.deny at.allow一样</p>\n</li>\n<li><p>1.7 系统周期性计划任务  /etc/crontab<br> [root@localhost ~]# cat /etc/crontab<br> SHELL=/bin/bash<br> PATH=/sbin:/bin:/usr/sbin:/usr/bin<br> MAILTO=root<br> HOME=/</p>\n<p> #run-parts<br> 01 <em> </em> <em> </em> root run-parts /etc/cron.hourly   //每小时执行/etc/cron.hourly目录下的脚本文件<br> 02 4 <em> </em> <em> root run-parts /etc/cron.daily    //每天4点02执行/etc/cron.daily目录下的脚本文件<br> 22 4 </em> <em> 0 root run-parts /etc/cron.weekly<br> 42 4 1 </em> * root run-parts /etc/cron.monthly<br> 注：可以把自己的周期性计划任务放到上面的目录下，按规定的时间执行</p>\n<p> [root@localhost ~]# ls  /etc/cron.*<br> /etc/cron.deny</p>\n<p> /etc/cron.d:</p>\n<p> /etc/cron.daily:<br> 0anacron   cups       makewhatis.cron  prelink  rpm<br> 0logwatch  logrotate  mlocate.cron     rhsmd    tmpwatch</p>\n<p> /etc/cron.hourly:</p>\n<p> /etc/cron.monthly:<br> 0anacron</p>\n<p> /etc/cron.weekly:<br> 0anacron  99-raid-check  makewhatis.cron</p>\n</li>\n<li><p>1.8 延时性计划任务  /etc/init.d/anacron<br> 检查把没有执行过的计划任务重新执行一遍<br> 配置文件 /etc/anacrontab<br> [root@localhost ~]# cat /etc/anacrontab<br> #/etc/anacrontab: configuration file for anacron</p>\n<p> #See anacron(8) and anacrontab(5) for details.</p>\n<p> SHELL=/bin/sh<br> PATH=/sbin:/bin:/usr/sbin:/usr/bin<br> MAILTO=root<br> 天      分钟<br> 1       65      cron.daily              run-parts /etc/cron.daily   //每天开机后的65分钟运行/etc/daily目录下的脚本文件<br> 7       70      cron.weekly             run-parts /etc/cron.weekly<br> 30      75      cron.monthly            run-parts /etc/cron.monthly</p>\n<p> [root@localhost ~]# ls /var/spool/anacron/<br> cron.daily  cron.monthly  cron.weekly<br> [root@localhost ~]# cat /var/spool/anacron/cron.daily  //如果当前系统时间与保存的时间不一样则执行计划任务<br> 20130531</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>让一台pc联网，需要哪些设置\nip 5类\nA   1.0.0.0   --------    126.255.255.255/8    2^24-2 10.0.0.0     -10.255.255.255/8\nB   128.0.0.0 --------    191.255.255.255/16   2^16-2 172.16.0.0   -172.31.255.255/16\nC   192.0.0.0 --------    223.255.255.255/24   2^8-2  192.168.0.0  -192.168.255.255/24\nD   224.0.0.0 --------    239.255.255.254\nE   240.0.0.0 --------    255.255.255.255\n</code></pre><h4 id=\"2-子网掩码\"><a href=\"#2-子网掩码\" class=\"headerlink\" title=\"2.子网掩码\"></a>2.子网掩码</h4><pre><code>子网掩码：由连续的1组成，标识ip地址的网络位\n网关：与其他网段主机通信的接口\nDNS：把主机名解析到对应的IP地址\n路由：数据包到达目标地址要看的地图\n\n子网掩码是为了确定IP地址的网络位是多少\nIP二进制*子网掩码二进制 = （转换成十进制）网段\n192.168.3.9/16\n11000000.10101000.00000011.00000111\n11111111.11111111.00000000.00000000\n192.168.0.0/16\n手动配置IP地址： \n ifconfig 网卡接口名  ip地址\n ifconfig 网卡接口名  ip地址/子网掩码\n ifconfig 网卡接口名  ip地址 netmask 子网掩码\n ifdown eth0  //停用网卡\n ifup  eth0  //启用网卡\n service network restart   //重启网络服务\n /etc/sysconfig/network-scripts/ 网络配置信息 \n    [root@localhost network-scripts]# cat ifcfg-eth0 \n    # Advanced Micro Devices [AMD] 79c970 [PCnet32 LANCE]\n    DEVICE=eth0  //网卡接口名，要和配置文件名的接口名匹配\n    BOOTPROTO=none 设置网卡获取IP地址的方式（static,none,dhcp）\n              dhcp //入网参数是DHCP服务器分配的\n    BROADCAST=192.168.2.255 //设置网卡使用的广播地址\n    HWADDR=00:0C:29:B9:E7:63 //当前网卡的MAC地址\n    ONBOOT=yes   //开机激活网卡\n    NETMASK=255.255.255.0  //指定当前网卡使用的子网掩码\n    IPADDR=192.168.0.22 //指定当前网卡使用的IP地址\n    GATEWAY=192.168.0.1\n    NETWORK=192.168.2.0 //指定当前网卡IP地址所在的网段\n    TYPE=Ethernet\n    USERCTL=no\n    IPV6INIT=no\n    PEERDNS=yes    \n\n    #setup //配置网络地址\n\n    [root@localhost ~]# ifconfig  eth0:1 192.168.0.221  //临时绑定多个IP地址\n    [root@localhost ~]# ifconfig  eth0:2 192.168.0.222\n    //永久配置多个IP地址\n    #cp /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/sysconfig/network-scripts/ifcfg-eth0:0\n    #vim /etc/sysconfig/network-script/ifcfg-eth0:0 //编辑进行绑定多个IP地址\n    #ifconfig -a //查看所有网卡\n    网卡接口：eth      sit     ppp      fddi    virbr               xenbr\n             以太网卡  IPV6    VPN       光纤   XEN虚拟机内桥      XEN外桥\n</code></pre><h4 id=\"3-网关配置：\"><a href=\"#3-网关配置：\" class=\"headerlink\" title=\"3.网关配置：\"></a>3.网关配置：</h4><pre><code>#vim /etc/sysconfig/network-script/ifcfg-eth0  //永久生效配置\n   GATEWAY=192.168.2.254\n#service network restart\n#route add default gw 192.168.2.254   //临时添加网关\n#route del default gw 192.168.2.254   //删除网关\n#route -n  //查看路由表\n[root@localhost ~]# route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0\n169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 eth0\n0.0.0.0         192.168.0.1     0.0.0.0         UG    0      0        0 eth0   //默认网关UG\n#route add default gw 192.168.3.254/24 \n#route add -net 192.168.3.0/24 dev eth0\n\n192.168.2.245/24  eth0   VPC   eth0   192.168.3.245/24\n                  2.245         3.245\n#ping 192.168.2.245   //可以通\n#ping 192.168.3.245   //不通\n1.设置192.168.2.245的默认网关 #route add default gw 192.168.2.245\n2.添加192.168.3.245 eth1  #ifconfig 192.168.2.245/24\nVPC配置\n [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward  //默认值为0\n 0\n [root@teacher ftp]# echo 1 &gt; /proc/sys/net/ipv4/ip_forward //设置为1,启动\n [root@teacher ftp]# cat /proc/sys/net/ipv4/ip_forward \n [root@teacher ftp]# vim /etc/sysctl.conf    //另一种配置方法\n  net.ipv4.ip_forward = 1   //修改值为1\n  [root@localhost ~]# sysctl -p\n    net.ipv4.ip_forward = 1\n    net.ipv4.conf.default.rp_filter = 1\n    net.ipv4.conf.default.accept_source_route = 0\n    kernel.sysrq = 0\n    kernel.core_uses_pid = 1\n    net.ipv4.tcp_syncookies = 1\n    kernel.msgmnb = 65536\n    kernel.msgmax = 65536\n    kernel.shmmax = 4294967295\n    kernel.shmall = 268435456 \n</code></pre><h4 id=\"4-DHCP\"><a href=\"#4-DHCP\" class=\"headerlink\" title=\"4. DHCP\"></a>4. DHCP</h4><pre><code>1.1 DHCP工作原理 C/S\n  /etc/dhcpd.conf  //主配置文件\n  /usr/share/doc/dhcp-3.0.5/dhcpd.conf.sample  模板文件\n  用IP地址是192.168.2.1的主机作DHCP服务器\n  能够分配192.168.2.0/24网段内的IP地址给客户端使用\n  并且IP地址192.168.2.100-101这个范围内的IP地址不会动态\n  分配给客户端使用，要求IP地址192.168.2.188 108 88\n  只分配给BOSS BOSS2 BOSS3\n  所有主机的网关是192.168.2.254\nsubnet 192.168.0.0 netmask 255.255.255.0  {-\n    option routers    192.168.2.254; //网关\n    option subnet-mask   255.255.255.0;//子网掩码\n    option domain-name    &quot;domain.org&quot;//客户端主机所在的区\n    option domain-name-servers 1.1.1.1,2.2.2.2,3.3.3.3; //指定DNS服务器 \n    option time-offset    -18000;//标准时间偏差值\n    range   dynamic-bootp 192.168.2.1 192.168.2.99;   //动态分配IP地址范围\n    range   dynamic-bootp 192.168.2.111 192.168.2.253;   //动态分配IP地址范围\n\n    default-lease-time   21600   //默认租期 单位秒\n    max-lease-time   43200;   //最大租期\n    host  boss{    //host 标识名{}\n        hardware ethernet  00:14:78:57:c0:98;//指定MAC地址\n        fixed-addess  192.168.2.188;\n    }\n    host  boss2{    //host 标识名{}\n        hardware ethernet  00:0C:32:EG:8E:4R;//指定MAC地址\n        fixed-addess  192.168.2.108;\n    }\n} //分配IP地址的网段\n\n #service dhcpd restart  //从启DHCP\n #dhcpd  //检测配置文件是否有语法错误\n\n 客户端配置\n #vim ifcfg.eth0   //编辑此文件\n BOOTPROTO=dhcp  //修改为dhcp\n\n#pkill -9 dhclient   //杀死客户端进程\n#cat /etc/reslvo.conf\n\ndhcp-server\n租约文件 来记录把IP地址都分配给谁了\n#cat /var/lib/dhcpd/dhcpd.leases\n\n/var/log/messages //错误日志\n</code></pre>"},{"title":"文件查找&解压缩","originContent":"","toc":true,"date":"2018-12-11T10:54:17.000Z","_content":"\n```language\n1.远程连接:#service sshd status //查看远程连接\n\n2.远程连接别的机器:#ssh root@192.168.2.18 //远程连接用root用户登录\n\n3.杀死所有使用/mnt的进程:#fuser -ki /mnt //k=>kill, i=>显示\n\n4.停止sshd:#service sshd stop\n\n5.相对路径和绝对路径：\n    1）相对路径：从当前目录开始的路径\n    2）绝对路径：从跟目录开始的路径\n\n6.ls [选项] 文件名/文件目录名：\n       -l:查看目录或文件的详细信息\n       -d:查看目录本身的详细信息\n       -R:递归显示目录下的文件列表\n\n7.创建目录:#mkdir [选项] 文件夹名称(可以多个文件夹名称)\n     -p:同时建立多级子目录,父目录不存在时\n\n8.删除文件夹：#rmdir [选项] 文件夹名称 //不能删除非空的文件夹\n\n9.#删除文件或文件夹：#rm [选项] 文件夹名称  //删除非空文件夹\n                        -r：递归\n                        -f:强制删除\n\n10.创建空文件：#touch 目录/文件名 或者 文件名\n\n11.更改文件修改时间：# touch 文件名（文件名必须存在）\n\n12.文件三种时间：\n      文件访问时间(change)，\n      文件属性修改时间(access)，\n      文件内容修改时间(modify)\n\n13.查看文件状态：#stat 文件名\n\n14.文件复制或修改文件名：\n         #cp [选项]  源文件  目的文件（新文件名）\n              -r:递归拷贝文件夹下的文件\n\n15.文件和目录的移动和修改名称:\n         #mv [选项] 源文件 目标文件（新文件名）\n\n16.查看文件内容：\n         #cat [选项] 文件名    //查看内容较少的文件 \n                -b:查看时显示行号\n         #more [选项] 文件名    //查看文件内容较多的文件（只能往下看）\n                q:退出\n         #less [选项] 文件名    //查看文件内容较多的文件（来回看）\n              pagedown ,pageup:上下翻页\n         #tail [选项] 文件名   //看文件的尾部信息 （默认显示末尾10行）\n         #head [选项] 文件名   //看文件头部信息   （默认显示末头部10行）  \n                 -数字：查看头几行\n17.命令行定位：end:当前命令行结尾 home：当前命令行开始\n\n18.对文件内容进行过滤查找:\n        #grep [选项] '表达式' 文件名\n              --color:标红显示\n              -v:取反,显示于表达式不一样的行\n              -c:统计与表达式匹配的有多少行\n              \"^$\":匹配空行\n        例：#grep bin /etc/passwd //查找文件passwd中的bin\n           #grep -v \"#\" http.conf | grep -v \"^$\" \n                     //过滤显示非＃的内容，去除空行\n\n19.统计文件有多少行：#wc -l 文件名\n                -c:统计有多少行\n                -w:统计有多少个单词\n        例：#ps -aux | wc -l //统计进程有多少行\n   注:有效进程 = 当前统计的进程数 - 2 （当前进程执行有两个进程）\n\n20.通配符：#touch test{1,2,3}.txt\n         {}:当前｛｝中的\n          *:0到多个字符\n          ?:匹配一个字符\n\n21.文件后缀名:\n           .cf, .conf, .cnf：配置文件\n           .sh：源码文件\n           .o,.so:模块或库文件 /sys/module\n           .rpm:源码包\n           .tar.gz,tar.bz2:压缩包\n           .img, .iso:镜像文件\n           .bin:可执行的二进制文件\n\n22.查找：（查找对象和范围不同）\n    #which  文件名  \n          //查找二进制文件，在用户用的PATH（系统环境变量）变量值范围内查找\n     \n    #locate  文件名\n         //找系统数据库(根目录)下的所有文件(由crond计划任务定期执行生成数据库)\n         // /var/lib/mlocate\n         #updatedb    //手动更新locate库\n\n    #find [路径] <查找条件> [-exec 处理动作 {} \\;] // \\;处理动作结束\n       1)[路径] ：查找范围，若不写，在当前目录下查找\n       2)查找条件：必写\n           11)文件类型查找： -type 文件类型\n              文件类型：\n                  f:普通文件\n                  d:目录\n                  b:块设备\n                  l:链接文件\n                  p:管道文件\n                  s:套接字\n               例：#find  -type d  //查找当前路径下目录文件\n                  #ls -a //显示隐藏文件\n                  #find -type f -exec ls -l {} \\; \n                       //查找普通文件以长格式显示，输出到{}\n\n           22)文件名查找： -name 文件名\n                例：#find /tmp -name \"test.txt\" //查找tmp下的test.txt\n                   #find /tmp -name \"test.txt\" -exec rm -rf {} \\;\n                    //找到之后删除\n                   #find /tmp -name \"test.txt\" -exec mv {} / \\;\n                    //把查找到的文件移到根目录 \n\n           33)文件大小查找：-size  8k:等于\n                            +8k:大于8k\n                            -8k:小于8k\n                     例：#find /etc/ -size 10 //查找/etc/下10k的文件\n         \n           44)文件所属者／所属组查找：\n                1)文件所属者: -user 用户名\n                  例：#find / -user zyj  //查找/下文件所有者为zyj的文件\n                2)所属组：-group 用户组名\n                  例：#find / -group zyj \n  \n           55)文件时间查找：\n                  1)atime: -atime +3(单位天)  //3天以前被访问过的文件\n                  2)ctime:       //属性修改时间\n                  3)mtime:      //被修改过的文件\n           66)文件权限查找：\n                 -perm [(+:以其中任意一位匹配),(-:每一位都匹配)，(空:精确匹配)]权限值\n                例：#find / -perm 777 -exec ls -ld {} \\; | grep testdir\n                //以长格式显示777权限的文件\n         3)-exec 处理动作，对找到的文件如何处理\n\n23.查看当前系统的环境变量: #env | grep -i path\n                      #echo $PATH //输出变量名\n\n24.内建命令，外建命令：\n     1）内建命令：由操作系统提供\n     2）外建命令：由软件包提供\n    \n25.查看命令类型：#type -t 命令名\n               builtin :内建命令\n               alias:别名\n               file:外建命令\n\n26.查看文件或目录大小：#du -h 文件名/目录名\n               -sh:只查看总目录大小 （s统计总和）\n\n27.查看分区大小:#df -h 分区\n\n28.查看当前用户属于哪些用户组:#groups [用户名]\n\n29.命令的帮助文档： --help, -h  //命令帮助选项\n         \n30.修改日期和时间:#date -s \"20130501 14:12:12\"\n\n31.查看日历：#cal [年]\n\n32.帮助手册:命令名 --help | -h\n          #man 1 -------- #man 9   #man 1 ls\n          #man 8 (管理员使用命令)     #man 8 useradd\n          #man 5 文件名 (配置使用命令) #man 5 vsftpd.conf\n          #man -k 文件名    //所有man手册查找\n          #makewhatis      //生成man手册目录\n           \n33.帮助手册：#info //分段显示\n\n34.帮助文档存放路径:/usr/share/doc/软件同名目录/man\n\n35.输出镜像文件:\n     1)#mkbootdisk \n     2)#dd if=/media/RHEL_5.8* of=/test/rhcl5.8_au.iso\n        11)if:在哪\n        22)of:输出到哪\n\n36.打包、压缩：\n   1)打包： #tar [选项] 打包后的文件名 被打包的文件列表\n                -f:必选,\n                -c:创建包文件(打包)\n                -x:解包\n                -C:解包到指定目录\n                -t:看打包内的文件列表\n                -v:显示打包或解包的信息\n  \t\t--remove：打包后删除源文件\n                --get:把某个文件从tar包里复制出来\n\t\t--delete：把某个文件从tar包里删除\n           例:#tar -cvf one.tar  group httpd.conf test2.txt --remove\n              //打包后删除源文件 --remove\n             #tar -tf one.tar //查看打包内的文件\n             #tar -f one.tar --get httpd.conf //把某个文件从包里复制一份出来\n             #tar -f one.tar --delete test2.txt //把某个文件从tar包里删除\n   2)解压：\n       #tar -xvf one.tar -C /test/  //把包里的东西解压到指定的目录下\n             \n   3)压缩： \n        #bzip2   //压缩后删除源文件,后缀.bz2\n        #gzip    //压缩后删除源文件,后缀.gz\n           -9:高比例压缩    \n      注：只能压缩单个文件，压缩目录时跟tar连用\n      例：#gzip -9 文件名\n  \n      解压缩:#gunzip   压缩文件名  //解压缩后删除源文件\n            #gzip  -d 压缩文件名  //解压缩后删除源文件\n\n          例：#bzip2 文件名  //压缩\n             #bunzip2  压缩文件名  //解压\n\n   4)打包并压缩：(打包后不删除源文件)\n      tar+gzip  => .tar.gz\n      tar+bzip2 => .tar.bz2\n      \n      //打包并压缩\n      #tar -zcvf  all.tar.gz     /etc/*\n         -z:代表gzip\n      \n      #tar -jcvf  one.tar.bz2   /etc/*\n\n      //解包 解压缩\n      #tar -zxvf xxx.tar.gz  -C /usr/src/\n      #tar -jxvf xxx.tar.bz2 -C /usr/src\n```\n","source":"_posts/文件查找-解压缩.md","raw":"---\ntitle: 文件查找&解压缩\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-11 18:54:17\n---\n\n```language\n1.远程连接:#service sshd status //查看远程连接\n\n2.远程连接别的机器:#ssh root@192.168.2.18 //远程连接用root用户登录\n\n3.杀死所有使用/mnt的进程:#fuser -ki /mnt //k=>kill, i=>显示\n\n4.停止sshd:#service sshd stop\n\n5.相对路径和绝对路径：\n    1）相对路径：从当前目录开始的路径\n    2）绝对路径：从跟目录开始的路径\n\n6.ls [选项] 文件名/文件目录名：\n       -l:查看目录或文件的详细信息\n       -d:查看目录本身的详细信息\n       -R:递归显示目录下的文件列表\n\n7.创建目录:#mkdir [选项] 文件夹名称(可以多个文件夹名称)\n     -p:同时建立多级子目录,父目录不存在时\n\n8.删除文件夹：#rmdir [选项] 文件夹名称 //不能删除非空的文件夹\n\n9.#删除文件或文件夹：#rm [选项] 文件夹名称  //删除非空文件夹\n                        -r：递归\n                        -f:强制删除\n\n10.创建空文件：#touch 目录/文件名 或者 文件名\n\n11.更改文件修改时间：# touch 文件名（文件名必须存在）\n\n12.文件三种时间：\n      文件访问时间(change)，\n      文件属性修改时间(access)，\n      文件内容修改时间(modify)\n\n13.查看文件状态：#stat 文件名\n\n14.文件复制或修改文件名：\n         #cp [选项]  源文件  目的文件（新文件名）\n              -r:递归拷贝文件夹下的文件\n\n15.文件和目录的移动和修改名称:\n         #mv [选项] 源文件 目标文件（新文件名）\n\n16.查看文件内容：\n         #cat [选项] 文件名    //查看内容较少的文件 \n                -b:查看时显示行号\n         #more [选项] 文件名    //查看文件内容较多的文件（只能往下看）\n                q:退出\n         #less [选项] 文件名    //查看文件内容较多的文件（来回看）\n              pagedown ,pageup:上下翻页\n         #tail [选项] 文件名   //看文件的尾部信息 （默认显示末尾10行）\n         #head [选项] 文件名   //看文件头部信息   （默认显示末头部10行）  \n                 -数字：查看头几行\n17.命令行定位：end:当前命令行结尾 home：当前命令行开始\n\n18.对文件内容进行过滤查找:\n        #grep [选项] '表达式' 文件名\n              --color:标红显示\n              -v:取反,显示于表达式不一样的行\n              -c:统计与表达式匹配的有多少行\n              \"^$\":匹配空行\n        例：#grep bin /etc/passwd //查找文件passwd中的bin\n           #grep -v \"#\" http.conf | grep -v \"^$\" \n                     //过滤显示非＃的内容，去除空行\n\n19.统计文件有多少行：#wc -l 文件名\n                -c:统计有多少行\n                -w:统计有多少个单词\n        例：#ps -aux | wc -l //统计进程有多少行\n   注:有效进程 = 当前统计的进程数 - 2 （当前进程执行有两个进程）\n\n20.通配符：#touch test{1,2,3}.txt\n         {}:当前｛｝中的\n          *:0到多个字符\n          ?:匹配一个字符\n\n21.文件后缀名:\n           .cf, .conf, .cnf：配置文件\n           .sh：源码文件\n           .o,.so:模块或库文件 /sys/module\n           .rpm:源码包\n           .tar.gz,tar.bz2:压缩包\n           .img, .iso:镜像文件\n           .bin:可执行的二进制文件\n\n22.查找：（查找对象和范围不同）\n    #which  文件名  \n          //查找二进制文件，在用户用的PATH（系统环境变量）变量值范围内查找\n     \n    #locate  文件名\n         //找系统数据库(根目录)下的所有文件(由crond计划任务定期执行生成数据库)\n         // /var/lib/mlocate\n         #updatedb    //手动更新locate库\n\n    #find [路径] <查找条件> [-exec 处理动作 {} \\;] // \\;处理动作结束\n       1)[路径] ：查找范围，若不写，在当前目录下查找\n       2)查找条件：必写\n           11)文件类型查找： -type 文件类型\n              文件类型：\n                  f:普通文件\n                  d:目录\n                  b:块设备\n                  l:链接文件\n                  p:管道文件\n                  s:套接字\n               例：#find  -type d  //查找当前路径下目录文件\n                  #ls -a //显示隐藏文件\n                  #find -type f -exec ls -l {} \\; \n                       //查找普通文件以长格式显示，输出到{}\n\n           22)文件名查找： -name 文件名\n                例：#find /tmp -name \"test.txt\" //查找tmp下的test.txt\n                   #find /tmp -name \"test.txt\" -exec rm -rf {} \\;\n                    //找到之后删除\n                   #find /tmp -name \"test.txt\" -exec mv {} / \\;\n                    //把查找到的文件移到根目录 \n\n           33)文件大小查找：-size  8k:等于\n                            +8k:大于8k\n                            -8k:小于8k\n                     例：#find /etc/ -size 10 //查找/etc/下10k的文件\n         \n           44)文件所属者／所属组查找：\n                1)文件所属者: -user 用户名\n                  例：#find / -user zyj  //查找/下文件所有者为zyj的文件\n                2)所属组：-group 用户组名\n                  例：#find / -group zyj \n  \n           55)文件时间查找：\n                  1)atime: -atime +3(单位天)  //3天以前被访问过的文件\n                  2)ctime:       //属性修改时间\n                  3)mtime:      //被修改过的文件\n           66)文件权限查找：\n                 -perm [(+:以其中任意一位匹配),(-:每一位都匹配)，(空:精确匹配)]权限值\n                例：#find / -perm 777 -exec ls -ld {} \\; | grep testdir\n                //以长格式显示777权限的文件\n         3)-exec 处理动作，对找到的文件如何处理\n\n23.查看当前系统的环境变量: #env | grep -i path\n                      #echo $PATH //输出变量名\n\n24.内建命令，外建命令：\n     1）内建命令：由操作系统提供\n     2）外建命令：由软件包提供\n    \n25.查看命令类型：#type -t 命令名\n               builtin :内建命令\n               alias:别名\n               file:外建命令\n\n26.查看文件或目录大小：#du -h 文件名/目录名\n               -sh:只查看总目录大小 （s统计总和）\n\n27.查看分区大小:#df -h 分区\n\n28.查看当前用户属于哪些用户组:#groups [用户名]\n\n29.命令的帮助文档： --help, -h  //命令帮助选项\n         \n30.修改日期和时间:#date -s \"20130501 14:12:12\"\n\n31.查看日历：#cal [年]\n\n32.帮助手册:命令名 --help | -h\n          #man 1 -------- #man 9   #man 1 ls\n          #man 8 (管理员使用命令)     #man 8 useradd\n          #man 5 文件名 (配置使用命令) #man 5 vsftpd.conf\n          #man -k 文件名    //所有man手册查找\n          #makewhatis      //生成man手册目录\n           \n33.帮助手册：#info //分段显示\n\n34.帮助文档存放路径:/usr/share/doc/软件同名目录/man\n\n35.输出镜像文件:\n     1)#mkbootdisk \n     2)#dd if=/media/RHEL_5.8* of=/test/rhcl5.8_au.iso\n        11)if:在哪\n        22)of:输出到哪\n\n36.打包、压缩：\n   1)打包： #tar [选项] 打包后的文件名 被打包的文件列表\n                -f:必选,\n                -c:创建包文件(打包)\n                -x:解包\n                -C:解包到指定目录\n                -t:看打包内的文件列表\n                -v:显示打包或解包的信息\n  \t\t--remove：打包后删除源文件\n                --get:把某个文件从tar包里复制出来\n\t\t--delete：把某个文件从tar包里删除\n           例:#tar -cvf one.tar  group httpd.conf test2.txt --remove\n              //打包后删除源文件 --remove\n             #tar -tf one.tar //查看打包内的文件\n             #tar -f one.tar --get httpd.conf //把某个文件从包里复制一份出来\n             #tar -f one.tar --delete test2.txt //把某个文件从tar包里删除\n   2)解压：\n       #tar -xvf one.tar -C /test/  //把包里的东西解压到指定的目录下\n             \n   3)压缩： \n        #bzip2   //压缩后删除源文件,后缀.bz2\n        #gzip    //压缩后删除源文件,后缀.gz\n           -9:高比例压缩    \n      注：只能压缩单个文件，压缩目录时跟tar连用\n      例：#gzip -9 文件名\n  \n      解压缩:#gunzip   压缩文件名  //解压缩后删除源文件\n            #gzip  -d 压缩文件名  //解压缩后删除源文件\n\n          例：#bzip2 文件名  //压缩\n             #bunzip2  压缩文件名  //解压\n\n   4)打包并压缩：(打包后不删除源文件)\n      tar+gzip  => .tar.gz\n      tar+bzip2 => .tar.bz2\n      \n      //打包并压缩\n      #tar -zcvf  all.tar.gz     /etc/*\n         -z:代表gzip\n      \n      #tar -jcvf  one.tar.bz2   /etc/*\n\n      //解包 解压缩\n      #tar -zxvf xxx.tar.gz  -C /usr/src/\n      #tar -jxvf xxx.tar.bz2 -C /usr/src\n```\n","slug":"文件查找-解压缩","published":1,"updated":"2018-12-18T08:00:18.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eu7002eyes60i5va12u","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.远程连接:#service sshd status //查看远程连接</span><br><span class=\"line\"></span><br><span class=\"line\">2.远程连接别的机器:#ssh root@192.168.2.18 //远程连接用root用户登录</span><br><span class=\"line\"></span><br><span class=\"line\">3.杀死所有使用/mnt的进程:#fuser -ki /mnt //k=&gt;kill, i=&gt;显示</span><br><span class=\"line\"></span><br><span class=\"line\">4.停止sshd:#service sshd stop</span><br><span class=\"line\"></span><br><span class=\"line\">5.相对路径和绝对路径：</span><br><span class=\"line\">    1）相对路径：从当前目录开始的路径</span><br><span class=\"line\">    2）绝对路径：从跟目录开始的路径</span><br><span class=\"line\"></span><br><span class=\"line\">6.ls [选项] 文件名/文件目录名：</span><br><span class=\"line\">       -l:查看目录或文件的详细信息</span><br><span class=\"line\">       -d:查看目录本身的详细信息</span><br><span class=\"line\">       -R:递归显示目录下的文件列表</span><br><span class=\"line\"></span><br><span class=\"line\">7.创建目录:#mkdir [选项] 文件夹名称(可以多个文件夹名称)</span><br><span class=\"line\">     -p:同时建立多级子目录,父目录不存在时</span><br><span class=\"line\"></span><br><span class=\"line\">8.删除文件夹：#rmdir [选项] 文件夹名称 //不能删除非空的文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">9.#删除文件或文件夹：#rm [选项] 文件夹名称  //删除非空文件夹</span><br><span class=\"line\">                        -r：递归</span><br><span class=\"line\">                        -f:强制删除</span><br><span class=\"line\"></span><br><span class=\"line\">10.创建空文件：#touch 目录/文件名 或者 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">11.更改文件修改时间：# touch 文件名（文件名必须存在）</span><br><span class=\"line\"></span><br><span class=\"line\">12.文件三种时间：</span><br><span class=\"line\">      文件访问时间(change)，</span><br><span class=\"line\">      文件属性修改时间(access)，</span><br><span class=\"line\">      文件内容修改时间(modify)</span><br><span class=\"line\"></span><br><span class=\"line\">13.查看文件状态：#stat 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">14.文件复制或修改文件名：</span><br><span class=\"line\">         #cp [选项]  源文件  目的文件（新文件名）</span><br><span class=\"line\">              -r:递归拷贝文件夹下的文件</span><br><span class=\"line\"></span><br><span class=\"line\">15.文件和目录的移动和修改名称:</span><br><span class=\"line\">         #mv [选项] 源文件 目标文件（新文件名）</span><br><span class=\"line\"></span><br><span class=\"line\">16.查看文件内容：</span><br><span class=\"line\">         #cat [选项] 文件名    //查看内容较少的文件 </span><br><span class=\"line\">                -b:查看时显示行号</span><br><span class=\"line\">         #more [选项] 文件名    //查看文件内容较多的文件（只能往下看）</span><br><span class=\"line\">                q:退出</span><br><span class=\"line\">         #less [选项] 文件名    //查看文件内容较多的文件（来回看）</span><br><span class=\"line\">              pagedown ,pageup:上下翻页</span><br><span class=\"line\">         #tail [选项] 文件名   //看文件的尾部信息 （默认显示末尾10行）</span><br><span class=\"line\">         #head [选项] 文件名   //看文件头部信息   （默认显示末头部10行）  </span><br><span class=\"line\">                 -数字：查看头几行</span><br><span class=\"line\">17.命令行定位：end:当前命令行结尾 home：当前命令行开始</span><br><span class=\"line\"></span><br><span class=\"line\">18.对文件内容进行过滤查找:</span><br><span class=\"line\">        #grep [选项] &apos;表达式&apos; 文件名</span><br><span class=\"line\">              --color:标红显示</span><br><span class=\"line\">              -v:取反,显示于表达式不一样的行</span><br><span class=\"line\">              -c:统计与表达式匹配的有多少行</span><br><span class=\"line\">              &quot;^$&quot;:匹配空行</span><br><span class=\"line\">        例：#grep bin /etc/passwd //查找文件passwd中的bin</span><br><span class=\"line\">           #grep -v &quot;#&quot; http.conf | grep -v &quot;^$&quot; </span><br><span class=\"line\">                     //过滤显示非＃的内容，去除空行</span><br><span class=\"line\"></span><br><span class=\"line\">19.统计文件有多少行：#wc -l 文件名</span><br><span class=\"line\">                -c:统计有多少行</span><br><span class=\"line\">                -w:统计有多少个单词</span><br><span class=\"line\">        例：#ps -aux | wc -l //统计进程有多少行</span><br><span class=\"line\">   注:有效进程 = 当前统计的进程数 - 2 （当前进程执行有两个进程）</span><br><span class=\"line\"></span><br><span class=\"line\">20.通配符：#touch test&#123;1,2,3&#125;.txt</span><br><span class=\"line\">         &#123;&#125;:当前｛｝中的</span><br><span class=\"line\">          *:0到多个字符</span><br><span class=\"line\">          ?:匹配一个字符</span><br><span class=\"line\"></span><br><span class=\"line\">21.文件后缀名:</span><br><span class=\"line\">           .cf, .conf, .cnf：配置文件</span><br><span class=\"line\">           .sh：源码文件</span><br><span class=\"line\">           .o,.so:模块或库文件 /sys/module</span><br><span class=\"line\">           .rpm:源码包</span><br><span class=\"line\">           .tar.gz,tar.bz2:压缩包</span><br><span class=\"line\">           .img, .iso:镜像文件</span><br><span class=\"line\">           .bin:可执行的二进制文件</span><br><span class=\"line\"></span><br><span class=\"line\">22.查找：（查找对象和范围不同）</span><br><span class=\"line\">    #which  文件名  </span><br><span class=\"line\">          //查找二进制文件，在用户用的PATH（系统环境变量）变量值范围内查找</span><br><span class=\"line\">     </span><br><span class=\"line\">    #locate  文件名</span><br><span class=\"line\">         //找系统数据库(根目录)下的所有文件(由crond计划任务定期执行生成数据库)</span><br><span class=\"line\">         // /var/lib/mlocate</span><br><span class=\"line\">         #updatedb    //手动更新locate库</span><br><span class=\"line\"></span><br><span class=\"line\">    #find [路径] &lt;查找条件&gt; [-exec 处理动作 &#123;&#125; \\;] // \\;处理动作结束</span><br><span class=\"line\">       1)[路径] ：查找范围，若不写，在当前目录下查找</span><br><span class=\"line\">       2)查找条件：必写</span><br><span class=\"line\">           11)文件类型查找： -type 文件类型</span><br><span class=\"line\">              文件类型：</span><br><span class=\"line\">                  f:普通文件</span><br><span class=\"line\">                  d:目录</span><br><span class=\"line\">                  b:块设备</span><br><span class=\"line\">                  l:链接文件</span><br><span class=\"line\">                  p:管道文件</span><br><span class=\"line\">                  s:套接字</span><br><span class=\"line\">               例：#find  -type d  //查找当前路径下目录文件</span><br><span class=\"line\">                  #ls -a //显示隐藏文件</span><br><span class=\"line\">                  #find -type f -exec ls -l &#123;&#125; \\; </span><br><span class=\"line\">                       //查找普通文件以长格式显示，输出到&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           22)文件名查找： -name 文件名</span><br><span class=\"line\">                例：#find /tmp -name &quot;test.txt&quot; //查找tmp下的test.txt</span><br><span class=\"line\">                   #find /tmp -name &quot;test.txt&quot; -exec rm -rf &#123;&#125; \\;</span><br><span class=\"line\">                    //找到之后删除</span><br><span class=\"line\">                   #find /tmp -name &quot;test.txt&quot; -exec mv &#123;&#125; / \\;</span><br><span class=\"line\">                    //把查找到的文件移到根目录 </span><br><span class=\"line\"></span><br><span class=\"line\">           33)文件大小查找：-size  8k:等于</span><br><span class=\"line\">                            +8k:大于8k</span><br><span class=\"line\">                            -8k:小于8k</span><br><span class=\"line\">                     例：#find /etc/ -size 10 //查找/etc/下10k的文件</span><br><span class=\"line\">         </span><br><span class=\"line\">           44)文件所属者／所属组查找：</span><br><span class=\"line\">                1)文件所属者: -user 用户名</span><br><span class=\"line\">                  例：#find / -user zyj  //查找/下文件所有者为zyj的文件</span><br><span class=\"line\">                2)所属组：-group 用户组名</span><br><span class=\"line\">                  例：#find / -group zyj </span><br><span class=\"line\">  </span><br><span class=\"line\">           55)文件时间查找：</span><br><span class=\"line\">                  1)atime: -atime +3(单位天)  //3天以前被访问过的文件</span><br><span class=\"line\">                  2)ctime:       //属性修改时间</span><br><span class=\"line\">                  3)mtime:      //被修改过的文件</span><br><span class=\"line\">           66)文件权限查找：</span><br><span class=\"line\">                 -perm [(+:以其中任意一位匹配),(-:每一位都匹配)，(空:精确匹配)]权限值</span><br><span class=\"line\">                例：#find / -perm 777 -exec ls -ld &#123;&#125; \\; | grep testdir</span><br><span class=\"line\">                //以长格式显示777权限的文件</span><br><span class=\"line\">         3)-exec 处理动作，对找到的文件如何处理</span><br><span class=\"line\"></span><br><span class=\"line\">23.查看当前系统的环境变量: #env | grep -i path</span><br><span class=\"line\">                      #echo $PATH //输出变量名</span><br><span class=\"line\"></span><br><span class=\"line\">24.内建命令，外建命令：</span><br><span class=\"line\">     1）内建命令：由操作系统提供</span><br><span class=\"line\">     2）外建命令：由软件包提供</span><br><span class=\"line\">    </span><br><span class=\"line\">25.查看命令类型：#type -t 命令名</span><br><span class=\"line\">               builtin :内建命令</span><br><span class=\"line\">               alias:别名</span><br><span class=\"line\">               file:外建命令</span><br><span class=\"line\"></span><br><span class=\"line\">26.查看文件或目录大小：#du -h 文件名/目录名</span><br><span class=\"line\">               -sh:只查看总目录大小 （s统计总和）</span><br><span class=\"line\"></span><br><span class=\"line\">27.查看分区大小:#df -h 分区</span><br><span class=\"line\"></span><br><span class=\"line\">28.查看当前用户属于哪些用户组:#groups [用户名]</span><br><span class=\"line\"></span><br><span class=\"line\">29.命令的帮助文档： --help, -h  //命令帮助选项</span><br><span class=\"line\">         </span><br><span class=\"line\">30.修改日期和时间:#date -s &quot;20130501 14:12:12&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">31.查看日历：#cal [年]</span><br><span class=\"line\"></span><br><span class=\"line\">32.帮助手册:命令名 --help | -h</span><br><span class=\"line\">          #man 1 -------- #man 9   #man 1 ls</span><br><span class=\"line\">          #man 8 (管理员使用命令)     #man 8 useradd</span><br><span class=\"line\">          #man 5 文件名 (配置使用命令) #man 5 vsftpd.conf</span><br><span class=\"line\">          #man -k 文件名    //所有man手册查找</span><br><span class=\"line\">          #makewhatis      //生成man手册目录</span><br><span class=\"line\">           </span><br><span class=\"line\">33.帮助手册：#info //分段显示</span><br><span class=\"line\"></span><br><span class=\"line\">34.帮助文档存放路径:/usr/share/doc/软件同名目录/man</span><br><span class=\"line\"></span><br><span class=\"line\">35.输出镜像文件:</span><br><span class=\"line\">     1)#mkbootdisk </span><br><span class=\"line\">     2)#dd if=/media/RHEL_5.8* of=/test/rhcl5.8_au.iso</span><br><span class=\"line\">        11)if:在哪</span><br><span class=\"line\">        22)of:输出到哪</span><br><span class=\"line\"></span><br><span class=\"line\">36.打包、压缩：</span><br><span class=\"line\">   1)打包： #tar [选项] 打包后的文件名 被打包的文件列表</span><br><span class=\"line\">                -f:必选,</span><br><span class=\"line\">                -c:创建包文件(打包)</span><br><span class=\"line\">                -x:解包</span><br><span class=\"line\">                -C:解包到指定目录</span><br><span class=\"line\">                -t:看打包内的文件列表</span><br><span class=\"line\">                -v:显示打包或解包的信息</span><br><span class=\"line\">  \t\t--remove：打包后删除源文件</span><br><span class=\"line\">                --get:把某个文件从tar包里复制出来</span><br><span class=\"line\">\t\t--delete：把某个文件从tar包里删除</span><br><span class=\"line\">           例:#tar -cvf one.tar  group httpd.conf test2.txt --remove</span><br><span class=\"line\">              //打包后删除源文件 --remove</span><br><span class=\"line\">             #tar -tf one.tar //查看打包内的文件</span><br><span class=\"line\">             #tar -f one.tar --get httpd.conf //把某个文件从包里复制一份出来</span><br><span class=\"line\">             #tar -f one.tar --delete test2.txt //把某个文件从tar包里删除</span><br><span class=\"line\">   2)解压：</span><br><span class=\"line\">       #tar -xvf one.tar -C /test/  //把包里的东西解压到指定的目录下</span><br><span class=\"line\">             </span><br><span class=\"line\">   3)压缩： </span><br><span class=\"line\">        #bzip2   //压缩后删除源文件,后缀.bz2</span><br><span class=\"line\">        #gzip    //压缩后删除源文件,后缀.gz</span><br><span class=\"line\">           -9:高比例压缩    </span><br><span class=\"line\">      注：只能压缩单个文件，压缩目录时跟tar连用</span><br><span class=\"line\">      例：#gzip -9 文件名</span><br><span class=\"line\">  </span><br><span class=\"line\">      解压缩:#gunzip   压缩文件名  //解压缩后删除源文件</span><br><span class=\"line\">            #gzip  -d 压缩文件名  //解压缩后删除源文件</span><br><span class=\"line\"></span><br><span class=\"line\">          例：#bzip2 文件名  //压缩</span><br><span class=\"line\">             #bunzip2  压缩文件名  //解压</span><br><span class=\"line\"></span><br><span class=\"line\">   4)打包并压缩：(打包后不删除源文件)</span><br><span class=\"line\">      tar+gzip  =&gt; .tar.gz</span><br><span class=\"line\">      tar+bzip2 =&gt; .tar.bz2</span><br><span class=\"line\">      </span><br><span class=\"line\">      //打包并压缩</span><br><span class=\"line\">      #tar -zcvf  all.tar.gz     /etc/*</span><br><span class=\"line\">         -z:代表gzip</span><br><span class=\"line\">      </span><br><span class=\"line\">      #tar -jcvf  one.tar.bz2   /etc/*</span><br><span class=\"line\"></span><br><span class=\"line\">      //解包 解压缩</span><br><span class=\"line\">      #tar -zxvf xxx.tar.gz  -C /usr/src/</span><br><span class=\"line\">      #tar -jxvf xxx.tar.bz2 -C /usr/src</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.远程连接:#service sshd status //查看远程连接</span><br><span class=\"line\"></span><br><span class=\"line\">2.远程连接别的机器:#ssh root@192.168.2.18 //远程连接用root用户登录</span><br><span class=\"line\"></span><br><span class=\"line\">3.杀死所有使用/mnt的进程:#fuser -ki /mnt //k=&gt;kill, i=&gt;显示</span><br><span class=\"line\"></span><br><span class=\"line\">4.停止sshd:#service sshd stop</span><br><span class=\"line\"></span><br><span class=\"line\">5.相对路径和绝对路径：</span><br><span class=\"line\">    1）相对路径：从当前目录开始的路径</span><br><span class=\"line\">    2）绝对路径：从跟目录开始的路径</span><br><span class=\"line\"></span><br><span class=\"line\">6.ls [选项] 文件名/文件目录名：</span><br><span class=\"line\">       -l:查看目录或文件的详细信息</span><br><span class=\"line\">       -d:查看目录本身的详细信息</span><br><span class=\"line\">       -R:递归显示目录下的文件列表</span><br><span class=\"line\"></span><br><span class=\"line\">7.创建目录:#mkdir [选项] 文件夹名称(可以多个文件夹名称)</span><br><span class=\"line\">     -p:同时建立多级子目录,父目录不存在时</span><br><span class=\"line\"></span><br><span class=\"line\">8.删除文件夹：#rmdir [选项] 文件夹名称 //不能删除非空的文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">9.#删除文件或文件夹：#rm [选项] 文件夹名称  //删除非空文件夹</span><br><span class=\"line\">                        -r：递归</span><br><span class=\"line\">                        -f:强制删除</span><br><span class=\"line\"></span><br><span class=\"line\">10.创建空文件：#touch 目录/文件名 或者 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">11.更改文件修改时间：# touch 文件名（文件名必须存在）</span><br><span class=\"line\"></span><br><span class=\"line\">12.文件三种时间：</span><br><span class=\"line\">      文件访问时间(change)，</span><br><span class=\"line\">      文件属性修改时间(access)，</span><br><span class=\"line\">      文件内容修改时间(modify)</span><br><span class=\"line\"></span><br><span class=\"line\">13.查看文件状态：#stat 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">14.文件复制或修改文件名：</span><br><span class=\"line\">         #cp [选项]  源文件  目的文件（新文件名）</span><br><span class=\"line\">              -r:递归拷贝文件夹下的文件</span><br><span class=\"line\"></span><br><span class=\"line\">15.文件和目录的移动和修改名称:</span><br><span class=\"line\">         #mv [选项] 源文件 目标文件（新文件名）</span><br><span class=\"line\"></span><br><span class=\"line\">16.查看文件内容：</span><br><span class=\"line\">         #cat [选项] 文件名    //查看内容较少的文件 </span><br><span class=\"line\">                -b:查看时显示行号</span><br><span class=\"line\">         #more [选项] 文件名    //查看文件内容较多的文件（只能往下看）</span><br><span class=\"line\">                q:退出</span><br><span class=\"line\">         #less [选项] 文件名    //查看文件内容较多的文件（来回看）</span><br><span class=\"line\">              pagedown ,pageup:上下翻页</span><br><span class=\"line\">         #tail [选项] 文件名   //看文件的尾部信息 （默认显示末尾10行）</span><br><span class=\"line\">         #head [选项] 文件名   //看文件头部信息   （默认显示末头部10行）  </span><br><span class=\"line\">                 -数字：查看头几行</span><br><span class=\"line\">17.命令行定位：end:当前命令行结尾 home：当前命令行开始</span><br><span class=\"line\"></span><br><span class=\"line\">18.对文件内容进行过滤查找:</span><br><span class=\"line\">        #grep [选项] &apos;表达式&apos; 文件名</span><br><span class=\"line\">              --color:标红显示</span><br><span class=\"line\">              -v:取反,显示于表达式不一样的行</span><br><span class=\"line\">              -c:统计与表达式匹配的有多少行</span><br><span class=\"line\">              &quot;^$&quot;:匹配空行</span><br><span class=\"line\">        例：#grep bin /etc/passwd //查找文件passwd中的bin</span><br><span class=\"line\">           #grep -v &quot;#&quot; http.conf | grep -v &quot;^$&quot; </span><br><span class=\"line\">                     //过滤显示非＃的内容，去除空行</span><br><span class=\"line\"></span><br><span class=\"line\">19.统计文件有多少行：#wc -l 文件名</span><br><span class=\"line\">                -c:统计有多少行</span><br><span class=\"line\">                -w:统计有多少个单词</span><br><span class=\"line\">        例：#ps -aux | wc -l //统计进程有多少行</span><br><span class=\"line\">   注:有效进程 = 当前统计的进程数 - 2 （当前进程执行有两个进程）</span><br><span class=\"line\"></span><br><span class=\"line\">20.通配符：#touch test&#123;1,2,3&#125;.txt</span><br><span class=\"line\">         &#123;&#125;:当前｛｝中的</span><br><span class=\"line\">          *:0到多个字符</span><br><span class=\"line\">          ?:匹配一个字符</span><br><span class=\"line\"></span><br><span class=\"line\">21.文件后缀名:</span><br><span class=\"line\">           .cf, .conf, .cnf：配置文件</span><br><span class=\"line\">           .sh：源码文件</span><br><span class=\"line\">           .o,.so:模块或库文件 /sys/module</span><br><span class=\"line\">           .rpm:源码包</span><br><span class=\"line\">           .tar.gz,tar.bz2:压缩包</span><br><span class=\"line\">           .img, .iso:镜像文件</span><br><span class=\"line\">           .bin:可执行的二进制文件</span><br><span class=\"line\"></span><br><span class=\"line\">22.查找：（查找对象和范围不同）</span><br><span class=\"line\">    #which  文件名  </span><br><span class=\"line\">          //查找二进制文件，在用户用的PATH（系统环境变量）变量值范围内查找</span><br><span class=\"line\">     </span><br><span class=\"line\">    #locate  文件名</span><br><span class=\"line\">         //找系统数据库(根目录)下的所有文件(由crond计划任务定期执行生成数据库)</span><br><span class=\"line\">         // /var/lib/mlocate</span><br><span class=\"line\">         #updatedb    //手动更新locate库</span><br><span class=\"line\"></span><br><span class=\"line\">    #find [路径] &lt;查找条件&gt; [-exec 处理动作 &#123;&#125; \\;] // \\;处理动作结束</span><br><span class=\"line\">       1)[路径] ：查找范围，若不写，在当前目录下查找</span><br><span class=\"line\">       2)查找条件：必写</span><br><span class=\"line\">           11)文件类型查找： -type 文件类型</span><br><span class=\"line\">              文件类型：</span><br><span class=\"line\">                  f:普通文件</span><br><span class=\"line\">                  d:目录</span><br><span class=\"line\">                  b:块设备</span><br><span class=\"line\">                  l:链接文件</span><br><span class=\"line\">                  p:管道文件</span><br><span class=\"line\">                  s:套接字</span><br><span class=\"line\">               例：#find  -type d  //查找当前路径下目录文件</span><br><span class=\"line\">                  #ls -a //显示隐藏文件</span><br><span class=\"line\">                  #find -type f -exec ls -l &#123;&#125; \\; </span><br><span class=\"line\">                       //查找普通文件以长格式显示，输出到&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           22)文件名查找： -name 文件名</span><br><span class=\"line\">                例：#find /tmp -name &quot;test.txt&quot; //查找tmp下的test.txt</span><br><span class=\"line\">                   #find /tmp -name &quot;test.txt&quot; -exec rm -rf &#123;&#125; \\;</span><br><span class=\"line\">                    //找到之后删除</span><br><span class=\"line\">                   #find /tmp -name &quot;test.txt&quot; -exec mv &#123;&#125; / \\;</span><br><span class=\"line\">                    //把查找到的文件移到根目录 </span><br><span class=\"line\"></span><br><span class=\"line\">           33)文件大小查找：-size  8k:等于</span><br><span class=\"line\">                            +8k:大于8k</span><br><span class=\"line\">                            -8k:小于8k</span><br><span class=\"line\">                     例：#find /etc/ -size 10 //查找/etc/下10k的文件</span><br><span class=\"line\">         </span><br><span class=\"line\">           44)文件所属者／所属组查找：</span><br><span class=\"line\">                1)文件所属者: -user 用户名</span><br><span class=\"line\">                  例：#find / -user zyj  //查找/下文件所有者为zyj的文件</span><br><span class=\"line\">                2)所属组：-group 用户组名</span><br><span class=\"line\">                  例：#find / -group zyj </span><br><span class=\"line\">  </span><br><span class=\"line\">           55)文件时间查找：</span><br><span class=\"line\">                  1)atime: -atime +3(单位天)  //3天以前被访问过的文件</span><br><span class=\"line\">                  2)ctime:       //属性修改时间</span><br><span class=\"line\">                  3)mtime:      //被修改过的文件</span><br><span class=\"line\">           66)文件权限查找：</span><br><span class=\"line\">                 -perm [(+:以其中任意一位匹配),(-:每一位都匹配)，(空:精确匹配)]权限值</span><br><span class=\"line\">                例：#find / -perm 777 -exec ls -ld &#123;&#125; \\; | grep testdir</span><br><span class=\"line\">                //以长格式显示777权限的文件</span><br><span class=\"line\">         3)-exec 处理动作，对找到的文件如何处理</span><br><span class=\"line\"></span><br><span class=\"line\">23.查看当前系统的环境变量: #env | grep -i path</span><br><span class=\"line\">                      #echo $PATH //输出变量名</span><br><span class=\"line\"></span><br><span class=\"line\">24.内建命令，外建命令：</span><br><span class=\"line\">     1）内建命令：由操作系统提供</span><br><span class=\"line\">     2）外建命令：由软件包提供</span><br><span class=\"line\">    </span><br><span class=\"line\">25.查看命令类型：#type -t 命令名</span><br><span class=\"line\">               builtin :内建命令</span><br><span class=\"line\">               alias:别名</span><br><span class=\"line\">               file:外建命令</span><br><span class=\"line\"></span><br><span class=\"line\">26.查看文件或目录大小：#du -h 文件名/目录名</span><br><span class=\"line\">               -sh:只查看总目录大小 （s统计总和）</span><br><span class=\"line\"></span><br><span class=\"line\">27.查看分区大小:#df -h 分区</span><br><span class=\"line\"></span><br><span class=\"line\">28.查看当前用户属于哪些用户组:#groups [用户名]</span><br><span class=\"line\"></span><br><span class=\"line\">29.命令的帮助文档： --help, -h  //命令帮助选项</span><br><span class=\"line\">         </span><br><span class=\"line\">30.修改日期和时间:#date -s &quot;20130501 14:12:12&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">31.查看日历：#cal [年]</span><br><span class=\"line\"></span><br><span class=\"line\">32.帮助手册:命令名 --help | -h</span><br><span class=\"line\">          #man 1 -------- #man 9   #man 1 ls</span><br><span class=\"line\">          #man 8 (管理员使用命令)     #man 8 useradd</span><br><span class=\"line\">          #man 5 文件名 (配置使用命令) #man 5 vsftpd.conf</span><br><span class=\"line\">          #man -k 文件名    //所有man手册查找</span><br><span class=\"line\">          #makewhatis      //生成man手册目录</span><br><span class=\"line\">           </span><br><span class=\"line\">33.帮助手册：#info //分段显示</span><br><span class=\"line\"></span><br><span class=\"line\">34.帮助文档存放路径:/usr/share/doc/软件同名目录/man</span><br><span class=\"line\"></span><br><span class=\"line\">35.输出镜像文件:</span><br><span class=\"line\">     1)#mkbootdisk </span><br><span class=\"line\">     2)#dd if=/media/RHEL_5.8* of=/test/rhcl5.8_au.iso</span><br><span class=\"line\">        11)if:在哪</span><br><span class=\"line\">        22)of:输出到哪</span><br><span class=\"line\"></span><br><span class=\"line\">36.打包、压缩：</span><br><span class=\"line\">   1)打包： #tar [选项] 打包后的文件名 被打包的文件列表</span><br><span class=\"line\">                -f:必选,</span><br><span class=\"line\">                -c:创建包文件(打包)</span><br><span class=\"line\">                -x:解包</span><br><span class=\"line\">                -C:解包到指定目录</span><br><span class=\"line\">                -t:看打包内的文件列表</span><br><span class=\"line\">                -v:显示打包或解包的信息</span><br><span class=\"line\">  \t\t--remove：打包后删除源文件</span><br><span class=\"line\">                --get:把某个文件从tar包里复制出来</span><br><span class=\"line\">\t\t--delete：把某个文件从tar包里删除</span><br><span class=\"line\">           例:#tar -cvf one.tar  group httpd.conf test2.txt --remove</span><br><span class=\"line\">              //打包后删除源文件 --remove</span><br><span class=\"line\">             #tar -tf one.tar //查看打包内的文件</span><br><span class=\"line\">             #tar -f one.tar --get httpd.conf //把某个文件从包里复制一份出来</span><br><span class=\"line\">             #tar -f one.tar --delete test2.txt //把某个文件从tar包里删除</span><br><span class=\"line\">   2)解压：</span><br><span class=\"line\">       #tar -xvf one.tar -C /test/  //把包里的东西解压到指定的目录下</span><br><span class=\"line\">             </span><br><span class=\"line\">   3)压缩： </span><br><span class=\"line\">        #bzip2   //压缩后删除源文件,后缀.bz2</span><br><span class=\"line\">        #gzip    //压缩后删除源文件,后缀.gz</span><br><span class=\"line\">           -9:高比例压缩    </span><br><span class=\"line\">      注：只能压缩单个文件，压缩目录时跟tar连用</span><br><span class=\"line\">      例：#gzip -9 文件名</span><br><span class=\"line\">  </span><br><span class=\"line\">      解压缩:#gunzip   压缩文件名  //解压缩后删除源文件</span><br><span class=\"line\">            #gzip  -d 压缩文件名  //解压缩后删除源文件</span><br><span class=\"line\"></span><br><span class=\"line\">          例：#bzip2 文件名  //压缩</span><br><span class=\"line\">             #bunzip2  压缩文件名  //解压</span><br><span class=\"line\"></span><br><span class=\"line\">   4)打包并压缩：(打包后不删除源文件)</span><br><span class=\"line\">      tar+gzip  =&gt; .tar.gz</span><br><span class=\"line\">      tar+bzip2 =&gt; .tar.bz2</span><br><span class=\"line\">      </span><br><span class=\"line\">      //打包并压缩</span><br><span class=\"line\">      #tar -zcvf  all.tar.gz     /etc/*</span><br><span class=\"line\">         -z:代表gzip</span><br><span class=\"line\">      </span><br><span class=\"line\">      #tar -jcvf  one.tar.bz2   /etc/*</span><br><span class=\"line\"></span><br><span class=\"line\">      //解包 解压缩</span><br><span class=\"line\">      #tar -zxvf xxx.tar.gz  -C /usr/src/</span><br><span class=\"line\">      #tar -jxvf xxx.tar.bz2 -C /usr/src</span><br></pre></td></tr></table></figure>\n"},{"title":"辅助DNS服务器搭建","originContent":"","toc":true,"date":"2018-12-12T08:43:13.000Z","_content":"\n#### 1. 辅助DNS服务器搭建\n    用IP是192.168.2.168 作plj.com域的辅助DNS服务器\n\t * 1.1. rpm -ivh bind\n\t * 1.2. ping -c 4 192.168.2.51\n\t\t#iptables -F //清防火墙\n\t\t#setenforce 0\n\t * 1.3.从DNS服务器编辑自己的主配置文件\n\t\t#vim /var/named/chroot/etc/named.conf\n\t\toptions {\n\t\t   directory  \"/var/named/\";\n\t\t}\n\n\t\tzone \"plj.com\" {\n\t\t   type  slave;\n\t\t   file  \"slaves/plj.com.zone\"; //相对路径/var/named/saleve/数据库文件，数据库文件名可以自己给定\n\t\t   masters {192.168.2.51;}; //主DNS服务器IP\n\t\t}\n\n\t * 1.4.修改主DNS服务器配置文件，允许谁从我这边下载数据库文件。 named.conf\n\t\tzone \"plj.com\" {\n\t\t  type masters;\n\t\t  file \"plj.com.zone\";\n\t\t  allow-transfer{ 192.168.2.168;192.168.2.51;}; //用来指定辅助DNS的IP,谁做辅助DNS服务器\n\t\t}\n\n\t * 1.5.配置主数据库文件 /var/named/chroot/var/named/\n\t\tplj.com.   \t    IN   NS  dns.plj.com.\n\t\tdns.plj.com.    IN    A  192.168.2.51\n\t\tplj.com.        IN   NS slave1.plj.com.\n\t\tslave1.plj.com. IN    A 192.168.2.168\n\t\tplj.com.        IN   NS slave2.plj.com.\n\t\tslave1.plj.com. IN    A 192.168.2.50\n\n\t * 1.6.把辅助DNS主机的named服务开启\n\n\t * 1.7.客户端配置\n\t\t#vim /etc/resolv.conf\n\t\tnameserver 192.168.2.51\n\t\tnameserver 192.168.2.132\n\t  \n\t * 1.8.测试\n\t   51 service named stop\n\t   client  host www.plj.com\n\n#### 2. 事务签名\n     防止别的辅助DNS服务器下载主DNS服务器数据库文件\n    * 2.1 生成密钥\n\t   master dns\n\t   #dnssec-keygen -a hmac-md5 -b 512 -n host jing\n\t   -a:算法\n\t   -b:长度\n\t   -n:类型\n\t   名字\n\t   #cat Kjing.+157+45353.private >> /var/named/chroot/etc/named.conf  \n\n    * 2.2 制作密钥文件  vim /var/named/chroot/etc/named.conf \n\t    key \"rndckey\" {\n           algorithm hmac-md5;  //密钥算法\n           secret \"Y3lkWdmcSEaTWbicn1loDQ==\";  //key\n       };\n\t   \n    * 2.3 调用密钥文件 vim /var/named/chroot/etc/named.conf \n    \tzone \"zyj.com\" {\n\t\t\ttype master;\n\t\t\tfile \"zyj.com.zone\";\n\t\t\tallow-transfer{key rndckey;}; //调用密钥,密钥文件名与制作文件名相同\n\t\t};\n\t\t\n    * 2.4 配置辅助DNS配置文件 vim /var/named/chroot/etc/named.conf \n\t    zone \"zyj.com\" {\n           type  slave;\n           file  \"slaves/zyj.com.zone\";\n           masters {192.168.0.10 key rndckey;};   //密钥文件名与主密钥文件名相同\n\n\t\t};\n\n#### 3.分离解析\n     不同客户端访问相同主机名时，给出不同的解析结果\n\t view \"视图名称\"{\n\t    \n\t };\n\t \n\t 192.168.2.51  plj.com\n\t \n\t client 192.168.2.22   www.plj.com  192.168.2.200\n\t client 192.168.2.202  www.plj.com  192.168.2.210\n\t \n\t \n\t * 3.1 编辑主DNS的配置文件 vim /var/named/chroot/etc/named.conf\n\t  第一种写法：\n\t   view \"pc200\" {\n\t\t\tmatch-clients {192.168.0.200;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t\tview \"pc210\" {\n\t\t\tmatch-clients {any;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj3.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t\t第二种写法\n\t\tacl \"hosts1\" {192.168.0.18;};\n\t\tview \"pc200\" {\n\t\t\tmatch-clients { hosts1;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t* 3.2 编辑主数据库文件 /var/named/chroot/var/named/zyj.com.zone\n         \twww             IN        A    192.168.0.200\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n#### 4.搭建网站服务器\n    用IP是192.168.2.51的主机作网站服务，并让客户端通过www.plj.com访问到网站的首页文件\n    \n   * 4.1 配置文件中常用的参数\n        /etc/httpd/  工作目录\n\t\thttpd.conf   主配置文件\n\t\t/conf/：自己的配置文件\n\t\t/conf.d/:联合自己其他服务的配置文件\n\t\t/logs/：日志文件 \n\t\t        access.log 访问日志\n\t\t\t\terror_log  错误日志\n\t\t/modules/:模块文件\n\t\t/run/:存放PID号\n\t\t\n\t\thttpd.conf配置参数：\n\t\t\tServerTokens OS :提供网站服务软件的版本\n\t\t\tServerRoot \"/etc/httpd\" :服务跟目录\n\t\t\tpidFile run/httpd.pid:服务的PID号文件\n\t\t\tTimeout 120：超时单位秒\n\t\t\tkeepAlive Off/On：是否开启长连接,一次建立连接可以访问多个页面\n\t\t\tMaxKeepAliveRequests 100:长连接的最大请求数\n\t\t\tKeepAliveTimeout 15:长连接的超时时间\n\t\t\t\n\t\t\t网站服务器运行方式：\n\t\t\t\t  进程方式：默认\n\t\t\t\t <IfModule prefork.c>\n\t\t\t\t\t StartServers       8   //开启进程数\n\t\t\t\t\t MinSpareServers    5   //最小空闲服务\n\t\t\t\t\t MaxSpareServers   20   //最大空闲服务\n\t\t\t\t\t ServerLimit      256   //每个进程能接受多少个并发请求\n\t\t\t\t\t MaxClients       256   //客户端最大请求连接数\n\t\t\t\t\t MaxRequestsPerChild  4000 //最大请求数，每个进程累计处理达到4000，自动杀死\n\t\t\t\t </IfModule>\n\t\t\t\n\t\t\t\t线程方式：\n\t\t\t\t <IfModule worker.c>\n\t\t\t\t\t StartServers         2\n\t\t\t\t\t MaxClients         150\n\t\t\t\t\t MinSpareThreads     25\n\t\t\t\t\t MaxSpareThreads     75\n\t\t\t\t\t ThreadsPerChild     25\n\t\t\t\t\t MaxRequestsPerChild  0\n\t\t\t\t </IfModule>\n\t\t    服务启动脚本：/etc/sysconfig/httpd\n\t\t    改动服务器运行方式：vim /etc/sysconfig/httpd\n\t\t\t \t HTTPD=/usr/sbin/httpd.worker\n           \n\t\t\t Listen 80:监听端口\n\t\t     记录服务名，端口号文件：/etc/services\n\t\t\t    注：#elinks --dump http://www.zyj.com //命令行测试域名主页\n\t\t\t LoadModule :加载模块\n\t\t\t Include conf.d/*.conf //包含文件\n\t\t\t User apache  :所有者\n\t\t\t Group apache ：所属组\n\t\t\t ServerAdmin root@localhost //管理员邮箱\n\t\t\t ServerName:指定网站服务器主机名\n\t\t\t DocumentRoot \"/var/www/html\":指定网页文件存放目录\n\n\t\t\t<Directory />  //网页文件夹目录/var/www/html\n\t\t\t     Options FollowSymLinks\n\t\t\t     AllowOverride None\n\t\t    </Directory>\n\t\t\t\n\t\t\t<Directory \"/var/www/html\"> \n\t\t         Options Indexes FollowSymLinks \n\t\t\t\t AllowOverride None\n\t\t\t\t Order allow,deny  //设置访问权限，默认是拒绝所有人访问\n\t\t\t\t Order deny,allow  //设置访问权限，默认是允许所有人访问\n\t\t\t\t Allow from 192.168.2.168 //只允许2.168访问\n\t\t         Allow from all  //所有客户端访问\n\t\t     </Directory>\n\t\t\t \n\t\t\t DirectoryIndex :指定网站首页文件名\n\t\t\t LogFormat:记录日志格式\n\t\t\t CustomLog:指定日志存放位置和格式\n\t\t\t Alias:目录别名\n\t\t\t \n\t\t\t \n   * 4.2 用户个人主页\n         访问web服务器上本地用户家目录下的网页文件。\n\t\t http://www.plj.com/~plj  //访问家目录 ~plj代表家目录 \n\t\t 4.2.1 添加本地用户  \n\t\t      #useradd 用户名\n\t\t 4.2.2 修改httpd.conf 开启用户个人主页功能\n\t\t      1.注释 #UserDir disable\n\t\t\t  2.开启 UserDir public_html //指定个人主页存放路径 /home/plj/public_html\n\t\t\t  \n\t\t4.2.3 开启访问权限\n\t\t\t<Directory /home/*/public_html>   //发布个人主页目录\n\t\t\t\t//可以在目录下执行什么样的文件类型\n\t\t\t\tAllowOverride FileInfo AuthConfig Limit\n\t\t\t\tOptions MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\n\t\t\t\t//设置访问网页文件的方式\n\t\t\t\t<Limit GET POST OPTIONS>   //上传文件使用方式\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Limit>\n\t\t\t\t<LimitExcept GET POST OPTIONS>  //除了这几种方式\n\t\t\t\t\tOrder deny,allow\n\t\t\t\t\tDeny from all\n\t\t\t\t</LimitExcept>\n\t\t\t</Directory>\n\t\t4.2.4 从启服务，让刚才的配置生效\n\t\t    #service httpd restart\n\t\t4.2.5 #su - plj\n\t\t    #mkdir public_html\n\t\t\t#cd public_html\n\t\t\t#echo \"xxxxx\" > index.html\n\t\t\t#su - root\n\t\t\t#chmod o+rx  /home/plj\n\t\t4.2.6 测试\n\t\t    http://www.plj.com/~plj\n\t\t\t#elinks --dump http://www.plj.com/~plj\n\t\t\t\n   * 4.3 虚拟主机\n       4.3.1 基于域名的虚拟主机   通过主机名区分\n\t          1. 配置DNS\n\t\t\t     在DNS的正向区域文件里写A记录\n\t\t\t\t  www.plj.com.       IN  \tA \t\t192.168.2.51\n\t\t\t\t  bbs.plj.com.\t  \t IN\t\tA\t\t192.168.2.51\n\t\t\t  2. 编辑/etc/httpd/conf/httpd.conf,发布虚拟主机\n\t\t\t      <VirtualHost>\n\t\t\t\t      虚拟主机参数\n\t\t\t\t  </VirtualHost>\n\t\t\t   开启NameVirtualHost 192.168.0.10:80   //指定虚拟主机是基于域名的\n\t\t\t   \n\t\t\t    <VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName www.zyj.com\n\t\t\t\t\tDocumentRoot /www\n\t\t\t\t\tErrorLog logs/www.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/www.zyj.com-access_log \n\t\t\t\t</VirtualHost>\n\t\t\t\t<VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName bbs.zyj.com\n\t\t\t\t\tDocumentRoot /bbs\n\t\t\t\t\tErrorLog logs/bbs.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/bbs.zyj.com-access_log  common\n\t\t\t\t</VirtualHost>\n\t\t\t  3. 创建虚拟主机存放网页的目录，要与httpd.conf配置文件中的一致\n\t\t\t     #mkdir  /www\n\t\t\t\t #mkdir  /bbs\n\t\t\t\t #echo \"www\"  > /www/index.html\n\t\t\t\t #echo \"bbs\" > /bbs/index.html\n\t\t\t  4. 从启服务\n\t\t\t     #service httpd restart\n\t\t\t  5. 客户端测试\n\t\t\t    \n\t\t\t\t注：测试一直到欢迎页的原因  selinux\n\t\t\t\t  #setenforce 0  //关闭selinux\n\t\t\t\t  #getenforce    //查看\n\t\t\t\t  #vim /etc/sysconfig/selinux  //配置文件修改\n\t\t\t\t    \n\t   4.3.2 基于IP的虚拟主机     通过IP地址区分\n\t          1. 有两块网卡\n\t\t\t     #ifconfig eth0 \n\t\t\t  2. 编辑主配置文件httpd.conf\n\t\t\t     注释NameVirtualHost 192.168.0.10:80\n\t\t\t\t<VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName 192.168.0.100\n\t\t\t\t\tDocumentRoot /100\n\t\t\t\t\tErrorLog logs/100.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/100.zyj.com-access_log  common\n\t\t\t\t</VirtualHost>\n\t\t\t     \n\t   4.3.3 基于端口的虚拟主机   通过端口区分\n\t          1. 修改主配置文件，监听8080端口\n\t\t\t     Listen 8080\n\t\t\t\t <VirtualHost 192.168.0.10:8080>\n\t\t\t\t\tServerName  www.plj.com\n\t\t\t\t\tDocumentRoot /8080\n\t\t\t\t\tErrorLog logs/8080.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/8080.zyj.com-access_log\n\t\t\t\t</VirtualHost>\n   * 4.4 服务的访问控制\n\t\t  Order allow,deny  默认拒绝所有客户端访问\n\t\t  Allow from 192.168.2.168\n\t\t  allow from all\n\n\t\t  Order deny,allow  默认允许所有客户端访问\n\t\t  deny from 192.168.2.168\n\t\t  deny from all\n   * 4.5 用户认证\n        访问网站网页文件时需要提供用户名和密码 才可以访问。\n\t\thttp://www.plj.com:8080  /admin username password\n\t\tfile:///usr/share/doc/httpd-2.2.3/migration.html\n\t\t 4.5.1 修改主配置文件 httpd.conf\n\t\t\t<VirtualHost 192.168.0.10:8080>\n\t\t\t\t\tServerName  www.plj.com\n\t\t\t\t\tDocumentRoot /8080\n\t\t\t\t\tErrorLog logs/8080.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/8080.zyj.com-access_log \n\t\t\t\t\t<Directory \"/admin\">  //访问目录限制\n\t\t\t\t\t   Order allow,deny\n\t\t\t\t\t   allow from 192.168.2.51\n\t\t\t\t\t   AuthType  Basic   //指定认证类型，所有浏览器都支持\n\t\t\t\t\t   AuthName \"自己起名\"  //指定认证域的名称\n\t\t\t\t\t   AuthDBUserFile \"/var/www/***.txt\"   //指定保存认证用户名和密码文件存放位置\n\t\t\t\t\t   require  valid-user   //设置用户访问权限,valid-user:有效用户\n\t\t\t\t\t</Directory>\n\t\t\t</VirtualHost>\n\t\t\t\n\t\t\t4.5.2 创建用户认证文件\n\t\t\t     #rpm -qf /usr/bin/htpasswd\n\t\t\t\t #htpasswd -c /var/www/***.txt           admin    （回车输入密码）\n\t\t\t\t                保存密码和文件存放位置   用户名\n\t\t\t\t\t\t\t\t\n\t\t\t\t -c:第一次创建认证文件\n\t\t\t\t [root@localhost www]# htpasswd -D /www/user.txt admin1 //删除认证用户\n\t\t\t\t Deleting password for user admin1\n\t\t\t\t [root@localhost ~]# htpasswd -c /www/user.txt admin\n\t\t\t\t New password: \n\t\t\t\t Re-type new password: \n\t\t\t\t Adding password for user admin\n\t\t\t\t \n\t\t\t4.5.3 定义别名\n\t\t\t\tAlias /students \"/var/www/html/share/students\"\n\t\t\t\t<Directory \"/var/www/html/share/students/\">\n\t\t\t\t\tOptions Indexes MultiViews\n\t\t\t\t\tAllowOverride None\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Directory>\t\n           \n\t\t\t 4.5.4 给脚本目录起别名\n\t\t\t\tScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\"\n\t\t\t\t<Directory \"/var/www/cgi-bin\">\n\t\t\t\t\tAllowOverride None\n\t\t\t\t\tOptions None\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Directory>\n\n\n   ","source":"_posts/辅助DNS服务器搭建.md","raw":"---\ntitle: 辅助DNS服务器搭建\ntags:\n  - linux\noriginContent: ''\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 16:43:13\n---\n\n#### 1. 辅助DNS服务器搭建\n    用IP是192.168.2.168 作plj.com域的辅助DNS服务器\n\t * 1.1. rpm -ivh bind\n\t * 1.2. ping -c 4 192.168.2.51\n\t\t#iptables -F //清防火墙\n\t\t#setenforce 0\n\t * 1.3.从DNS服务器编辑自己的主配置文件\n\t\t#vim /var/named/chroot/etc/named.conf\n\t\toptions {\n\t\t   directory  \"/var/named/\";\n\t\t}\n\n\t\tzone \"plj.com\" {\n\t\t   type  slave;\n\t\t   file  \"slaves/plj.com.zone\"; //相对路径/var/named/saleve/数据库文件，数据库文件名可以自己给定\n\t\t   masters {192.168.2.51;}; //主DNS服务器IP\n\t\t}\n\n\t * 1.4.修改主DNS服务器配置文件，允许谁从我这边下载数据库文件。 named.conf\n\t\tzone \"plj.com\" {\n\t\t  type masters;\n\t\t  file \"plj.com.zone\";\n\t\t  allow-transfer{ 192.168.2.168;192.168.2.51;}; //用来指定辅助DNS的IP,谁做辅助DNS服务器\n\t\t}\n\n\t * 1.5.配置主数据库文件 /var/named/chroot/var/named/\n\t\tplj.com.   \t    IN   NS  dns.plj.com.\n\t\tdns.plj.com.    IN    A  192.168.2.51\n\t\tplj.com.        IN   NS slave1.plj.com.\n\t\tslave1.plj.com. IN    A 192.168.2.168\n\t\tplj.com.        IN   NS slave2.plj.com.\n\t\tslave1.plj.com. IN    A 192.168.2.50\n\n\t * 1.6.把辅助DNS主机的named服务开启\n\n\t * 1.7.客户端配置\n\t\t#vim /etc/resolv.conf\n\t\tnameserver 192.168.2.51\n\t\tnameserver 192.168.2.132\n\t  \n\t * 1.8.测试\n\t   51 service named stop\n\t   client  host www.plj.com\n\n#### 2. 事务签名\n     防止别的辅助DNS服务器下载主DNS服务器数据库文件\n    * 2.1 生成密钥\n\t   master dns\n\t   #dnssec-keygen -a hmac-md5 -b 512 -n host jing\n\t   -a:算法\n\t   -b:长度\n\t   -n:类型\n\t   名字\n\t   #cat Kjing.+157+45353.private >> /var/named/chroot/etc/named.conf  \n\n    * 2.2 制作密钥文件  vim /var/named/chroot/etc/named.conf \n\t    key \"rndckey\" {\n           algorithm hmac-md5;  //密钥算法\n           secret \"Y3lkWdmcSEaTWbicn1loDQ==\";  //key\n       };\n\t   \n    * 2.3 调用密钥文件 vim /var/named/chroot/etc/named.conf \n    \tzone \"zyj.com\" {\n\t\t\ttype master;\n\t\t\tfile \"zyj.com.zone\";\n\t\t\tallow-transfer{key rndckey;}; //调用密钥,密钥文件名与制作文件名相同\n\t\t};\n\t\t\n    * 2.4 配置辅助DNS配置文件 vim /var/named/chroot/etc/named.conf \n\t    zone \"zyj.com\" {\n           type  slave;\n           file  \"slaves/zyj.com.zone\";\n           masters {192.168.0.10 key rndckey;};   //密钥文件名与主密钥文件名相同\n\n\t\t};\n\n#### 3.分离解析\n     不同客户端访问相同主机名时，给出不同的解析结果\n\t view \"视图名称\"{\n\t    \n\t };\n\t \n\t 192.168.2.51  plj.com\n\t \n\t client 192.168.2.22   www.plj.com  192.168.2.200\n\t client 192.168.2.202  www.plj.com  192.168.2.210\n\t \n\t \n\t * 3.1 编辑主DNS的配置文件 vim /var/named/chroot/etc/named.conf\n\t  第一种写法：\n\t   view \"pc200\" {\n\t\t\tmatch-clients {192.168.0.200;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t\tview \"pc210\" {\n\t\t\tmatch-clients {any;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj3.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t\t第二种写法\n\t\tacl \"hosts1\" {192.168.0.18;};\n\t\tview \"pc200\" {\n\t\t\tmatch-clients { hosts1;};\n\t\t\tzone \"zyj.com\" {\n\t\t\t\ttype master;\n\t\t\t\tfile \"zyj.com.zone\";\n\t\t\t\tallow-transfer{key rndckey;};\n\t\t\t};\n\t\t};\n\t* 3.2 编辑主数据库文件 /var/named/chroot/var/named/zyj.com.zone\n         \twww             IN        A    192.168.0.200\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n#### 4.搭建网站服务器\n    用IP是192.168.2.51的主机作网站服务，并让客户端通过www.plj.com访问到网站的首页文件\n    \n   * 4.1 配置文件中常用的参数\n        /etc/httpd/  工作目录\n\t\thttpd.conf   主配置文件\n\t\t/conf/：自己的配置文件\n\t\t/conf.d/:联合自己其他服务的配置文件\n\t\t/logs/：日志文件 \n\t\t        access.log 访问日志\n\t\t\t\terror_log  错误日志\n\t\t/modules/:模块文件\n\t\t/run/:存放PID号\n\t\t\n\t\thttpd.conf配置参数：\n\t\t\tServerTokens OS :提供网站服务软件的版本\n\t\t\tServerRoot \"/etc/httpd\" :服务跟目录\n\t\t\tpidFile run/httpd.pid:服务的PID号文件\n\t\t\tTimeout 120：超时单位秒\n\t\t\tkeepAlive Off/On：是否开启长连接,一次建立连接可以访问多个页面\n\t\t\tMaxKeepAliveRequests 100:长连接的最大请求数\n\t\t\tKeepAliveTimeout 15:长连接的超时时间\n\t\t\t\n\t\t\t网站服务器运行方式：\n\t\t\t\t  进程方式：默认\n\t\t\t\t <IfModule prefork.c>\n\t\t\t\t\t StartServers       8   //开启进程数\n\t\t\t\t\t MinSpareServers    5   //最小空闲服务\n\t\t\t\t\t MaxSpareServers   20   //最大空闲服务\n\t\t\t\t\t ServerLimit      256   //每个进程能接受多少个并发请求\n\t\t\t\t\t MaxClients       256   //客户端最大请求连接数\n\t\t\t\t\t MaxRequestsPerChild  4000 //最大请求数，每个进程累计处理达到4000，自动杀死\n\t\t\t\t </IfModule>\n\t\t\t\n\t\t\t\t线程方式：\n\t\t\t\t <IfModule worker.c>\n\t\t\t\t\t StartServers         2\n\t\t\t\t\t MaxClients         150\n\t\t\t\t\t MinSpareThreads     25\n\t\t\t\t\t MaxSpareThreads     75\n\t\t\t\t\t ThreadsPerChild     25\n\t\t\t\t\t MaxRequestsPerChild  0\n\t\t\t\t </IfModule>\n\t\t    服务启动脚本：/etc/sysconfig/httpd\n\t\t    改动服务器运行方式：vim /etc/sysconfig/httpd\n\t\t\t \t HTTPD=/usr/sbin/httpd.worker\n           \n\t\t\t Listen 80:监听端口\n\t\t     记录服务名，端口号文件：/etc/services\n\t\t\t    注：#elinks --dump http://www.zyj.com //命令行测试域名主页\n\t\t\t LoadModule :加载模块\n\t\t\t Include conf.d/*.conf //包含文件\n\t\t\t User apache  :所有者\n\t\t\t Group apache ：所属组\n\t\t\t ServerAdmin root@localhost //管理员邮箱\n\t\t\t ServerName:指定网站服务器主机名\n\t\t\t DocumentRoot \"/var/www/html\":指定网页文件存放目录\n\n\t\t\t<Directory />  //网页文件夹目录/var/www/html\n\t\t\t     Options FollowSymLinks\n\t\t\t     AllowOverride None\n\t\t    </Directory>\n\t\t\t\n\t\t\t<Directory \"/var/www/html\"> \n\t\t         Options Indexes FollowSymLinks \n\t\t\t\t AllowOverride None\n\t\t\t\t Order allow,deny  //设置访问权限，默认是拒绝所有人访问\n\t\t\t\t Order deny,allow  //设置访问权限，默认是允许所有人访问\n\t\t\t\t Allow from 192.168.2.168 //只允许2.168访问\n\t\t         Allow from all  //所有客户端访问\n\t\t     </Directory>\n\t\t\t \n\t\t\t DirectoryIndex :指定网站首页文件名\n\t\t\t LogFormat:记录日志格式\n\t\t\t CustomLog:指定日志存放位置和格式\n\t\t\t Alias:目录别名\n\t\t\t \n\t\t\t \n   * 4.2 用户个人主页\n         访问web服务器上本地用户家目录下的网页文件。\n\t\t http://www.plj.com/~plj  //访问家目录 ~plj代表家目录 \n\t\t 4.2.1 添加本地用户  \n\t\t      #useradd 用户名\n\t\t 4.2.2 修改httpd.conf 开启用户个人主页功能\n\t\t      1.注释 #UserDir disable\n\t\t\t  2.开启 UserDir public_html //指定个人主页存放路径 /home/plj/public_html\n\t\t\t  \n\t\t4.2.3 开启访问权限\n\t\t\t<Directory /home/*/public_html>   //发布个人主页目录\n\t\t\t\t//可以在目录下执行什么样的文件类型\n\t\t\t\tAllowOverride FileInfo AuthConfig Limit\n\t\t\t\tOptions MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\n\t\t\t\t//设置访问网页文件的方式\n\t\t\t\t<Limit GET POST OPTIONS>   //上传文件使用方式\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Limit>\n\t\t\t\t<LimitExcept GET POST OPTIONS>  //除了这几种方式\n\t\t\t\t\tOrder deny,allow\n\t\t\t\t\tDeny from all\n\t\t\t\t</LimitExcept>\n\t\t\t</Directory>\n\t\t4.2.4 从启服务，让刚才的配置生效\n\t\t    #service httpd restart\n\t\t4.2.5 #su - plj\n\t\t    #mkdir public_html\n\t\t\t#cd public_html\n\t\t\t#echo \"xxxxx\" > index.html\n\t\t\t#su - root\n\t\t\t#chmod o+rx  /home/plj\n\t\t4.2.6 测试\n\t\t    http://www.plj.com/~plj\n\t\t\t#elinks --dump http://www.plj.com/~plj\n\t\t\t\n   * 4.3 虚拟主机\n       4.3.1 基于域名的虚拟主机   通过主机名区分\n\t          1. 配置DNS\n\t\t\t     在DNS的正向区域文件里写A记录\n\t\t\t\t  www.plj.com.       IN  \tA \t\t192.168.2.51\n\t\t\t\t  bbs.plj.com.\t  \t IN\t\tA\t\t192.168.2.51\n\t\t\t  2. 编辑/etc/httpd/conf/httpd.conf,发布虚拟主机\n\t\t\t      <VirtualHost>\n\t\t\t\t      虚拟主机参数\n\t\t\t\t  </VirtualHost>\n\t\t\t   开启NameVirtualHost 192.168.0.10:80   //指定虚拟主机是基于域名的\n\t\t\t   \n\t\t\t    <VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName www.zyj.com\n\t\t\t\t\tDocumentRoot /www\n\t\t\t\t\tErrorLog logs/www.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/www.zyj.com-access_log \n\t\t\t\t</VirtualHost>\n\t\t\t\t<VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName bbs.zyj.com\n\t\t\t\t\tDocumentRoot /bbs\n\t\t\t\t\tErrorLog logs/bbs.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/bbs.zyj.com-access_log  common\n\t\t\t\t</VirtualHost>\n\t\t\t  3. 创建虚拟主机存放网页的目录，要与httpd.conf配置文件中的一致\n\t\t\t     #mkdir  /www\n\t\t\t\t #mkdir  /bbs\n\t\t\t\t #echo \"www\"  > /www/index.html\n\t\t\t\t #echo \"bbs\" > /bbs/index.html\n\t\t\t  4. 从启服务\n\t\t\t     #service httpd restart\n\t\t\t  5. 客户端测试\n\t\t\t    \n\t\t\t\t注：测试一直到欢迎页的原因  selinux\n\t\t\t\t  #setenforce 0  //关闭selinux\n\t\t\t\t  #getenforce    //查看\n\t\t\t\t  #vim /etc/sysconfig/selinux  //配置文件修改\n\t\t\t\t    \n\t   4.3.2 基于IP的虚拟主机     通过IP地址区分\n\t          1. 有两块网卡\n\t\t\t     #ifconfig eth0 \n\t\t\t  2. 编辑主配置文件httpd.conf\n\t\t\t     注释NameVirtualHost 192.168.0.10:80\n\t\t\t\t<VirtualHost 192.168.0.10:80>\n\t\t\t\t\tServerName 192.168.0.100\n\t\t\t\t\tDocumentRoot /100\n\t\t\t\t\tErrorLog logs/100.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/100.zyj.com-access_log  common\n\t\t\t\t</VirtualHost>\n\t\t\t     \n\t   4.3.3 基于端口的虚拟主机   通过端口区分\n\t          1. 修改主配置文件，监听8080端口\n\t\t\t     Listen 8080\n\t\t\t\t <VirtualHost 192.168.0.10:8080>\n\t\t\t\t\tServerName  www.plj.com\n\t\t\t\t\tDocumentRoot /8080\n\t\t\t\t\tErrorLog logs/8080.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/8080.zyj.com-access_log\n\t\t\t\t</VirtualHost>\n   * 4.4 服务的访问控制\n\t\t  Order allow,deny  默认拒绝所有客户端访问\n\t\t  Allow from 192.168.2.168\n\t\t  allow from all\n\n\t\t  Order deny,allow  默认允许所有客户端访问\n\t\t  deny from 192.168.2.168\n\t\t  deny from all\n   * 4.5 用户认证\n        访问网站网页文件时需要提供用户名和密码 才可以访问。\n\t\thttp://www.plj.com:8080  /admin username password\n\t\tfile:///usr/share/doc/httpd-2.2.3/migration.html\n\t\t 4.5.1 修改主配置文件 httpd.conf\n\t\t\t<VirtualHost 192.168.0.10:8080>\n\t\t\t\t\tServerName  www.plj.com\n\t\t\t\t\tDocumentRoot /8080\n\t\t\t\t\tErrorLog logs/8080.zyj.com-error_log\n\t\t\t\t\tCustomLog logs/8080.zyj.com-access_log \n\t\t\t\t\t<Directory \"/admin\">  //访问目录限制\n\t\t\t\t\t   Order allow,deny\n\t\t\t\t\t   allow from 192.168.2.51\n\t\t\t\t\t   AuthType  Basic   //指定认证类型，所有浏览器都支持\n\t\t\t\t\t   AuthName \"自己起名\"  //指定认证域的名称\n\t\t\t\t\t   AuthDBUserFile \"/var/www/***.txt\"   //指定保存认证用户名和密码文件存放位置\n\t\t\t\t\t   require  valid-user   //设置用户访问权限,valid-user:有效用户\n\t\t\t\t\t</Directory>\n\t\t\t</VirtualHost>\n\t\t\t\n\t\t\t4.5.2 创建用户认证文件\n\t\t\t     #rpm -qf /usr/bin/htpasswd\n\t\t\t\t #htpasswd -c /var/www/***.txt           admin    （回车输入密码）\n\t\t\t\t                保存密码和文件存放位置   用户名\n\t\t\t\t\t\t\t\t\n\t\t\t\t -c:第一次创建认证文件\n\t\t\t\t [root@localhost www]# htpasswd -D /www/user.txt admin1 //删除认证用户\n\t\t\t\t Deleting password for user admin1\n\t\t\t\t [root@localhost ~]# htpasswd -c /www/user.txt admin\n\t\t\t\t New password: \n\t\t\t\t Re-type new password: \n\t\t\t\t Adding password for user admin\n\t\t\t\t \n\t\t\t4.5.3 定义别名\n\t\t\t\tAlias /students \"/var/www/html/share/students\"\n\t\t\t\t<Directory \"/var/www/html/share/students/\">\n\t\t\t\t\tOptions Indexes MultiViews\n\t\t\t\t\tAllowOverride None\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Directory>\t\n           \n\t\t\t 4.5.4 给脚本目录起别名\n\t\t\t\tScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\"\n\t\t\t\t<Directory \"/var/www/cgi-bin\">\n\t\t\t\t\tAllowOverride None\n\t\t\t\t\tOptions None\n\t\t\t\t\tOrder allow,deny\n\t\t\t\t\tAllow from all\n\t\t\t\t</Directory>\n\n\n   ","slug":"辅助DNS服务器搭建","published":1,"updated":"2018-12-18T08:00:18.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eu8002gyes63pyq53us","content":"<h4 id=\"1-辅助DNS服务器搭建\"><a href=\"#1-辅助DNS服务器搭建\" class=\"headerlink\" title=\"1. 辅助DNS服务器搭建\"></a>1. 辅助DNS服务器搭建</h4><pre><code>用IP是192.168.2.168 作plj.com域的辅助DNS服务器\n * 1.1. rpm -ivh bind\n * 1.2. ping -c 4 192.168.2.51\n    #iptables -F //清防火墙\n    #setenforce 0\n * 1.3.从DNS服务器编辑自己的主配置文件\n    #vim /var/named/chroot/etc/named.conf\n    options {\n       directory  &quot;/var/named/&quot;;\n    }\n\n    zone &quot;plj.com&quot; {\n       type  slave;\n       file  &quot;slaves/plj.com.zone&quot;; //相对路径/var/named/saleve/数据库文件，数据库文件名可以自己给定\n       masters {192.168.2.51;}; //主DNS服务器IP\n    }\n\n * 1.4.修改主DNS服务器配置文件，允许谁从我这边下载数据库文件。 named.conf\n    zone &quot;plj.com&quot; {\n      type masters;\n      file &quot;plj.com.zone&quot;;\n      allow-transfer{ 192.168.2.168;192.168.2.51;}; //用来指定辅助DNS的IP,谁做辅助DNS服务器\n    }\n\n * 1.5.配置主数据库文件 /var/named/chroot/var/named/\n    plj.com.           IN   NS  dns.plj.com.\n    dns.plj.com.    IN    A  192.168.2.51\n    plj.com.        IN   NS slave1.plj.com.\n    slave1.plj.com. IN    A 192.168.2.168\n    plj.com.        IN   NS slave2.plj.com.\n    slave1.plj.com. IN    A 192.168.2.50\n\n * 1.6.把辅助DNS主机的named服务开启\n\n * 1.7.客户端配置\n    #vim /etc/resolv.conf\n    nameserver 192.168.2.51\n    nameserver 192.168.2.132\n\n * 1.8.测试\n   51 service named stop\n   client  host www.plj.com\n</code></pre><h4 id=\"2-事务签名\"><a href=\"#2-事务签名\" class=\"headerlink\" title=\"2. 事务签名\"></a>2. 事务签名</h4><pre><code> 防止别的辅助DNS服务器下载主DNS服务器数据库文件\n* 2.1 生成密钥\n   master dns\n   #dnssec-keygen -a hmac-md5 -b 512 -n host jing\n   -a:算法\n   -b:长度\n   -n:类型\n   名字\n   #cat Kjing.+157+45353.private &gt;&gt; /var/named/chroot/etc/named.conf  \n\n* 2.2 制作密钥文件  vim /var/named/chroot/etc/named.conf \n    key &quot;rndckey&quot; {\n       algorithm hmac-md5;  //密钥算法\n       secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;  //key\n   };\n\n* 2.3 调用密钥文件 vim /var/named/chroot/etc/named.conf \n    zone &quot;zyj.com&quot; {\n        type master;\n        file &quot;zyj.com.zone&quot;;\n        allow-transfer{key rndckey;}; //调用密钥,密钥文件名与制作文件名相同\n    };\n\n* 2.4 配置辅助DNS配置文件 vim /var/named/chroot/etc/named.conf \n    zone &quot;zyj.com&quot; {\n       type  slave;\n       file  &quot;slaves/zyj.com.zone&quot;;\n       masters {192.168.0.10 key rndckey;};   //密钥文件名与主密钥文件名相同\n\n    };\n</code></pre><h4 id=\"3-分离解析\"><a href=\"#3-分离解析\" class=\"headerlink\" title=\"3.分离解析\"></a>3.分离解析</h4><pre><code> 不同客户端访问相同主机名时，给出不同的解析结果\n view &quot;视图名称&quot;{\n\n };\n\n 192.168.2.51  plj.com\n\n client 192.168.2.22   www.plj.com  192.168.2.200\n client 192.168.2.202  www.plj.com  192.168.2.210\n\n\n * 3.1 编辑主DNS的配置文件 vim /var/named/chroot/etc/named.conf\n  第一种写法：\n   view &quot;pc200&quot; {\n        match-clients {192.168.0.200;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n    view &quot;pc210&quot; {\n        match-clients {any;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj3.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n    第二种写法\n    acl &quot;hosts1&quot; {192.168.0.18;};\n    view &quot;pc200&quot; {\n        match-clients { hosts1;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n* 3.2 编辑主数据库文件 /var/named/chroot/var/named/zyj.com.zone\n         www             IN        A    192.168.0.200\n</code></pre><h4 id=\"4-搭建网站服务器\"><a href=\"#4-搭建网站服务器\" class=\"headerlink\" title=\"4.搭建网站服务器\"></a>4.搭建网站服务器</h4><pre><code>用IP是192.168.2.51的主机作网站服务，并让客户端通过www.plj.com访问到网站的首页文件\n</code></pre><ul>\n<li><p>4.1 配置文件中常用的参数<br>   /etc/httpd/  工作目录<br>   httpd.conf   主配置文件<br>   /conf/：自己的配置文件<br>   /conf.d/:联合自己其他服务的配置文件<br>   /logs/：日志文件 </p>\n<pre><code>access.log 访问日志\nerror_log  错误日志\n</code></pre><p>   /modules/:模块文件<br>   /run/:存放PID号</p>\n<p>   httpd.conf配置参数：</p>\n<pre><code>ServerTokens OS :提供网站服务软件的版本\nServerRoot &quot;/etc/httpd&quot; :服务跟目录\npidFile run/httpd.pid:服务的PID号文件\nTimeout 120：超时单位秒\nkeepAlive Off/On：是否开启长连接,一次建立连接可以访问多个页面\nMaxKeepAliveRequests 100:长连接的最大请求数\nKeepAliveTimeout 15:长连接的超时时间\n\n网站服务器运行方式：\n      进程方式：默认\n     &lt;IfModule prefork.c&gt;\n         StartServers       8   //开启进程数\n         MinSpareServers    5   //最小空闲服务\n         MaxSpareServers   20   //最大空闲服务\n         ServerLimit      256   //每个进程能接受多少个并发请求\n         MaxClients       256   //客户端最大请求连接数\n         MaxRequestsPerChild  4000 //最大请求数，每个进程累计处理达到4000，自动杀死\n     &lt;/IfModule&gt;\n\n    线程方式：\n     &lt;IfModule worker.c&gt;\n         StartServers         2\n         MaxClients         150\n         MinSpareThreads     25\n         MaxSpareThreads     75\n         ThreadsPerChild     25\n         MaxRequestsPerChild  0\n     &lt;/IfModule&gt;\n服务启动脚本：/etc/sysconfig/httpd\n改动服务器运行方式：vim /etc/sysconfig/httpd\n      HTTPD=/usr/sbin/httpd.worker\n\n Listen 80:监听端口\n 记录服务名，端口号文件：/etc/services\n    注：#elinks --dump http://www.zyj.com //命令行测试域名主页\n LoadModule :加载模块\n Include conf.d/*.conf //包含文件\n User apache  :所有者\n Group apache ：所属组\n ServerAdmin root@localhost //管理员邮箱\n ServerName:指定网站服务器主机名\n DocumentRoot &quot;/var/www/html&quot;:指定网页文件存放目录\n\n&lt;Directory /&gt;  //网页文件夹目录/var/www/html\n     Options FollowSymLinks\n     AllowOverride None\n&lt;/Directory&gt;\n\n&lt;Directory &quot;/var/www/html&quot;&gt; \n     Options Indexes FollowSymLinks \n     AllowOverride None\n     Order allow,deny  //设置访问权限，默认是拒绝所有人访问\n     Order deny,allow  //设置访问权限，默认是允许所有人访问\n     Allow from 192.168.2.168 //只允许2.168访问\n     Allow from all  //所有客户端访问\n &lt;/Directory&gt;\n\n DirectoryIndex :指定网站首页文件名\n LogFormat:记录日志格式\n CustomLog:指定日志存放位置和格式\n Alias:目录别名\n</code></pre></li>\n</ul>\n<ul>\n<li><p>4.2 用户个人主页</p>\n<pre><code>访问web服务器上本地用户家目录下的网页文件。\nhttp://www.plj.com/~plj  //访问家目录 ~plj代表家目录 \n4.2.1 添加本地用户  \n     #useradd 用户名\n4.2.2 修改httpd.conf 开启用户个人主页功能\n     1.注释 #UserDir disable\n     2.开启 UserDir public_html //指定个人主页存放路径 /home/plj/public_html\n</code></pre><p>   4.2.3 开启访问权限</p>\n<pre><code>&lt;Directory /home/*/public_html&gt;   //发布个人主页目录\n    //可以在目录下执行什么样的文件类型\n    AllowOverride FileInfo AuthConfig Limit\n    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\n    //设置访问网页文件的方式\n    &lt;Limit GET POST OPTIONS&gt;   //上传文件使用方式\n        Order allow,deny\n        Allow from all\n    &lt;/Limit&gt;\n    &lt;LimitExcept GET POST OPTIONS&gt;  //除了这几种方式\n        Order deny,allow\n        Deny from all\n    &lt;/LimitExcept&gt;\n&lt;/Directory&gt;\n</code></pre><p>   4.2.4 从启服务，让刚才的配置生效</p>\n<pre><code>#service httpd restart\n</code></pre><p>   4.2.5 #su - plj</p>\n<pre><code>#mkdir public_html\n#cd public_html\n#echo &quot;xxxxx&quot; &gt; index.html\n#su - root\n#chmod o+rx  /home/plj\n</code></pre><p>   4.2.6 测试</p>\n<pre><code>http://www.plj.com/~plj\n#elinks --dump http://www.plj.com/~plj\n</code></pre></li>\n<li><p>4.3 虚拟主机<br>  4.3.1 基于域名的虚拟主机   通过主机名区分</p>\n<pre><code>1. 配置DNS\n   在DNS的正向区域文件里写A记录\n    www.plj.com.       IN      A         192.168.2.51\n    bbs.plj.com.           IN        A        192.168.2.51\n2. 编辑/etc/httpd/conf/httpd.conf,发布虚拟主机\n    &lt;VirtualHost&gt;\n        虚拟主机参数\n    &lt;/VirtualHost&gt;\n 开启NameVirtualHost 192.168.0.10:80   //指定虚拟主机是基于域名的\n\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName www.zyj.com\n      DocumentRoot /www\n      ErrorLog logs/www.zyj.com-error_log\n      CustomLog logs/www.zyj.com-access_log \n  &lt;/VirtualHost&gt;\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName bbs.zyj.com\n      DocumentRoot /bbs\n      ErrorLog logs/bbs.zyj.com-error_log\n      CustomLog logs/bbs.zyj.com-access_log  common\n  &lt;/VirtualHost&gt;\n3. 创建虚拟主机存放网页的目录，要与httpd.conf配置文件中的一致\n   #mkdir  /www\n   #mkdir  /bbs\n   #echo &quot;www&quot;  &gt; /www/index.html\n   #echo &quot;bbs&quot; &gt; /bbs/index.html\n4. 从启服务\n   #service httpd restart\n5. 客户端测试\n\n  注：测试一直到欢迎页的原因  selinux\n    #setenforce 0  //关闭selinux\n    #getenforce    //查看\n    #vim /etc/sysconfig/selinux  //配置文件修改\n</code></pre><p>  4.3.2 基于IP的虚拟主机     通过IP地址区分</p>\n<pre><code>1. 有两块网卡\n   #ifconfig eth0 \n2. 编辑主配置文件httpd.conf\n   注释NameVirtualHost 192.168.0.10:80\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName 192.168.0.100\n      DocumentRoot /100\n      ErrorLog logs/100.zyj.com-error_log\n      CustomLog logs/100.zyj.com-access_log  common\n  &lt;/VirtualHost&gt;\n</code></pre><p>  4.3.3 基于端口的虚拟主机   通过端口区分</p>\n<pre><code>1. 修改主配置文件，监听8080端口\n   Listen 8080\n   &lt;VirtualHost 192.168.0.10:8080&gt;\n      ServerName  www.plj.com\n      DocumentRoot /8080\n      ErrorLog logs/8080.zyj.com-error_log\n      CustomLog logs/8080.zyj.com-access_log\n  &lt;/VirtualHost&gt;\n</code></pre></li>\n<li><p>4.4 服务的访问控制</p>\n<pre><code>Order allow,deny  默认拒绝所有客户端访问\nAllow from 192.168.2.168\nallow from all\n\nOrder deny,allow  默认允许所有客户端访问\ndeny from 192.168.2.168\ndeny from all\n</code></pre></li>\n<li><p>4.5 用户认证<br>   访问网站网页文件时需要提供用户名和密码 才可以访问。<br>   <a href=\"http://www.plj.com:8080\" target=\"_blank\" rel=\"noopener\">http://www.plj.com:8080</a>  /admin username password<br>   file:///usr/share/doc/httpd-2.2.3/migration.html</p>\n<pre><code>4.5.1 修改主配置文件 httpd.conf\n   &lt;VirtualHost 192.168.0.10:8080&gt;\n           ServerName  www.plj.com\n           DocumentRoot /8080\n           ErrorLog logs/8080.zyj.com-error_log\n           CustomLog logs/8080.zyj.com-access_log \n           &lt;Directory &quot;/admin&quot;&gt;  //访问目录限制\n              Order allow,deny\n              allow from 192.168.2.51\n              AuthType  Basic   //指定认证类型，所有浏览器都支持\n              AuthName &quot;自己起名&quot;  //指定认证域的名称\n              AuthDBUserFile &quot;/var/www/***.txt&quot;   //指定保存认证用户名和密码文件存放位置\n              require  valid-user   //设置用户访问权限,valid-user:有效用户\n           &lt;/Directory&gt;\n   &lt;/VirtualHost&gt;\n\n   4.5.2 创建用户认证文件\n        #rpm -qf /usr/bin/htpasswd\n        #htpasswd -c /var/www/***.txt           admin    （回车输入密码）\n                       保存密码和文件存放位置   用户名\n\n        -c:第一次创建认证文件\n        [root@localhost www]# htpasswd -D /www/user.txt admin1 //删除认证用户\n        Deleting password for user admin1\n        [root@localhost ~]# htpasswd -c /www/user.txt admin\n        New password: \n        Re-type new password: \n        Adding password for user admin\n\n   4.5.3 定义别名\n       Alias /students &quot;/var/www/html/share/students&quot;\n       &lt;Directory &quot;/var/www/html/share/students/&quot;&gt;\n           Options Indexes MultiViews\n           AllowOverride None\n           Order allow,deny\n           Allow from all\n       &lt;/Directory&gt;    \n\n    4.5.4 给脚本目录起别名\n       ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;\n       &lt;Directory &quot;/var/www/cgi-bin&quot;&gt;\n           AllowOverride None\n           Options None\n           Order allow,deny\n           Allow from all\n       &lt;/Directory&gt;\n</code></pre></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-辅助DNS服务器搭建\"><a href=\"#1-辅助DNS服务器搭建\" class=\"headerlink\" title=\"1. 辅助DNS服务器搭建\"></a>1. 辅助DNS服务器搭建</h4><pre><code>用IP是192.168.2.168 作plj.com域的辅助DNS服务器\n * 1.1. rpm -ivh bind\n * 1.2. ping -c 4 192.168.2.51\n    #iptables -F //清防火墙\n    #setenforce 0\n * 1.3.从DNS服务器编辑自己的主配置文件\n    #vim /var/named/chroot/etc/named.conf\n    options {\n       directory  &quot;/var/named/&quot;;\n    }\n\n    zone &quot;plj.com&quot; {\n       type  slave;\n       file  &quot;slaves/plj.com.zone&quot;; //相对路径/var/named/saleve/数据库文件，数据库文件名可以自己给定\n       masters {192.168.2.51;}; //主DNS服务器IP\n    }\n\n * 1.4.修改主DNS服务器配置文件，允许谁从我这边下载数据库文件。 named.conf\n    zone &quot;plj.com&quot; {\n      type masters;\n      file &quot;plj.com.zone&quot;;\n      allow-transfer{ 192.168.2.168;192.168.2.51;}; //用来指定辅助DNS的IP,谁做辅助DNS服务器\n    }\n\n * 1.5.配置主数据库文件 /var/named/chroot/var/named/\n    plj.com.           IN   NS  dns.plj.com.\n    dns.plj.com.    IN    A  192.168.2.51\n    plj.com.        IN   NS slave1.plj.com.\n    slave1.plj.com. IN    A 192.168.2.168\n    plj.com.        IN   NS slave2.plj.com.\n    slave1.plj.com. IN    A 192.168.2.50\n\n * 1.6.把辅助DNS主机的named服务开启\n\n * 1.7.客户端配置\n    #vim /etc/resolv.conf\n    nameserver 192.168.2.51\n    nameserver 192.168.2.132\n\n * 1.8.测试\n   51 service named stop\n   client  host www.plj.com\n</code></pre><h4 id=\"2-事务签名\"><a href=\"#2-事务签名\" class=\"headerlink\" title=\"2. 事务签名\"></a>2. 事务签名</h4><pre><code> 防止别的辅助DNS服务器下载主DNS服务器数据库文件\n* 2.1 生成密钥\n   master dns\n   #dnssec-keygen -a hmac-md5 -b 512 -n host jing\n   -a:算法\n   -b:长度\n   -n:类型\n   名字\n   #cat Kjing.+157+45353.private &gt;&gt; /var/named/chroot/etc/named.conf  \n\n* 2.2 制作密钥文件  vim /var/named/chroot/etc/named.conf \n    key &quot;rndckey&quot; {\n       algorithm hmac-md5;  //密钥算法\n       secret &quot;Y3lkWdmcSEaTWbicn1loDQ==&quot;;  //key\n   };\n\n* 2.3 调用密钥文件 vim /var/named/chroot/etc/named.conf \n    zone &quot;zyj.com&quot; {\n        type master;\n        file &quot;zyj.com.zone&quot;;\n        allow-transfer{key rndckey;}; //调用密钥,密钥文件名与制作文件名相同\n    };\n\n* 2.4 配置辅助DNS配置文件 vim /var/named/chroot/etc/named.conf \n    zone &quot;zyj.com&quot; {\n       type  slave;\n       file  &quot;slaves/zyj.com.zone&quot;;\n       masters {192.168.0.10 key rndckey;};   //密钥文件名与主密钥文件名相同\n\n    };\n</code></pre><h4 id=\"3-分离解析\"><a href=\"#3-分离解析\" class=\"headerlink\" title=\"3.分离解析\"></a>3.分离解析</h4><pre><code> 不同客户端访问相同主机名时，给出不同的解析结果\n view &quot;视图名称&quot;{\n\n };\n\n 192.168.2.51  plj.com\n\n client 192.168.2.22   www.plj.com  192.168.2.200\n client 192.168.2.202  www.plj.com  192.168.2.210\n\n\n * 3.1 编辑主DNS的配置文件 vim /var/named/chroot/etc/named.conf\n  第一种写法：\n   view &quot;pc200&quot; {\n        match-clients {192.168.0.200;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n    view &quot;pc210&quot; {\n        match-clients {any;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj3.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n    第二种写法\n    acl &quot;hosts1&quot; {192.168.0.18;};\n    view &quot;pc200&quot; {\n        match-clients { hosts1;};\n        zone &quot;zyj.com&quot; {\n            type master;\n            file &quot;zyj.com.zone&quot;;\n            allow-transfer{key rndckey;};\n        };\n    };\n* 3.2 编辑主数据库文件 /var/named/chroot/var/named/zyj.com.zone\n         www             IN        A    192.168.0.200\n</code></pre><h4 id=\"4-搭建网站服务器\"><a href=\"#4-搭建网站服务器\" class=\"headerlink\" title=\"4.搭建网站服务器\"></a>4.搭建网站服务器</h4><pre><code>用IP是192.168.2.51的主机作网站服务，并让客户端通过www.plj.com访问到网站的首页文件\n</code></pre><ul>\n<li><p>4.1 配置文件中常用的参数<br>   /etc/httpd/  工作目录<br>   httpd.conf   主配置文件<br>   /conf/：自己的配置文件<br>   /conf.d/:联合自己其他服务的配置文件<br>   /logs/：日志文件 </p>\n<pre><code>access.log 访问日志\nerror_log  错误日志\n</code></pre><p>   /modules/:模块文件<br>   /run/:存放PID号</p>\n<p>   httpd.conf配置参数：</p>\n<pre><code>ServerTokens OS :提供网站服务软件的版本\nServerRoot &quot;/etc/httpd&quot; :服务跟目录\npidFile run/httpd.pid:服务的PID号文件\nTimeout 120：超时单位秒\nkeepAlive Off/On：是否开启长连接,一次建立连接可以访问多个页面\nMaxKeepAliveRequests 100:长连接的最大请求数\nKeepAliveTimeout 15:长连接的超时时间\n\n网站服务器运行方式：\n      进程方式：默认\n     &lt;IfModule prefork.c&gt;\n         StartServers       8   //开启进程数\n         MinSpareServers    5   //最小空闲服务\n         MaxSpareServers   20   //最大空闲服务\n         ServerLimit      256   //每个进程能接受多少个并发请求\n         MaxClients       256   //客户端最大请求连接数\n         MaxRequestsPerChild  4000 //最大请求数，每个进程累计处理达到4000，自动杀死\n     &lt;/IfModule&gt;\n\n    线程方式：\n     &lt;IfModule worker.c&gt;\n         StartServers         2\n         MaxClients         150\n         MinSpareThreads     25\n         MaxSpareThreads     75\n         ThreadsPerChild     25\n         MaxRequestsPerChild  0\n     &lt;/IfModule&gt;\n服务启动脚本：/etc/sysconfig/httpd\n改动服务器运行方式：vim /etc/sysconfig/httpd\n      HTTPD=/usr/sbin/httpd.worker\n\n Listen 80:监听端口\n 记录服务名，端口号文件：/etc/services\n    注：#elinks --dump http://www.zyj.com //命令行测试域名主页\n LoadModule :加载模块\n Include conf.d/*.conf //包含文件\n User apache  :所有者\n Group apache ：所属组\n ServerAdmin root@localhost //管理员邮箱\n ServerName:指定网站服务器主机名\n DocumentRoot &quot;/var/www/html&quot;:指定网页文件存放目录\n\n&lt;Directory /&gt;  //网页文件夹目录/var/www/html\n     Options FollowSymLinks\n     AllowOverride None\n&lt;/Directory&gt;\n\n&lt;Directory &quot;/var/www/html&quot;&gt; \n     Options Indexes FollowSymLinks \n     AllowOverride None\n     Order allow,deny  //设置访问权限，默认是拒绝所有人访问\n     Order deny,allow  //设置访问权限，默认是允许所有人访问\n     Allow from 192.168.2.168 //只允许2.168访问\n     Allow from all  //所有客户端访问\n &lt;/Directory&gt;\n\n DirectoryIndex :指定网站首页文件名\n LogFormat:记录日志格式\n CustomLog:指定日志存放位置和格式\n Alias:目录别名\n</code></pre></li>\n</ul>\n<ul>\n<li><p>4.2 用户个人主页</p>\n<pre><code>访问web服务器上本地用户家目录下的网页文件。\nhttp://www.plj.com/~plj  //访问家目录 ~plj代表家目录 \n4.2.1 添加本地用户  \n     #useradd 用户名\n4.2.2 修改httpd.conf 开启用户个人主页功能\n     1.注释 #UserDir disable\n     2.开启 UserDir public_html //指定个人主页存放路径 /home/plj/public_html\n</code></pre><p>   4.2.3 开启访问权限</p>\n<pre><code>&lt;Directory /home/*/public_html&gt;   //发布个人主页目录\n    //可以在目录下执行什么样的文件类型\n    AllowOverride FileInfo AuthConfig Limit\n    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec\n    //设置访问网页文件的方式\n    &lt;Limit GET POST OPTIONS&gt;   //上传文件使用方式\n        Order allow,deny\n        Allow from all\n    &lt;/Limit&gt;\n    &lt;LimitExcept GET POST OPTIONS&gt;  //除了这几种方式\n        Order deny,allow\n        Deny from all\n    &lt;/LimitExcept&gt;\n&lt;/Directory&gt;\n</code></pre><p>   4.2.4 从启服务，让刚才的配置生效</p>\n<pre><code>#service httpd restart\n</code></pre><p>   4.2.5 #su - plj</p>\n<pre><code>#mkdir public_html\n#cd public_html\n#echo &quot;xxxxx&quot; &gt; index.html\n#su - root\n#chmod o+rx  /home/plj\n</code></pre><p>   4.2.6 测试</p>\n<pre><code>http://www.plj.com/~plj\n#elinks --dump http://www.plj.com/~plj\n</code></pre></li>\n<li><p>4.3 虚拟主机<br>  4.3.1 基于域名的虚拟主机   通过主机名区分</p>\n<pre><code>1. 配置DNS\n   在DNS的正向区域文件里写A记录\n    www.plj.com.       IN      A         192.168.2.51\n    bbs.plj.com.           IN        A        192.168.2.51\n2. 编辑/etc/httpd/conf/httpd.conf,发布虚拟主机\n    &lt;VirtualHost&gt;\n        虚拟主机参数\n    &lt;/VirtualHost&gt;\n 开启NameVirtualHost 192.168.0.10:80   //指定虚拟主机是基于域名的\n\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName www.zyj.com\n      DocumentRoot /www\n      ErrorLog logs/www.zyj.com-error_log\n      CustomLog logs/www.zyj.com-access_log \n  &lt;/VirtualHost&gt;\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName bbs.zyj.com\n      DocumentRoot /bbs\n      ErrorLog logs/bbs.zyj.com-error_log\n      CustomLog logs/bbs.zyj.com-access_log  common\n  &lt;/VirtualHost&gt;\n3. 创建虚拟主机存放网页的目录，要与httpd.conf配置文件中的一致\n   #mkdir  /www\n   #mkdir  /bbs\n   #echo &quot;www&quot;  &gt; /www/index.html\n   #echo &quot;bbs&quot; &gt; /bbs/index.html\n4. 从启服务\n   #service httpd restart\n5. 客户端测试\n\n  注：测试一直到欢迎页的原因  selinux\n    #setenforce 0  //关闭selinux\n    #getenforce    //查看\n    #vim /etc/sysconfig/selinux  //配置文件修改\n</code></pre><p>  4.3.2 基于IP的虚拟主机     通过IP地址区分</p>\n<pre><code>1. 有两块网卡\n   #ifconfig eth0 \n2. 编辑主配置文件httpd.conf\n   注释NameVirtualHost 192.168.0.10:80\n  &lt;VirtualHost 192.168.0.10:80&gt;\n      ServerName 192.168.0.100\n      DocumentRoot /100\n      ErrorLog logs/100.zyj.com-error_log\n      CustomLog logs/100.zyj.com-access_log  common\n  &lt;/VirtualHost&gt;\n</code></pre><p>  4.3.3 基于端口的虚拟主机   通过端口区分</p>\n<pre><code>1. 修改主配置文件，监听8080端口\n   Listen 8080\n   &lt;VirtualHost 192.168.0.10:8080&gt;\n      ServerName  www.plj.com\n      DocumentRoot /8080\n      ErrorLog logs/8080.zyj.com-error_log\n      CustomLog logs/8080.zyj.com-access_log\n  &lt;/VirtualHost&gt;\n</code></pre></li>\n<li><p>4.4 服务的访问控制</p>\n<pre><code>Order allow,deny  默认拒绝所有客户端访问\nAllow from 192.168.2.168\nallow from all\n\nOrder deny,allow  默认允许所有客户端访问\ndeny from 192.168.2.168\ndeny from all\n</code></pre></li>\n<li><p>4.5 用户认证<br>   访问网站网页文件时需要提供用户名和密码 才可以访问。<br>   <a href=\"http://www.plj.com:8080\" target=\"_blank\" rel=\"noopener\">http://www.plj.com:8080</a>  /admin username password<br>   file:///usr/share/doc/httpd-2.2.3/migration.html</p>\n<pre><code>4.5.1 修改主配置文件 httpd.conf\n   &lt;VirtualHost 192.168.0.10:8080&gt;\n           ServerName  www.plj.com\n           DocumentRoot /8080\n           ErrorLog logs/8080.zyj.com-error_log\n           CustomLog logs/8080.zyj.com-access_log \n           &lt;Directory &quot;/admin&quot;&gt;  //访问目录限制\n              Order allow,deny\n              allow from 192.168.2.51\n              AuthType  Basic   //指定认证类型，所有浏览器都支持\n              AuthName &quot;自己起名&quot;  //指定认证域的名称\n              AuthDBUserFile &quot;/var/www/***.txt&quot;   //指定保存认证用户名和密码文件存放位置\n              require  valid-user   //设置用户访问权限,valid-user:有效用户\n           &lt;/Directory&gt;\n   &lt;/VirtualHost&gt;\n\n   4.5.2 创建用户认证文件\n        #rpm -qf /usr/bin/htpasswd\n        #htpasswd -c /var/www/***.txt           admin    （回车输入密码）\n                       保存密码和文件存放位置   用户名\n\n        -c:第一次创建认证文件\n        [root@localhost www]# htpasswd -D /www/user.txt admin1 //删除认证用户\n        Deleting password for user admin1\n        [root@localhost ~]# htpasswd -c /www/user.txt admin\n        New password: \n        Re-type new password: \n        Adding password for user admin\n\n   4.5.3 定义别名\n       Alias /students &quot;/var/www/html/share/students&quot;\n       &lt;Directory &quot;/var/www/html/share/students/&quot;&gt;\n           Options Indexes MultiViews\n           AllowOverride None\n           Order allow,deny\n           Allow from all\n       &lt;/Directory&gt;    \n\n    4.5.4 给脚本目录起别名\n       ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;\n       &lt;Directory &quot;/var/www/cgi-bin&quot;&gt;\n           AllowOverride None\n           Options None\n           Order allow,deny\n           Allow from all\n       &lt;/Directory&gt;\n</code></pre></li>\n</ul>\n"},{"title":"linux用户管理","originContent":"#### 1.用户管理\n  1）添加\n  ```bash\n     #useradd/adduser [选项] 用户名\n       -g 指定用户的初始组\n       -G 指定用户的附加组\n       -d 指定用户的家目录\n       -c 设置用户的描述信息\n       -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells\n       -M 不添加家目录\n  ```\n     \n      #useradd test  不加选项时 按系统的默认配置添加帐号\n      有如下特性：\n       * 1.在/home目录下生成与用户同名的目录作为用户的家目录\n       * 2.uid,gid是系统内当前用户的最大uid,gid号+1\n       * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\n       * 4.会创建与用户同名的组作为用户的初始组\n     \n     注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \n       添加用户时当指定的初始组不存在，无法添加用户\n       添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\n  \n  2）修改\n    ```bash\n      #usermod [选项]  用户名\n      #passwd 用户名  //修改用户密码\n    ```\n\n  3）删除\n     ```bash\n      #userdel -r  用户名 \n      //删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。\n      注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组\n     ```\n\n  4）查看\n  \n    /etc/passwd:保存帐号信息文件\n    root  :    x     :     0      :  0  :     root   : /root : /bin/bash\n    用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\n    uid范围:0-65535\n    0   : root\n    1-99:系统帐号\n    100-499:服务帐号\n    500+:普通帐号uid范围\n     \n   shell:工具，命令解释器\n   查看shell:/etc/shells \n\n#### 2.用户组管理\n    ```bash\n      #groups //查看登录的用户属于哪些组，第一列为用户当前所在的组\n           [root@localhost ~]# groups\n            root bin daemon sys adm disk wheel\n  \n       #newgrp 组名  //切换组\n            [root@localhost ~]# groups\n            bin root  daemon sys adm disk wheel\n  \n       #exit //退回到上一个组\n\n       #groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息\n       #groups username:管理员查看指定用户的用户组信息\n       #newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组\n   ```\n\n      /etc/group: 保存用户组信息文件\n\n\n   ```bash   \n    [root@localhost ~]# head -1 /etc/group\n   ```\n\n  root    :       x        : 0 :     root\n  用户组名:用户组密码占位符:gid:用户组成员列表\n  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里\n\n#### 3.配置文件\n /etc/defualt/useradd :添加用户使用的默认配置文件\n /etc/skel\n:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录\n /var/spool/mail:邮件存放目录\n \n ```bash\n[root@localhost var]# cat -b /etc/default/useradd \n     1  # useradd defaults file\n     2  GROUP=100    ＃用户初始组\n     3  HOME=/home   ＃家目录\n     4  INACTIVE=-1  ＃密码有效期，-1永不过期\n     5  EXPIRE=      ＃帐号过期时间\n     6  SHELL=/bin/bash  //sheel\n     7  SKEL=/etc/skel  ＃初始化登录文件\n     8  CREATE_MAIL_SPOOL=yes  #默认建立一个邮件帐号\n\n\n[root@localhost ~]# grep -v \"^#\" /etc/login.defs | grep -v \"^$\"\n//添加用户默认密码配置\n\t1  MAIL_DIR        /var/spool/mail\n\t2  PASS_MAX_DAYS   99999  //密码最大有效天数\n\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数\n\t4  PASS_MIN_LEN    5      //密码最小长度\n\t5  PASS_WARN_AGE   7     //密码过期警告有效天数\n\t6  UID_MIN                   500  //uid最小值\n\t7  UID_MAX                 60000  //uid最大值\n\t8  GID_MIN                   500  //gid最小值\n\t9  GID_MAX                 60000  // gid最大值\n\t10 CREATE_HOME     yes        //建立用户时是否建家目录\n\t11 UMASK           077        //用户家目录权限\n\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除\n\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式\n```\n\n#### 4.修改用户密码\n ```bash\n #passwd   //更改当前登录的用户密码\n #passwd [选项] 用户名  //更改username的密码\n  -d : 清除用户密码\n  -l : 锁密码 \n  -u : 解锁密码\n  ```\n 密码存放文件:/etc/shadow\n\n ```bash\n [root@localhost ~]# grep \"root\" /etc/shadow\n ```\n    root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\n    用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\n```bash\n #chage [options] user  === #passwd [options] user\n   Options:\n  -d, --lastday LAST_DAY        set last password change to LAST_DAY\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\n  -h, --help                    display this help message and exit\n  -I, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --list                    show account aging information\n  -m, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\n                                change to MAX_DAYS\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n  ```\n 例: 1.强制用户首次登录时修改密码\n    ```bash\n     [root@localhost ~]# chage -d 0 test5\n     [root@localhost ~]# grep \"test5\" /etc/shadow\n     test5:$1$RgYHNFnU$fPIRey.h68qPM1jXVB9761:0:0:99999:7:::\n     ```\n\n  /etc/shadow :存放用户组密码文件\n  ```bash\n  [root@localhost ~]# grep \"test8\" /etc/gshadow\n  ```\n  test8    :     !      :              :\n  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         \n\n\n  #gpasswd 用户组名  //修改用户组密码\n  ```bash\n   [root@localhost ~]# gpasswd test8\n      Changing the password for group test8\n      New Password: \n      Re-enter new password: \n   [root@localhost ~]# grep \"test8\" /etc/gshadow\n     test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/::\n   [root@localhost ~]# gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的\n          -a:追加方式添加组成员,一次只能添加一个\n          -A:添加组管理员\n          -d:删除组成员\n  \n  [root@localhost ~]# gpasswd -A test1 test8  //往test8组中添加组管理员test1\n  [root@localhost ~]# grep \"^test\" /etc/gshadow\n   test:!::\n   test1:!::\n   test4:!::\n   test5:!::\n   test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test1:test1,test2,test3,test4\n  \n\n   [root@localhost ~]# gpasswd -A test test8   //非组成员添加为组管理员\n                                                ?怎么删除非组成员的管理员\n   [root@localhost ~]# grep \"^test\" /etc/gshadow\n    test:!::\n    test1:!::\n    test4:!::\n    test5:!::\n    test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test:test1,test2,test3,test4\n```\n    #groupdel 组名 //删除用户组 ,不能删除用户的主组\n   \n\n#### 5.修改文件夹的所有者和所属组\n```bash\n    #chown  所有者名字:所属组名字\n  [root@localhost ~]# chown test1:test5 /home/test/test.txt \n  [root@localhost ~]# ll /home/test/test.txt \n  -rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/test/test.txt\n   \n   [root@localhost ~]# chown test2 /home/test/test.txt  //单独修改所有者\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/test/test.txt\n\n   [root@localhost ~]# chown :teacher /home/test/test.txt   //单独修改所属组\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/test/test.txt\n\n   \n   #chgrp 所属组名 文件夹/文件 :改文件或目录的所属组\n   [root@localhost ~]# chgrp test1 /home/test/test.txt \n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/test/test.txt\n\n  ```","toc":true,"date":"2018-12-12T06:56:42.000Z","_content":"\n#### 1.用户管理\n  1）添加\n  ```bash\n     #useradd/adduser [选项] 用户名\n       -g 指定用户的初始组\n       -G 指定用户的附加组\n       -d 指定用户的家目录\n       -c 设置用户的描述信息\n       -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells\n       -M 不添加家目录\n  ```\n     \n      #useradd test  不加选项时 按系统的默认配置添加帐号\n      有如下特性：\n       * 1.在/home目录下生成与用户同名的目录作为用户的家目录\n       * 2.uid,gid是系统内当前用户的最大uid,gid号+1\n       * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\n       * 4.会创建与用户同名的组作为用户的初始组\n     \n     注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \n       添加用户时当指定的初始组不存在，无法添加用户\n       添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\n  \n  2）修改\n    ```bash\n      #usermod [选项]  用户名\n      #passwd 用户名  //修改用户密码\n    ```\n\n  3）删除\n     ```bash\n      #userdel -r  用户名 \n      //删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。\n      注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组\n     ```\n\n  4）查看\n  \n    /etc/passwd:保存帐号信息文件\n    root  :    x     :     0      :  0  :     root   : /root : /bin/bash\n    用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\n    uid范围:0-65535\n    0   : root\n    1-99:系统帐号\n    100-499:服务帐号\n    500+:普通帐号uid范围\n     \n   shell:工具，命令解释器\n   查看shell:/etc/shells \n\n#### 2.用户组管理\n    ```bash\n      #groups //查看登录的用户属于哪些组，第一列为用户当前所在的组\n           [root@localhost ~]# groups\n            root bin daemon sys adm disk wheel\n  \n       #newgrp 组名  //切换组\n            [root@localhost ~]# groups\n            bin root  daemon sys adm disk wheel\n  \n       #exit //退回到上一个组\n\n       #groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息\n       #groups username:管理员查看指定用户的用户组信息\n       #newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组\n\n      /etc/group: 保存用户组信息文件\n\n    [root@localhost ~]# head -1 /etc/group\n   ```\n\n  root    :       x        : 0 :     root\n  用户组名:用户组密码占位符:gid:用户组成员列表\n  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里\n\n#### 3.配置文件\n /etc/defualt/useradd :添加用户使用的默认配置文件\n /etc/skel\n:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录\n /var/spool/mail:邮件存放目录\n \n ```bash\n[root@localhost var]# cat -b /etc/default/useradd \n     1  # useradd defaults file\n     2  GROUP=100    ＃用户初始组\n     3  HOME=/home   ＃家目录\n     4  INACTIVE=-1  ＃密码有效期，-1永不过期\n     5  EXPIRE=      ＃帐号过期时间\n     6  SHELL=/bin/bash  //sheel\n     7  SKEL=/etc/skel  ＃初始化登录文件\n     8  CREATE_MAIL_SPOOL=yes  #默认建立一个邮件帐号\n\n\n[root@localhost ~]# grep -v \"^#\" /etc/login.defs | grep -v \"^$\"\n//添加用户默认密码配置\n\t1  MAIL_DIR        /var/spool/mail\n\t2  PASS_MAX_DAYS   99999  //密码最大有效天数\n\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数\n\t4  PASS_MIN_LEN    5      //密码最小长度\n\t5  PASS_WARN_AGE   7     //密码过期警告有效天数\n\t6  UID_MIN                   500  //uid最小值\n\t7  UID_MAX                 60000  //uid最大值\n\t8  GID_MIN                   500  //gid最小值\n\t9  GID_MAX                 60000  // gid最大值\n\t10 CREATE_HOME     yes        //建立用户时是否建家目录\n\t11 UMASK           077        //用户家目录权限\n\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除\n\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式\n```\n\n#### 4.修改用户密码\n ```bash\n #passwd   //更改当前登录的用户密码\n #passwd [选项] 用户名  //更改username的密码\n  -d : 清除用户密码\n  -l : 锁密码 \n  -u : 解锁密码\n  ```\n 密码存放文件:/etc/shadow\n\n ```bash\n [root@localhost ~]# grep \"root\" /etc/shadow\n ```\n    root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\n    用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\n```bash\n #chage [options] user  === #passwd [options] user\n   Options:\n  -d, --lastday LAST_DAY        set last password change to LAST_DAY\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\n  -h, --help                    display this help message and exit\n  -I, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --list                    show account aging information\n  -m, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\n                                change to MAX_DAYS\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n  ```\n 例: 1.强制用户首次登录时修改密码\n    ```bash\n     [root@localhost ~]# chage -d 0 test5\n     [root@localhost ~]# grep \"test5\" /etc/shadow\n     test5:$1$RgYHNFnU$fPIRey.h68qPM1jXVB9761:0:0:99999:7:::\n     ```\n\n  /etc/shadow :存放用户组密码文件\n  ```bash\n  [root@localhost ~]# grep \"test8\" /etc/gshadow\n  ```\n  test8    :     !      :              :\n  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         \n\n\n  #gpasswd 用户组名  //修改用户组密码\n  ```bash\n   [root@localhost ~]# gpasswd test8\n      Changing the password for group test8\n      New Password: \n      Re-enter new password: \n   [root@localhost ~]# grep \"test8\" /etc/gshadow\n     test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/::\n   [root@localhost ~]# gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的\n          -a:追加方式添加组成员,一次只能添加一个\n          -A:添加组管理员\n          -d:删除组成员\n  \n  [root@localhost ~]# gpasswd -A test1 test8  //往test8组中添加组管理员test1\n  [root@localhost ~]# grep \"^test\" /etc/gshadow\n   test:!::\n   test1:!::\n   test4:!::\n   test5:!::\n   test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test1:test1,test2,test3,test4\n  \n\n   [root@localhost ~]# gpasswd -A test test8   //非组成员添加为组管理员\n                                                ?怎么删除非组成员的管理员\n   [root@localhost ~]# grep \"^test\" /etc/gshadow\n    test:!::\n    test1:!::\n    test4:!::\n    test5:!::\n    test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test:test1,test2,test3,test4\n```\n    #groupdel 组名 //删除用户组 ,不能删除用户的主组\n   \n\n#### 5.修改文件夹的所有者和所属组\n```bash\n    #chown  所有者名字:所属组名字\n  [root@localhost ~]# chown test1:test5 /home/test/test.txt \n  [root@localhost ~]# ll /home/test/test.txt \n  -rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/test/test.txt\n   \n   [root@localhost ~]# chown test2 /home/test/test.txt  //单独修改所有者\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/test/test.txt\n\n   [root@localhost ~]# chown :teacher /home/test/test.txt   //单独修改所属组\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/test/test.txt\n\n   \n   #chgrp 所属组名 文件夹/文件 :改文件或目录的所属组\n   [root@localhost ~]# chgrp test1 /home/test/test.txt \n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/test/test.txt\n\n  ```","source":"_posts/linux用户管理.md","raw":"---\ntitle: linux用户管理\ntags:\n  - linux\noriginContent: \"#### 1.用户管理\\n  1）添加\\n  ```bash\\n     #useradd/adduser [选项] 用户名\\n       -g 指定用户的初始组\\n       -G 指定用户的附加组\\n       -d 指定用户的家目录\\n       -c 设置用户的描述信息\\n       -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells\\n       -M 不添加家目录\\n  ```\\n     \\n      #useradd test  不加选项时 按系统的默认配置添加帐号\\n      有如下特性：\\n       * 1.在/home目录下生成与用户同名的目录作为用户的家目录\\n       * 2.uid,gid是系统内当前用户的最大uid,gid号+1\\n       * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\\n       * 4.会创建与用户同名的组作为用户的初始组\\n     \\n     注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \\n       添加用户时当指定的初始组不存在，无法添加用户\\n       添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\\n  \\n  2）修改\\n    ```bash\\n      #usermod [选项]  用户名\\n      #passwd 用户名  //修改用户密码\\n    ```\\n\\n  3）删除\\n     ```bash\\n      #userdel -r  用户名 \\n      //删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。\\n      注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组\\n     ```\\n\\n  4）查看\\n  \\n    /etc/passwd:保存帐号信息文件\\n    root  :    x     :     0      :  0  :     root   : /root : /bin/bash\\n    用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\\n    uid范围:0-65535\\n    0   : root\\n    1-99:系统帐号\\n    100-499:服务帐号\\n    500+:普通帐号uid范围\\n     \\n   shell:工具，命令解释器\\n   查看shell:/etc/shells \\n\\n#### 2.用户组管理\\n    ```bash\\n      #groups //查看登录的用户属于哪些组，第一列为用户当前所在的组\\n           [root@localhost ~]# groups\\n            root bin daemon sys adm disk wheel\\n  \\n       #newgrp 组名  //切换组\\n            [root@localhost ~]# groups\\n            bin root  daemon sys adm disk wheel\\n  \\n       #exit //退回到上一个组\\n\\n       #groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息\\n       #groups username:管理员查看指定用户的用户组信息\\n       #newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组\\n   ```\\n\\n      /etc/group: 保存用户组信息文件\\n\\n\\n   ```bash   \\n    [root@localhost ~]# head -1 /etc/group\\n   ```\\n\\n  root    :       x        : 0 :     root\\n  用户组名:用户组密码占位符:gid:用户组成员列表\\n  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里\\n\\n#### 3.配置文件\\n /etc/defualt/useradd :添加用户使用的默认配置文件\\n /etc/skel\\n:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录\\n /var/spool/mail:邮件存放目录\\n \\n ```bash\\n[root@localhost var]# cat -b /etc/default/useradd \\n     1  # useradd defaults file\\n     2  GROUP=100    ＃用户初始组\\n     3  HOME=/home   ＃家目录\\n     4  INACTIVE=-1  ＃密码有效期，-1永不过期\\n     5  EXPIRE=      ＃帐号过期时间\\n     6  SHELL=/bin/bash  //sheel\\n     7  SKEL=/etc/skel  ＃初始化登录文件\\n     8  CREATE_MAIL_SPOOL=yes  #默认建立一个邮件帐号\\n\\n\\n[root@localhost ~]# grep -v \\\"^#\\\" /etc/login.defs | grep -v \\\"^$\\\"\\n//添加用户默认密码配置\\n\\t1  MAIL_DIR        /var/spool/mail\\n\\t2  PASS_MAX_DAYS   99999  //密码最大有效天数\\n\\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数\\n\\t4  PASS_MIN_LEN    5      //密码最小长度\\n\\t5  PASS_WARN_AGE   7     //密码过期警告有效天数\\n\\t6  UID_MIN                   500  //uid最小值\\n\\t7  UID_MAX                 60000  //uid最大值\\n\\t8  GID_MIN                   500  //gid最小值\\n\\t9  GID_MAX                 60000  // gid最大值\\n\\t10 CREATE_HOME     yes        //建立用户时是否建家目录\\n\\t11 UMASK           077        //用户家目录权限\\n\\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除\\n\\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式\\n```\\n\\n#### 4.修改用户密码\\n ```bash\\n #passwd   //更改当前登录的用户密码\\n #passwd [选项] 用户名  //更改username的密码\\n  -d : 清除用户密码\\n  -l : 锁密码 \\n  -u : 解锁密码\\n  ```\\n 密码存放文件:/etc/shadow\\n\\n ```bash\\n [root@localhost ~]# grep \\\"root\\\" /etc/shadow\\n ```\\n    root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\\n    用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\\n```bash\\n #chage [options] user  === #passwd [options] user\\n   Options:\\n  -d, --lastday LAST_DAY        set last password change to LAST_DAY\\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\\n  -h, --help                    display this help message and exit\\n  -I, --inactive INACTIVE       set password inactive after expiration\\n                                to INACTIVE\\n  -l, --list                    show account aging information\\n  -m, --mindays MIN_DAYS        set minimum number of days before password\\n                                change to MIN_DAYS\\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\\n                                change to MAX_DAYS\\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\\n  ```\\n 例: 1.强制用户首次登录时修改密码\\n    ```bash\\n     [root@localhost ~]# chage -d 0 test5\\n     [root@localhost ~]# grep \\\"test5\\\" /etc/shadow\\n     test5:$1$RgYHNFnU$fPIRey.h68qPM1jXVB9761:0:0:99999:7:::\\n     ```\\n\\n  /etc/shadow :存放用户组密码文件\\n  ```bash\\n  [root@localhost ~]# grep \\\"test8\\\" /etc/gshadow\\n  ```\\n  test8    :     !      :              :\\n  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         \\n\\n\\n  #gpasswd 用户组名  //修改用户组密码\\n  ```bash\\n   [root@localhost ~]# gpasswd test8\\n      Changing the password for group test8\\n      New Password: \\n      Re-enter new password: \\n   [root@localhost ~]# grep \\\"test8\\\" /etc/gshadow\\n     test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/::\\n   [root@localhost ~]# gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的\\n          -a:追加方式添加组成员,一次只能添加一个\\n          -A:添加组管理员\\n          -d:删除组成员\\n  \\n  [root@localhost ~]# gpasswd -A test1 test8  //往test8组中添加组管理员test1\\n  [root@localhost ~]# grep \\\"^test\\\" /etc/gshadow\\n   test:!::\\n   test1:!::\\n   test4:!::\\n   test5:!::\\n   test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test1:test1,test2,test3,test4\\n  \\n\\n   [root@localhost ~]# gpasswd -A test test8   //非组成员添加为组管理员\\n                                                ?怎么删除非组成员的管理员\\n   [root@localhost ~]# grep \\\"^test\\\" /etc/gshadow\\n    test:!::\\n    test1:!::\\n    test4:!::\\n    test5:!::\\n    test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test:test1,test2,test3,test4\\n```\\n    #groupdel 组名 //删除用户组 ,不能删除用户的主组\\n   \\n\\n#### 5.修改文件夹的所有者和所属组\\n```bash\\n    #chown  所有者名字:所属组名字\\n  [root@localhost ~]# chown test1:test5 /home/test/test.txt \\n  [root@localhost ~]# ll /home/test/test.txt \\n  -rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/test/test.txt\\n   \\n   [root@localhost ~]# chown test2 /home/test/test.txt  //单独修改所有者\\n   [root@localhost ~]# ll /home/test/test.txt \\n   -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/test/test.txt\\n\\n   [root@localhost ~]# chown :teacher /home/test/test.txt   //单独修改所属组\\n   [root@localhost ~]# ll /home/test/test.txt \\n   -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/test/test.txt\\n\\n   \\n   #chgrp 所属组名 文件夹/文件 :改文件或目录的所属组\\n   [root@localhost ~]# chgrp test1 /home/test/test.txt \\n   [root@localhost ~]# ll /home/test/test.txt \\n   -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/test/test.txt\\n\\n  ```\"\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 14:56:42\n---\n\n#### 1.用户管理\n  1）添加\n  ```bash\n     #useradd/adduser [选项] 用户名\n       -g 指定用户的初始组\n       -G 指定用户的附加组\n       -d 指定用户的家目录\n       -c 设置用户的描述信息\n       -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells\n       -M 不添加家目录\n  ```\n     \n      #useradd test  不加选项时 按系统的默认配置添加帐号\n      有如下特性：\n       * 1.在/home目录下生成与用户同名的目录作为用户的家目录\n       * 2.uid,gid是系统内当前用户的最大uid,gid号+1\n       * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\n       * 4.会创建与用户同名的组作为用户的初始组\n     \n     注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \n       添加用户时当指定的初始组不存在，无法添加用户\n       添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\n  \n  2）修改\n    ```bash\n      #usermod [选项]  用户名\n      #passwd 用户名  //修改用户密码\n    ```\n\n  3）删除\n     ```bash\n      #userdel -r  用户名 \n      //删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。\n      注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组\n     ```\n\n  4）查看\n  \n    /etc/passwd:保存帐号信息文件\n    root  :    x     :     0      :  0  :     root   : /root : /bin/bash\n    用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\n    uid范围:0-65535\n    0   : root\n    1-99:系统帐号\n    100-499:服务帐号\n    500+:普通帐号uid范围\n     \n   shell:工具，命令解释器\n   查看shell:/etc/shells \n\n#### 2.用户组管理\n    ```bash\n      #groups //查看登录的用户属于哪些组，第一列为用户当前所在的组\n           [root@localhost ~]# groups\n            root bin daemon sys adm disk wheel\n  \n       #newgrp 组名  //切换组\n            [root@localhost ~]# groups\n            bin root  daemon sys adm disk wheel\n  \n       #exit //退回到上一个组\n\n       #groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息\n       #groups username:管理员查看指定用户的用户组信息\n       #newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组\n\n      /etc/group: 保存用户组信息文件\n\n    [root@localhost ~]# head -1 /etc/group\n   ```\n\n  root    :       x        : 0 :     root\n  用户组名:用户组密码占位符:gid:用户组成员列表\n  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里\n\n#### 3.配置文件\n /etc/defualt/useradd :添加用户使用的默认配置文件\n /etc/skel\n:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录\n /var/spool/mail:邮件存放目录\n \n ```bash\n[root@localhost var]# cat -b /etc/default/useradd \n     1  # useradd defaults file\n     2  GROUP=100    ＃用户初始组\n     3  HOME=/home   ＃家目录\n     4  INACTIVE=-1  ＃密码有效期，-1永不过期\n     5  EXPIRE=      ＃帐号过期时间\n     6  SHELL=/bin/bash  //sheel\n     7  SKEL=/etc/skel  ＃初始化登录文件\n     8  CREATE_MAIL_SPOOL=yes  #默认建立一个邮件帐号\n\n\n[root@localhost ~]# grep -v \"^#\" /etc/login.defs | grep -v \"^$\"\n//添加用户默认密码配置\n\t1  MAIL_DIR        /var/spool/mail\n\t2  PASS_MAX_DAYS   99999  //密码最大有效天数\n\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数\n\t4  PASS_MIN_LEN    5      //密码最小长度\n\t5  PASS_WARN_AGE   7     //密码过期警告有效天数\n\t6  UID_MIN                   500  //uid最小值\n\t7  UID_MAX                 60000  //uid最大值\n\t8  GID_MIN                   500  //gid最小值\n\t9  GID_MAX                 60000  // gid最大值\n\t10 CREATE_HOME     yes        //建立用户时是否建家目录\n\t11 UMASK           077        //用户家目录权限\n\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除\n\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式\n```\n\n#### 4.修改用户密码\n ```bash\n #passwd   //更改当前登录的用户密码\n #passwd [选项] 用户名  //更改username的密码\n  -d : 清除用户密码\n  -l : 锁密码 \n  -u : 解锁密码\n  ```\n 密码存放文件:/etc/shadow\n\n ```bash\n [root@localhost ~]# grep \"root\" /etc/shadow\n ```\n    root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\n    用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\n```bash\n #chage [options] user  === #passwd [options] user\n   Options:\n  -d, --lastday LAST_DAY        set last password change to LAST_DAY\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\n  -h, --help                    display this help message and exit\n  -I, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --list                    show account aging information\n  -m, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\n                                change to MAX_DAYS\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n  ```\n 例: 1.强制用户首次登录时修改密码\n    ```bash\n     [root@localhost ~]# chage -d 0 test5\n     [root@localhost ~]# grep \"test5\" /etc/shadow\n     test5:$1$RgYHNFnU$fPIRey.h68qPM1jXVB9761:0:0:99999:7:::\n     ```\n\n  /etc/shadow :存放用户组密码文件\n  ```bash\n  [root@localhost ~]# grep \"test8\" /etc/gshadow\n  ```\n  test8    :     !      :              :\n  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         \n\n\n  #gpasswd 用户组名  //修改用户组密码\n  ```bash\n   [root@localhost ~]# gpasswd test8\n      Changing the password for group test8\n      New Password: \n      Re-enter new password: \n   [root@localhost ~]# grep \"test8\" /etc/gshadow\n     test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/::\n   [root@localhost ~]# gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的\n          -a:追加方式添加组成员,一次只能添加一个\n          -A:添加组管理员\n          -d:删除组成员\n  \n  [root@localhost ~]# gpasswd -A test1 test8  //往test8组中添加组管理员test1\n  [root@localhost ~]# grep \"^test\" /etc/gshadow\n   test:!::\n   test1:!::\n   test4:!::\n   test5:!::\n   test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test1:test1,test2,test3,test4\n  \n\n   [root@localhost ~]# gpasswd -A test test8   //非组成员添加为组管理员\n                                                ?怎么删除非组成员的管理员\n   [root@localhost ~]# grep \"^test\" /etc/gshadow\n    test:!::\n    test1:!::\n    test4:!::\n    test5:!::\n    test8:$1$x/4tD/bt$0l6vM3jnXqPGP0/xhS6cC/:test:test1,test2,test3,test4\n```\n    #groupdel 组名 //删除用户组 ,不能删除用户的主组\n   \n\n#### 5.修改文件夹的所有者和所属组\n```bash\n    #chown  所有者名字:所属组名字\n  [root@localhost ~]# chown test1:test5 /home/test/test.txt \n  [root@localhost ~]# ll /home/test/test.txt \n  -rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/test/test.txt\n   \n   [root@localhost ~]# chown test2 /home/test/test.txt  //单独修改所有者\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/test/test.txt\n\n   [root@localhost ~]# chown :teacher /home/test/test.txt   //单独修改所属组\n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/test/test.txt\n\n   \n   #chgrp 所属组名 文件夹/文件 :改文件或目录的所属组\n   [root@localhost ~]# chgrp test1 /home/test/test.txt \n   [root@localhost ~]# ll /home/test/test.txt \n   -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/test/test.txt\n\n  ```","slug":"linux用户管理","published":1,"updated":"2018-12-18T08:00:18.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3euq002nyes6hdlciltt","content":"<h4 id=\"1-用户管理\"><a href=\"#1-用户管理\" class=\"headerlink\" title=\"1.用户管理\"></a>1.用户管理</h4><p>  1）添加<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#useradd/adduser [选项] 用户名</span></span><br><span class=\"line\">  -g 指定用户的初始组</span><br><span class=\"line\">  -G 指定用户的附加组</span><br><span class=\"line\">  -d 指定用户的家目录</span><br><span class=\"line\">  -c 设置用户的描述信息</span><br><span class=\"line\">  -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells</span><br><span class=\"line\">  -M 不添加家目录</span><br></pre></td></tr></table></figure></p>\n<pre><code> #useradd test  不加选项时 按系统的默认配置添加帐号\n 有如下特性：\n  * 1.在/home目录下生成与用户同名的目录作为用户的家目录\n  * 2.uid,gid是系统内当前用户的最大uid,gid号+1\n  * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\n  * 4.会创建与用户同名的组作为用户的初始组\n\n注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \n  添加用户时当指定的初始组不存在，无法添加用户\n  添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\n</code></pre><p>  2）修改<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#usermod [选项]  用户名</span></span><br><span class=\"line\"><span class=\"comment\">#passwd 用户名  //修改用户密码</span></span><br></pre></td></tr></table></figure></p>\n<p>  3）删除<br>     <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#userdel -r  用户名 </span></span><br><span class=\"line\">//删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。</span><br><span class=\"line\">注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组</span><br></pre></td></tr></table></figure></p>\n<p>  4）查看</p>\n<pre><code>/etc/passwd:保存帐号信息文件\nroot  :    x     :     0      :  0  :     root   : /root : /bin/bash\n用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\nuid范围:0-65535\n0   : root\n1-99:系统帐号\n100-499:服务帐号\n500+:普通帐号uid范围\n</code></pre><p>   shell:工具，命令解释器<br>   查看shell:/etc/shells </p>\n<h4 id=\"2-用户组管理\"><a href=\"#2-用户组管理\" class=\"headerlink\" title=\"2.用户组管理\"></a>2.用户组管理</h4><pre><code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">#groups //查看登录的用户属于哪些组，第一列为用户当前所在的组</span></span><br><span class=\"line\">       [root@localhost ~]<span class=\"comment\"># groups</span></span><br><span class=\"line\">        root bin daemon sys adm disk wheel</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"comment\">#newgrp 组名  //切换组</span></span><br><span class=\"line\">        [root@localhost ~]<span class=\"comment\"># groups</span></span><br><span class=\"line\">        bin root  daemon sys adm disk wheel</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"comment\">#exit //退回到上一个组</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息</span></span><br><span class=\"line\">   <span class=\"comment\">#groups username:管理员查看指定用户的用户组信息</span></span><br><span class=\"line\">   <span class=\"comment\">#newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组</span></span><br><span class=\"line\"></span><br><span class=\"line\">  /etc/group: 保存用户组信息文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># head -1 /etc/group</span></span><br></pre></td></tr></table></figure>\n</code></pre><p>  root    :       x        : 0 :     root<br>  用户组名:用户组密码占位符:gid:用户组成员列表<br>  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里</p>\n<h4 id=\"3-配置文件\"><a href=\"#3-配置文件\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h4><p> /etc/defualt/useradd :添加用户使用的默认配置文件<br> /etc/skel<br>:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录<br> /var/spool/mail:邮件存放目录</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost var]<span class=\"comment\"># cat -b /etc/default/useradd </span></span><br><span class=\"line\">     1  <span class=\"comment\"># useradd defaults file</span></span><br><span class=\"line\">     2  GROUP=100    ＃用户初始组</span><br><span class=\"line\">     3  HOME=/home   ＃家目录</span><br><span class=\"line\">     4  INACTIVE=-1  ＃密码有效期，-1永不过期</span><br><span class=\"line\">     5  EXPIRE=      ＃帐号过期时间</span><br><span class=\"line\">     6  SHELL=/bin/bash  //sheel</span><br><span class=\"line\">     7  SKEL=/etc/skel  ＃初始化登录文件</span><br><span class=\"line\">     8  CREATE_MAIL_SPOOL=yes  <span class=\"comment\">#默认建立一个邮件帐号</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep -v \"^#\" /etc/login.defs | grep -v \"^$\"</span></span><br><span class=\"line\">//添加用户默认密码配置</span><br><span class=\"line\">\t1  MAIL_DIR        /var/spool/mail</span><br><span class=\"line\">\t2  PASS_MAX_DAYS   99999  //密码最大有效天数</span><br><span class=\"line\">\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数</span><br><span class=\"line\">\t4  PASS_MIN_LEN    5      //密码最小长度</span><br><span class=\"line\">\t5  PASS_WARN_AGE   7     //密码过期警告有效天数</span><br><span class=\"line\">\t6  UID_MIN                   500  //uid最小值</span><br><span class=\"line\">\t7  UID_MAX                 60000  //uid最大值</span><br><span class=\"line\">\t8  GID_MIN                   500  //gid最小值</span><br><span class=\"line\">\t9  GID_MAX                 60000  // gid最大值</span><br><span class=\"line\">\t10 CREATE_HOME     yes        //建立用户时是否建家目录</span><br><span class=\"line\">\t11 UMASK           077        //用户家目录权限</span><br><span class=\"line\">\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除</span><br><span class=\"line\">\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-修改用户密码\"><a href=\"#4-修改用户密码\" class=\"headerlink\" title=\"4.修改用户密码\"></a>4.修改用户密码</h4> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#passwd   //更改当前登录的用户密码</span></span><br><span class=\"line\"><span class=\"comment\">#passwd [选项] 用户名  //更改username的密码</span></span><br><span class=\"line\"> -d : 清除用户密码</span><br><span class=\"line\"> -l : 锁密码 </span><br><span class=\"line\"> -u : 解锁密码</span><br></pre></td></tr></table></figure>\n<p> 密码存放文件:/etc/shadow</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"root\" /etc/shadow</span></span><br></pre></td></tr></table></figure>\n<pre><code>root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\n用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chage [options] user  === #passwd [options] user</span></span><br><span class=\"line\">  Options:</span><br><span class=\"line\"> -d, --lastday LAST_DAY        <span class=\"built_in\">set</span> last password change to LAST_DAY</span><br><span class=\"line\"> -E, --expiredate EXPIRE_DATE  <span class=\"built_in\">set</span> account expiration date to EXPIRE_DATE</span><br><span class=\"line\"> -h, --<span class=\"built_in\">help</span>                    display this <span class=\"built_in\">help</span> message and <span class=\"built_in\">exit</span></span><br><span class=\"line\"> -I, --inactive INACTIVE       <span class=\"built_in\">set</span> password inactive after expiration</span><br><span class=\"line\">                               to INACTIVE</span><br><span class=\"line\"> -l, --list                    show account aging information</span><br><span class=\"line\"> -m, --mindays MIN_DAYS        <span class=\"built_in\">set</span> minimum number of days before password</span><br><span class=\"line\">                               change to MIN_DAYS</span><br><span class=\"line\"> -M, --maxdays MAX_DAYS        <span class=\"built_in\">set</span> maximim number of days before password</span><br><span class=\"line\">                               change to MAX_DAYS</span><br><span class=\"line\"> -W, --warndays WARN_DAYS      <span class=\"built_in\">set</span> expiration warning days to WARN_DAYS</span><br></pre></td></tr></table></figure>\n<p> 例: 1.强制用户首次登录时修改密码<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># chage -d 0 test5</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"test5\" /etc/shadow</span></span><br><span class=\"line\">test5:<span class=\"variable\">$1</span><span class=\"variable\">$RgYHNFnU</span><span class=\"variable\">$fPIRey</span>.h68qPM1jXVB9761:0:0:99999:7:::</span><br></pre></td></tr></table></figure></p>\n<p>  /etc/shadow :存放用户组密码文件<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"test8\" /etc/gshadow</span></span><br></pre></td></tr></table></figure></p>\n<p>  test8    :     !      :              :<br>  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         </p>\n<p>  #gpasswd 用户组名  //修改用户组密码<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd test8</span></span><br><span class=\"line\">    Changing the password <span class=\"keyword\">for</span> group test8</span><br><span class=\"line\">    New Password: </span><br><span class=\"line\">    Re-enter new password: </span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># grep \"test8\" /etc/gshadow</span></span><br><span class=\"line\">   test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/::</span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的</span></span><br><span class=\"line\">        -a:追加方式添加组成员,一次只能添加一个</span><br><span class=\"line\">        -A:添加组管理员</span><br><span class=\"line\">        -d:删除组成员</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># gpasswd -A test1 test8  //往test8组中添加组管理员test1</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"^test\" /etc/gshadow</span></span><br><span class=\"line\"> <span class=\"built_in\">test</span>:!::</span><br><span class=\"line\"> test1:!::</span><br><span class=\"line\"> test4:!::</span><br><span class=\"line\"> test5:!::</span><br><span class=\"line\"> test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/:test1:test1,test2,test3,test4</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd -A test test8   //非组成员添加为组管理员</span></span><br><span class=\"line\">                                              ?怎么删除非组成员的管理员</span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># grep \"^test\" /etc/gshadow</span></span><br><span class=\"line\">  <span class=\"built_in\">test</span>:!::</span><br><span class=\"line\">  test1:!::</span><br><span class=\"line\">  test4:!::</span><br><span class=\"line\">  test5:!::</span><br><span class=\"line\">  test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/:<span class=\"built_in\">test</span>:test1,test2,test3,test4</span><br></pre></td></tr></table></figure></p>\n<pre><code>#groupdel 组名 //删除用户组 ,不能删除用户的主组\n</code></pre><h4 id=\"5-修改文件夹的所有者和所属组\"><a href=\"#5-修改文件夹的所有者和所属组\" class=\"headerlink\" title=\"5.修改文件夹的所有者和所属组\"></a>5.修改文件夹的所有者和所属组</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">#chown  所有者名字:所属组名字</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># chown test1:test5 /home/test/test.txt </span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\">-rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"> </span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chown test2 /home/test/test.txt  //单独修改所有者</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chown :teacher /home/test/test.txt   //单独修改所属组</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">#chgrp 所属组名 文件夹/文件 :改文件或目录的所属组</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chgrp test1 /home/test/test.txt </span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-用户管理\"><a href=\"#1-用户管理\" class=\"headerlink\" title=\"1.用户管理\"></a>1.用户管理</h4><p>  1）添加<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#useradd/adduser [选项] 用户名</span></span><br><span class=\"line\">  -g 指定用户的初始组</span><br><span class=\"line\">  -G 指定用户的附加组</span><br><span class=\"line\">  -d 指定用户的家目录</span><br><span class=\"line\">  -c 设置用户的描述信息</span><br><span class=\"line\">  -s 指定用户使用的shell 默认是/bin/bash  查看shell:/etc/shells</span><br><span class=\"line\">  -M 不添加家目录</span><br></pre></td></tr></table></figure></p>\n<pre><code> #useradd test  不加选项时 按系统的默认配置添加帐号\n 有如下特性：\n  * 1.在/home目录下生成与用户同名的目录作为用户的家目录\n  * 2.uid,gid是系统内当前用户的最大uid,gid号+1\n  * 3.shell是 /bin/bash   /sbin/nologin:非交互式的shell\n  * 4.会创建与用户同名的组作为用户的初始组\n\n注:用户名不能重名，不能使用特殊字符或关键字，区分大小写，具有描述性       \n  添加用户时当指定的初始组不存在，无法添加用户\n  添加用户指定初始组时，不会在创建一个与用户同名的组，并且创建的组是初始组，用户成员列表不会显示\n</code></pre><p>  2）修改<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#usermod [选项]  用户名</span></span><br><span class=\"line\"><span class=\"comment\">#passwd 用户名  //修改用户密码</span></span><br></pre></td></tr></table></figure></p>\n<p>  3）删除<br>     <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#userdel -r  用户名 </span></span><br><span class=\"line\">//删除用户时把用户的家目录一起删除，不加-r则只删除用户，用户家目录还在。</span><br><span class=\"line\">注:如果用户初始组为空，删除用户时把初始组也删除，如果初始组非空，则不删除初始组</span><br></pre></td></tr></table></figure></p>\n<p>  4）查看</p>\n<pre><code>/etc/passwd:保存帐号信息文件\nroot  :    x     :     0      :  0  :     root   : /root : /bin/bash\n用户名:密码占位符:用户编号uid : gid :用户描述信息: 家目录: shell\nuid范围:0-65535\n0   : root\n1-99:系统帐号\n100-499:服务帐号\n500+:普通帐号uid范围\n</code></pre><p>   shell:工具，命令解释器<br>   查看shell:/etc/shells </p>\n<h4 id=\"2-用户组管理\"><a href=\"#2-用户组管理\" class=\"headerlink\" title=\"2.用户组管理\"></a>2.用户组管理</h4><pre><code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">#groups //查看登录的用户属于哪些组，第一列为用户当前所在的组</span></span><br><span class=\"line\">       [root@localhost ~]<span class=\"comment\"># groups</span></span><br><span class=\"line\">        root bin daemon sys adm disk wheel</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"comment\">#newgrp 组名  //切换组</span></span><br><span class=\"line\">        [root@localhost ~]<span class=\"comment\"># groups</span></span><br><span class=\"line\">        bin root  daemon sys adm disk wheel</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"comment\">#exit //退回到上一个组</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">#groups：查看用户组信息，单独使用时，是登录用户查看自己的用户信息</span></span><br><span class=\"line\">   <span class=\"comment\">#groups username:管理员查看指定用户的用户组信息</span></span><br><span class=\"line\">   <span class=\"comment\">#newgrp groupname:用户切换到指定的用户组里，用户exit退出当前所在的组</span></span><br><span class=\"line\"></span><br><span class=\"line\">  /etc/group: 保存用户组信息文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># head -1 /etc/group</span></span><br></pre></td></tr></table></figure>\n</code></pre><p>  root    :       x        : 0 :     root<br>  用户组名:用户组密码占位符:gid:用户组成员列表<br>  注：如果某一个组是用户的初始组，用户名不会显示在组成员列表里</p>\n<h4 id=\"3-配置文件\"><a href=\"#3-配置文件\" class=\"headerlink\" title=\"3.配置文件\"></a>3.配置文件</h4><p> /etc/defualt/useradd :添加用户使用的默认配置文件<br> /etc/skel<br>:保存用户登录初始化配置文件,每次新建用户时都会把当前目录下的文件复制到用户的家目录<br> /var/spool/mail:邮件存放目录</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost var]<span class=\"comment\"># cat -b /etc/default/useradd </span></span><br><span class=\"line\">     1  <span class=\"comment\"># useradd defaults file</span></span><br><span class=\"line\">     2  GROUP=100    ＃用户初始组</span><br><span class=\"line\">     3  HOME=/home   ＃家目录</span><br><span class=\"line\">     4  INACTIVE=-1  ＃密码有效期，-1永不过期</span><br><span class=\"line\">     5  EXPIRE=      ＃帐号过期时间</span><br><span class=\"line\">     6  SHELL=/bin/bash  //sheel</span><br><span class=\"line\">     7  SKEL=/etc/skel  ＃初始化登录文件</span><br><span class=\"line\">     8  CREATE_MAIL_SPOOL=yes  <span class=\"comment\">#默认建立一个邮件帐号</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep -v \"^#\" /etc/login.defs | grep -v \"^$\"</span></span><br><span class=\"line\">//添加用户默认密码配置</span><br><span class=\"line\">\t1  MAIL_DIR        /var/spool/mail</span><br><span class=\"line\">\t2  PASS_MAX_DAYS   99999  //密码最大有效天数</span><br><span class=\"line\">\t3  PASS_MIN_DAYS   0      //修改密码最小间隔天数</span><br><span class=\"line\">\t4  PASS_MIN_LEN    5      //密码最小长度</span><br><span class=\"line\">\t5  PASS_WARN_AGE   7     //密码过期警告有效天数</span><br><span class=\"line\">\t6  UID_MIN                   500  //uid最小值</span><br><span class=\"line\">\t7  UID_MAX                 60000  //uid最大值</span><br><span class=\"line\">\t8  GID_MIN                   500  //gid最小值</span><br><span class=\"line\">\t9  GID_MAX                 60000  // gid最大值</span><br><span class=\"line\">\t10 CREATE_HOME     yes        //建立用户时是否建家目录</span><br><span class=\"line\">\t11 UMASK           077        //用户家目录权限</span><br><span class=\"line\">\t12 USERGROUPS_ENAB yes        //删除用户时把初始组删除</span><br><span class=\"line\">\t13 MD5_CRYPT_ENAB yes         //用户密码的加密方式</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-修改用户密码\"><a href=\"#4-修改用户密码\" class=\"headerlink\" title=\"4.修改用户密码\"></a>4.修改用户密码</h4> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#passwd   //更改当前登录的用户密码</span></span><br><span class=\"line\"><span class=\"comment\">#passwd [选项] 用户名  //更改username的密码</span></span><br><span class=\"line\"> -d : 清除用户密码</span><br><span class=\"line\"> -l : 锁密码 </span><br><span class=\"line\"> -u : 解锁密码</span><br></pre></td></tr></table></figure>\n<p> 密码存放文件:/etc/shadow</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"root\" /etc/shadow</span></span><br></pre></td></tr></table></figure>\n<pre><code>root  :$1$0T9ZqyFK$W9HPAfeRqhjnKLi1gWgRv/:  15824(1970-01-01)  : 0 : 99999 : 7 : : :\n用户名:密码:最后一次修改密码日期:修改密码最小间隔时间:密码最大有效天数:密码过期前的警告天数:密码过期后的宽限时间:帐号的失效日期:保留位\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chage [options] user  === #passwd [options] user</span></span><br><span class=\"line\">  Options:</span><br><span class=\"line\"> -d, --lastday LAST_DAY        <span class=\"built_in\">set</span> last password change to LAST_DAY</span><br><span class=\"line\"> -E, --expiredate EXPIRE_DATE  <span class=\"built_in\">set</span> account expiration date to EXPIRE_DATE</span><br><span class=\"line\"> -h, --<span class=\"built_in\">help</span>                    display this <span class=\"built_in\">help</span> message and <span class=\"built_in\">exit</span></span><br><span class=\"line\"> -I, --inactive INACTIVE       <span class=\"built_in\">set</span> password inactive after expiration</span><br><span class=\"line\">                               to INACTIVE</span><br><span class=\"line\"> -l, --list                    show account aging information</span><br><span class=\"line\"> -m, --mindays MIN_DAYS        <span class=\"built_in\">set</span> minimum number of days before password</span><br><span class=\"line\">                               change to MIN_DAYS</span><br><span class=\"line\"> -M, --maxdays MAX_DAYS        <span class=\"built_in\">set</span> maximim number of days before password</span><br><span class=\"line\">                               change to MAX_DAYS</span><br><span class=\"line\"> -W, --warndays WARN_DAYS      <span class=\"built_in\">set</span> expiration warning days to WARN_DAYS</span><br></pre></td></tr></table></figure>\n<p> 例: 1.强制用户首次登录时修改密码<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># chage -d 0 test5</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"test5\" /etc/shadow</span></span><br><span class=\"line\">test5:<span class=\"variable\">$1</span><span class=\"variable\">$RgYHNFnU</span><span class=\"variable\">$fPIRey</span>.h68qPM1jXVB9761:0:0:99999:7:::</span><br></pre></td></tr></table></figure></p>\n<p>  /etc/shadow :存放用户组密码文件<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"test8\" /etc/gshadow</span></span><br></pre></td></tr></table></figure></p>\n<p>  test8    :     !      :              :<br>  用户组名 : 用户组密码 : 用户组管理员 : 组成员列表         </p>\n<p>  #gpasswd 用户组名  //修改用户组密码<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd test8</span></span><br><span class=\"line\">    Changing the password <span class=\"keyword\">for</span> group test8</span><br><span class=\"line\">    New Password: </span><br><span class=\"line\">    Re-enter new password: </span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># grep \"test8\" /etc/gshadow</span></span><br><span class=\"line\">   test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/::</span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd -M test1,test2 test8 //把test1,test2添加到test8组中，当前的用户覆盖之前的</span></span><br><span class=\"line\">        -a:追加方式添加组成员,一次只能添加一个</span><br><span class=\"line\">        -A:添加组管理员</span><br><span class=\"line\">        -d:删除组成员</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># gpasswd -A test1 test8  //往test8组中添加组管理员test1</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># grep \"^test\" /etc/gshadow</span></span><br><span class=\"line\"> <span class=\"built_in\">test</span>:!::</span><br><span class=\"line\"> test1:!::</span><br><span class=\"line\"> test4:!::</span><br><span class=\"line\"> test5:!::</span><br><span class=\"line\"> test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/:test1:test1,test2,test3,test4</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># gpasswd -A test test8   //非组成员添加为组管理员</span></span><br><span class=\"line\">                                              ?怎么删除非组成员的管理员</span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># grep \"^test\" /etc/gshadow</span></span><br><span class=\"line\">  <span class=\"built_in\">test</span>:!::</span><br><span class=\"line\">  test1:!::</span><br><span class=\"line\">  test4:!::</span><br><span class=\"line\">  test5:!::</span><br><span class=\"line\">  test8:<span class=\"variable\">$1</span><span class=\"variable\">$x</span>/4tD/bt<span class=\"variable\">$0l6vM3jnXqPGP0</span>/xhS6cC/:<span class=\"built_in\">test</span>:test1,test2,test3,test4</span><br></pre></td></tr></table></figure></p>\n<pre><code>#groupdel 组名 //删除用户组 ,不能删除用户的主组\n</code></pre><h4 id=\"5-修改文件夹的所有者和所属组\"><a href=\"#5-修改文件夹的所有者和所属组\" class=\"headerlink\" title=\"5.修改文件夹的所有者和所属组\"></a>5.修改文件夹的所有者和所属组</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">#chown  所有者名字:所属组名字</span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># chown test1:test5 /home/test/test.txt </span></span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\">-rw-rw-r-- 1 test1 test5 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"> </span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chown test2 /home/test/test.txt  //单独修改所有者</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 test5 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chown :teacher /home/test/test.txt   //单独修改所属组</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 teacher 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">#chgrp 所属组名 文件夹/文件 :改文件或目录的所属组</span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># chgrp test1 /home/test/test.txt </span></span><br><span class=\"line\"> [root@localhost ~]<span class=\"comment\"># ll /home/test/test.txt </span></span><br><span class=\"line\"> -rw-rw-r-- 1 test2 test1 0 May  5 15:48 /home/<span class=\"built_in\">test</span>/test.txt</span><br></pre></td></tr></table></figure>"},{"title":"文件权限","originContent":"#### 1.文件权限\n\n ##### 1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\n\n   ###### 1.1)查看文件的权限 #ll  /etc/passwd\n   ###### 1.2)查看目录的权限 #ll -d /root\n   ```bash\n   [root@localhost ~]# ll /etc/passwd\n   -rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd\n   权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名\n   [root@localhost ~]# ll -d /root\n   drwxr-x--- 36 root root 4096 May 11 09:51 /root\n  ```\n   权限列表 由10个字符组成 drwxr-x---\n   第一个字符:表示类型\n   -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备\n   后9个字符每3个字符为一组，共3组\n   第一组:文件或目录的所有者权限\n   第二组:文件或目录的所属组权限\n   第三组:文件或目录的其他用户的权限\n   \n   权限      字母    数字           文件                    目录\n    读        r       4          cat head tail more less    ls\n    写        w       2          vim                        touch rmdir rm mkdir\n    执行      x       1          运行文件                   cd\n    无        -       0          不能做任何操作             不能做任何操作\n\n   用户类型     表示\n    所有者      u          这个用户创建的这个文件或文件夹\n    所属组      g          用户创建的这个文件或文件夹时所在的用户组\n    其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里\n    所有用户    a          以上三类用户的总称\n\n  ###### 1.3)修改文件或文件夹权限\n   ```bash\n    #chmod [选项] 权限列表   文件名/目录名\n       -R:给文件夹设置递归权限\n  ```\n\n    权限列表：\n     数字: #chmod 700 /adir  //修改adir目录权限为700\n           #chmod drwx------ /adir\n     字母: #chmod u=rwx,g=rx,o=r /a.txt\n     \n     赋值符号:\n        =:指定用户拥有这样的权限\n        -:在源权限的基础上去掉指定的权限\n        +:在源权限的基础上加上指定的权限\n       注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n          b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n          c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n          d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n          e)普通权限对特权用户无效\n    -rwxr--r--\n    u    rwx   7\n    g    r--   4\n    o    r--   4\n\n   ```bash\n   [root@localhost test]# chmod u=rwx,g=rx,o=r test.txt \n   [root@localhost test]# ll\n   total 24\n   -rw-r--r-- 1 root root   55 May  5 00:14 test1.txt\n   -rw-r--r-- 1 root root  191 May  5 00:04 test2.txt\n   -rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt\n   ```\n   \n ##### 2)文件访问控制列表 facl \n    单独设置某个用户或用户组对某个文件或目录的rwx权限\n    对单一用户或用户组单独设置对某个目录或文件的rwx权限\n     \n    ```bash\n    #setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名\n     -m:设置acl权限\n     -x:去掉acl权限\n     -b:去掉目录或文件的所有acl权限\n     -R:递归设置目录 acl权限\n     -d:指定目录默认的acl权限\n     -k:去掉目录默认的acl权限\n     u:用户\n     g:用户组\n    #setfacl -m u:s5:rwx /public1\n    [root@localhost test]# ll -d ./public1\n    d---rwx---+ 2 root root 4096 May 11 14:10 ./public1\n    +:代表设置了facl权限\n    \n   #getfacl 文件名/目录名   //查看facl权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---     //普通权限\n    user:s5:rwx   //普通用户设置的权限\n    group::---    //所属组权限\n    mask::rwx     //默认acl权限\n    other::---    //这个目录的其他用户权限\n    \n   #setfacl -m  g:stu1:rwx ./public1\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   user:s5:rwx\n   group::---\n   group:stu1:r-x\n   mask::rwx\n   other::---\n\n    [root@localhost test]# setfacl -x u:s5 ./public1  //删除用户s5的权限\n    [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    group:stu2:r--\n    mask::r-x\n    other::---\n\n    [root@localhost test]# setfacl -x g:stu2 ./public1  //删除用户组stu2权限\n    [root@localhost test]# getfacl ./public1\n    # file: public1\n    # owner: root\n    # group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    mask::r-x\n    other::---\n\n   [root@localhost test]# setfacl -b ./public1  //去掉所有权限\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   group::---\n   other::---\n\n   [root@localhost test]#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    user:s5:rwx\n    group::---\n    mask::rwx\n    other::---\n\n   \n    [root@localhost test]# setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n    default:user::rwx\n    default:user:s7:rwx\n    default:group::---\n    default:mask::rwx\n    default:other::---\n\n    [root@localhost test]# setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限\n    setfacl: d:u:s7: No such file or directory\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n   ```\n\n mask \n   root : 755 644\n   user : 775 664\n   mask文件: /etc/profile\n  \n```bash\n   #setfacl -m m:rx /pub3 //设置acl的mask码\n   facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   \n\n   [root@localhost test]# setfacl -m m:r pub4\n   [root@localhost test]# getfacl pub4\n   #file: pub4\n   #owner: root\n   #group: root\n   user::rwx\n   user:s1:rwx                     #effective:r--\n   group::r-x                      #effective:r--\n   mask::r--\n   other::r-x\n```\n  \n ##### 3)特殊权限 SUID SGID SKICTY BIT\n    suid      : s  4\n      1)仅设置在二进制文件上(命令)\n      2)用户要对文件本身有执行权限\n      3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n        会拥有文件所有者的权限\n      4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n        SUID设置后是占用所有者的执行位显示\n    sgid      : s  2\n    skity bit : t  1\n    让用户在执行文件时拥有文件所有者的权限\n  ```bash\n   [root@localhost test]# umask\n   0022      //第一位为特殊权限位\n   [root@localhost test]# ll -d /tmp\n   drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp\n   [root@localhost test]# ll /usr/bin/passwd\n   -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd\n  ```  \n\n  ##### 4)特殊权限位\n   1)SUID\n    ```bash\n     #chmod 4751 /usr/sbin/useradd\n     #chmod u+s /usr/sbin/useradd\n     [root@localhost ~]# chmod 4751 /usr/sbin/useradd\n     [root@localhost ~]# ll /usr/sbin/useradd\n     -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n \n     //查找系统内加了SUID权限的二进制文件有那些\n     #find / -perm 4755 \n    \n    #chmod 751 /usr/sbin/useradd  //撤销特殊权限位\n    #chmod u-s /usr/sbin/useradd\n    [root@localhost ~]# chmod 751 /usr/sbin/useradd \n    [root@localhost ~]# ll /usr/sbin/useradd\n    -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n ```\n   2)SGID\n        既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用\n            文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s\n            显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的\n            所属组。\n   ```bash\n    #chmod g+s  /sgiddir/\n    #chmod g-s  /sgiddir/\n    [root@localhost test]# chmod g+s ./sgiddir/\n    [root@localhost test]# ll  -d ./sgiddir/\n    drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/\n    ```\n  3)skicty bit (防删除位)\n      1.只能设置在目录上\n      2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的\n        文件，但对root用户无效。\n      3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty\n      bit 权限用小t显示，反之用T显示。\n      4.不能移动，不能改名，可拷贝，可链接。\n      #chmod o+t /skdir\n      #chmod o-t /skdir\n       ```bash\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/\n      [root@localhost test]# chmod o+t skdir/\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ \n\n      #chmod 7755 /sdir\n      #chmod rwsr-sr-t /sdir //数字转换成字母\n      ```","toc":true,"date":"2018-12-12T07:45:10.000Z","_content":"\n#### 1.文件权限\n\n ##### 1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\n\n   ###### 1.1)查看文件的权限 #ll  /etc/passwd\n   ###### 1.2)查看目录的权限 #ll -d /root\n   ```bash\n   [root@localhost ~]# ll /etc/passwd\n   -rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd\n   权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名\n   [root@localhost ~]# ll -d /root\n   drwxr-x--- 36 root root 4096 May 11 09:51 /root\n  ```\n   权限列表 由10个字符组成 drwxr-x---\n   第一个字符:表示类型\n   -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备\n   后9个字符每3个字符为一组，共3组\n   第一组:文件或目录的所有者权限\n   第二组:文件或目录的所属组权限\n   第三组:文件或目录的其他用户的权限\n   \n   权限      字母    数字           文件                    目录\n    读        r       4          cat head tail more less    ls\n    写        w       2          vim                        touch rmdir rm mkdir\n    执行      x       1          运行文件                   cd\n    无        -       0          不能做任何操作             不能做任何操作\n\n   用户类型     表示\n    所有者      u          这个用户创建的这个文件或文件夹\n    所属组      g          用户创建的这个文件或文件夹时所在的用户组\n    其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里\n    所有用户    a          以上三类用户的总称\n\n  ###### 1.3)修改文件或文件夹权限\n   ```bash\n    #chmod [选项] 权限列表   文件名/目录名\n       -R:给文件夹设置递归权限\n  ```\n\n    权限列表：\n     数字: #chmod 700 /adir  //修改adir目录权限为700\n           #chmod drwx------ /adir\n     字母: #chmod u=rwx,g=rx,o=r /a.txt\n     \n     赋值符号:\n        =:指定用户拥有这样的权限\n        -:在源权限的基础上去掉指定的权限\n        +:在源权限的基础上加上指定的权限\n       注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n          b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n          c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n          d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n          e)普通权限对特权用户无效\n    -rwxr--r--\n    u    rwx   7\n    g    r--   4\n    o    r--   4\n\n   ```bash\n   [root@localhost test]# chmod u=rwx,g=rx,o=r test.txt \n   [root@localhost test]# ll\n   total 24\n   -rw-r--r-- 1 root root   55 May  5 00:14 test1.txt\n   -rw-r--r-- 1 root root  191 May  5 00:04 test2.txt\n   -rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt\n   ```\n   \n ##### 2)文件访问控制列表 facl \n    单独设置某个用户或用户组对某个文件或目录的rwx权限\n    对单一用户或用户组单独设置对某个目录或文件的rwx权限\n     \n    ```bash\n    #setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名\n     -m:设置acl权限\n     -x:去掉acl权限\n     -b:去掉目录或文件的所有acl权限\n     -R:递归设置目录 acl权限\n     -d:指定目录默认的acl权限\n     -k:去掉目录默认的acl权限\n     u:用户\n     g:用户组\n    #setfacl -m u:s5:rwx /public1\n    [root@localhost test]# ll -d ./public1\n    d---rwx---+ 2 root root 4096 May 11 14:10 ./public1\n    +:代表设置了facl权限\n    \n   #getfacl 文件名/目录名   //查看facl权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---     //普通权限\n    user:s5:rwx   //普通用户设置的权限\n    group::---    //所属组权限\n    mask::rwx     //默认acl权限\n    other::---    //这个目录的其他用户权限\n    \n   #setfacl -m  g:stu1:rwx ./public1\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   user:s5:rwx\n   group::---\n   group:stu1:r-x\n   mask::rwx\n   other::---\n\n    [root@localhost test]# setfacl -x u:s5 ./public1  //删除用户s5的权限\n    [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    group:stu2:r--\n    mask::r-x\n    other::---\n\n    [root@localhost test]# setfacl -x g:stu2 ./public1  //删除用户组stu2权限\n    [root@localhost test]# getfacl ./public1\n    # file: public1\n    # owner: root\n    # group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    mask::r-x\n    other::---\n\n   [root@localhost test]# setfacl -b ./public1  //去掉所有权限\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   group::---\n   other::---\n\n   [root@localhost test]#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    user:s5:rwx\n    group::---\n    mask::rwx\n    other::---\n\n   \n    [root@localhost test]# setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n    default:user::rwx\n    default:user:s7:rwx\n    default:group::---\n    default:mask::rwx\n    default:other::---\n\n    [root@localhost test]# setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限\n    setfacl: d:u:s7: No such file or directory\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n   ```\n\n mask \n   root : 755 644\n   user : 775 664\n   mask文件: /etc/profile\n  \n```bash\n   #setfacl -m m:rx /pub3 //设置acl的mask码\n   facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   \n\n   [root@localhost test]# setfacl -m m:r pub4\n   [root@localhost test]# getfacl pub4\n   #file: pub4\n   #owner: root\n   #group: root\n   user::rwx\n   user:s1:rwx                     #effective:r--\n   group::r-x                      #effective:r--\n   mask::r--\n   other::r-x\n```\n  \n ##### 3)特殊权限 SUID SGID SKICTY BIT\n    suid      : s  4\n      1)仅设置在二进制文件上(命令)\n      2)用户要对文件本身有执行权限\n      3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n        会拥有文件所有者的权限\n      4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n        SUID设置后是占用所有者的执行位显示\n    sgid      : s  2\n    skity bit : t  1\n    让用户在执行文件时拥有文件所有者的权限\n  ```bash\n   [root@localhost test]# umask\n   0022      //第一位为特殊权限位\n   [root@localhost test]# ll -d /tmp\n   drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp\n   [root@localhost test]# ll /usr/bin/passwd\n   -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd\n  ```  \n\n  ##### 4)特殊权限位\n   * 1)SUID\n    ```language\n     #chmod 4751 /usr/sbin/useradd\n     #chmod u+s /usr/sbin/useradd\n     [root@localhost ~]# chmod 4751 /usr/sbin/useradd\n     [root@localhost ~]# ll /usr/sbin/useradd\n     -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n     #find / -perm 4755   //查找系统内加了SUID权限的二进制文件有那些\n    #chmod 751 /usr/sbin/useradd  //撤销特殊权限位\n    #chmod u-s /usr/sbin/useradd\n    [root@localhost ~]# chmod 751 /usr/sbin/useradd \n    [root@localhost ~]# ll /usr/sbin/useradd\n    -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd \n ```\n```\n   * 2)SGID\n        既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用\n            文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s\n            显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的\n            所属组。\n\n ```language\n    #chmod g+s  /sgiddir/\n    #chmod g-s  /sgiddir/\n    [root@localhost test]# chmod g+s ./sgiddir/\n    [root@localhost test]# ll  -d ./sgiddir/\n    drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/\n```\n\n  * 3)skicty bit (防删除位)\n      1.只能设置在目录上\n      2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的\n        文件，但对root用户无效。\n      3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty\n      bit 权限用小t显示，反之用T显示。\n      4.不能移动，不能改名，可拷贝，可链接。\n      #chmod o+t /skdir\n      #chmod o-t /skdir\n\n       ```bash\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/\n      [root@localhost test]# chmod o+t skdir/\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ \n\n      #chmod 7755 /sdir\n      #chmod rwsr-sr-t /sdir //数字转换成字母\n      ```","source":"_posts/文件权限.md","raw":"---\ntitle: 文件权限\ntags:\n  - linux\noriginContent: |-\n  #### 1.文件权限\n\n   ##### 1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\n\n     ###### 1.1)查看文件的权限 #ll  /etc/passwd\n     ###### 1.2)查看目录的权限 #ll -d /root\n     ```bash\n     [root@localhost ~]# ll /etc/passwd\n     -rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd\n     权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名\n     [root@localhost ~]# ll -d /root\n     drwxr-x--- 36 root root 4096 May 11 09:51 /root\n    ```\n     权限列表 由10个字符组成 drwxr-x---\n     第一个字符:表示类型\n     -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备\n     后9个字符每3个字符为一组，共3组\n     第一组:文件或目录的所有者权限\n     第二组:文件或目录的所属组权限\n     第三组:文件或目录的其他用户的权限\n     \n     权限      字母    数字           文件                    目录\n      读        r       4          cat head tail more less    ls\n      写        w       2          vim                        touch rmdir rm mkdir\n      执行      x       1          运行文件                   cd\n      无        -       0          不能做任何操作             不能做任何操作\n\n     用户类型     表示\n      所有者      u          这个用户创建的这个文件或文件夹\n      所属组      g          用户创建的这个文件或文件夹时所在的用户组\n      其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里\n      所有用户    a          以上三类用户的总称\n\n    ###### 1.3)修改文件或文件夹权限\n     ```bash\n      #chmod [选项] 权限列表   文件名/目录名\n         -R:给文件夹设置递归权限\n    ```\n\n      权限列表：\n       数字: #chmod 700 /adir  //修改adir目录权限为700\n             #chmod drwx------ /adir\n       字母: #chmod u=rwx,g=rx,o=r /a.txt\n       \n       赋值符号:\n          =:指定用户拥有这样的权限\n          -:在源权限的基础上去掉指定的权限\n          +:在源权限的基础上加上指定的权限\n         注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n            b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n            c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n            d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n            e)普通权限对特权用户无效\n      -rwxr--r--\n      u    rwx   7\n      g    r--   4\n      o    r--   4\n\n     ```bash\n     [root@localhost test]# chmod u=rwx,g=rx,o=r test.txt \n     [root@localhost test]# ll\n     total 24\n     -rw-r--r-- 1 root root   55 May  5 00:14 test1.txt\n     -rw-r--r-- 1 root root  191 May  5 00:04 test2.txt\n     -rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt\n     ```\n     \n   ##### 2)文件访问控制列表 facl \n      单独设置某个用户或用户组对某个文件或目录的rwx权限\n      对单一用户或用户组单独设置对某个目录或文件的rwx权限\n       \n      ```bash\n      #setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名\n       -m:设置acl权限\n       -x:去掉acl权限\n       -b:去掉目录或文件的所有acl权限\n       -R:递归设置目录 acl权限\n       -d:指定目录默认的acl权限\n       -k:去掉目录默认的acl权限\n       u:用户\n       g:用户组\n      #setfacl -m u:s5:rwx /public1\n      [root@localhost test]# ll -d ./public1\n      d---rwx---+ 2 root root 4096 May 11 14:10 ./public1\n      +:代表设置了facl权限\n      \n     #getfacl 文件名/目录名   //查看facl权限\n     [root@localhost test]# getfacl ./public1\n      #file: public1\n      #owner: root\n      #group: root\n      user::---     //普通权限\n      user:s5:rwx   //普通用户设置的权限\n      group::---    //所属组权限\n      mask::rwx     //默认acl权限\n      other::---    //这个目录的其他用户权限\n      \n     #setfacl -m  g:stu1:rwx ./public1\n     [root@localhost test]# getfacl ./public1\n     #file: public1\n     #owner: root\n     #group: root\n     user::---\n     user:s5:rwx\n     group::---\n     group:stu1:r-x\n     mask::rwx\n     other::---\n\n      [root@localhost test]# setfacl -x u:s5 ./public1  //删除用户s5的权限\n      [root@localhost test]# getfacl ./public1\n      #file: public1\n      #owner: root\n      #group: root\n      user::---\n      group::---\n      group:stu1:r-x\n      group:stu2:r--\n      mask::r-x\n      other::---\n\n      [root@localhost test]# setfacl -x g:stu2 ./public1  //删除用户组stu2权限\n      [root@localhost test]# getfacl ./public1\n      # file: public1\n      # owner: root\n      # group: root\n      user::---\n      group::---\n      group:stu1:r-x\n      mask::r-x\n      other::---\n\n     [root@localhost test]# setfacl -b ./public1  //去掉所有权限\n     [root@localhost test]# getfacl ./public1\n     #file: public1\n     #owner: root\n     #group: root\n     user::---\n     group::---\n     other::---\n\n     [root@localhost test]#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限\n     [root@localhost test]# getfacl ./public1\n      #file: public1\n      #owner: root\n      #group: root\n      user::---\n      user:s5:rwx\n      group::---\n      mask::rwx\n      other::---\n\n     \n      [root@localhost test]# setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限\n      [root@localhost test]# getfacl ./pub2\n      #file: pub2\n      #owner: root\n      #group: root\n      user::rwx\n      group::---\n      other::---\n      default:user::rwx\n      default:user:s7:rwx\n      default:group::---\n      default:mask::rwx\n      default:other::---\n\n      [root@localhost test]# setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限\n      setfacl: d:u:s7: No such file or directory\n      [root@localhost test]# getfacl ./pub2\n      #file: pub2\n      #owner: root\n      #group: root\n      user::rwx\n      group::---\n      other::---\n     ```\n\n   mask \n     root : 755 644\n     user : 775 664\n     mask文件: /etc/profile\n    \n  ```bash\n     #setfacl -m m:rx /pub3 //设置acl的mask码\n     facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   \n\n     [root@localhost test]# setfacl -m m:r pub4\n     [root@localhost test]# getfacl pub4\n     #file: pub4\n     #owner: root\n     #group: root\n     user::rwx\n     user:s1:rwx                     #effective:r--\n     group::r-x                      #effective:r--\n     mask::r--\n     other::r-x\n  ```\n    \n   ##### 3)特殊权限 SUID SGID SKICTY BIT\n      suid      : s  4\n        1)仅设置在二进制文件上(命令)\n        2)用户要对文件本身有执行权限\n        3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n          会拥有文件所有者的权限\n        4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n          SUID设置后是占用所有者的执行位显示\n      sgid      : s  2\n      skity bit : t  1\n      让用户在执行文件时拥有文件所有者的权限\n    ```bash\n     [root@localhost test]# umask\n     0022      //第一位为特殊权限位\n     [root@localhost test]# ll -d /tmp\n     drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp\n     [root@localhost test]# ll /usr/bin/passwd\n     -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd\n    ```  \n\n    ##### 4)特殊权限位\n     1)SUID\n      ```bash\n       #chmod 4751 /usr/sbin/useradd\n       #chmod u+s /usr/sbin/useradd\n       [root@localhost ~]# chmod 4751 /usr/sbin/useradd\n       [root@localhost ~]# ll /usr/sbin/useradd\n       -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n   \n       //查找系统内加了SUID权限的二进制文件有那些\n       #find / -perm 4755 \n      \n      #chmod 751 /usr/sbin/useradd  //撤销特殊权限位\n      #chmod u-s /usr/sbin/useradd\n      [root@localhost ~]# chmod 751 /usr/sbin/useradd \n      [root@localhost ~]# ll /usr/sbin/useradd\n      -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n   ```\n     2)SGID\n          既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用\n              文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s\n              显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的\n              所属组。\n     ```bash\n      #chmod g+s  /sgiddir/\n      #chmod g-s  /sgiddir/\n      [root@localhost test]# chmod g+s ./sgiddir/\n      [root@localhost test]# ll  -d ./sgiddir/\n      drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/\n      ```\n    3)skicty bit (防删除位)\n        1.只能设置在目录上\n        2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的\n          文件，但对root用户无效。\n        3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty\n        bit 权限用小t显示，反之用T显示。\n        4.不能移动，不能改名，可拷贝，可链接。\n        #chmod o+t /skdir\n        #chmod o-t /skdir\n         ```bash\n        [root@localhost test]# ll -d skdir/\n        drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/\n        [root@localhost test]# chmod o+t skdir/\n        [root@localhost test]# ll -d skdir/\n        drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ \n\n        #chmod 7755 /sdir\n        #chmod rwsr-sr-t /sdir //数字转换成字母\n        ```\ncategories:\n  - linux\ntoc: true\ndate: 2018-12-12 15:45:10\n---\n\n#### 1.文件权限\n\n ##### 1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\n\n   ###### 1.1)查看文件的权限 #ll  /etc/passwd\n   ###### 1.2)查看目录的权限 #ll -d /root\n   ```bash\n   [root@localhost ~]# ll /etc/passwd\n   -rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd\n   权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名\n   [root@localhost ~]# ll -d /root\n   drwxr-x--- 36 root root 4096 May 11 09:51 /root\n  ```\n   权限列表 由10个字符组成 drwxr-x---\n   第一个字符:表示类型\n   -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备\n   后9个字符每3个字符为一组，共3组\n   第一组:文件或目录的所有者权限\n   第二组:文件或目录的所属组权限\n   第三组:文件或目录的其他用户的权限\n   \n   权限      字母    数字           文件                    目录\n    读        r       4          cat head tail more less    ls\n    写        w       2          vim                        touch rmdir rm mkdir\n    执行      x       1          运行文件                   cd\n    无        -       0          不能做任何操作             不能做任何操作\n\n   用户类型     表示\n    所有者      u          这个用户创建的这个文件或文件夹\n    所属组      g          用户创建的这个文件或文件夹时所在的用户组\n    其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里\n    所有用户    a          以上三类用户的总称\n\n  ###### 1.3)修改文件或文件夹权限\n   ```bash\n    #chmod [选项] 权限列表   文件名/目录名\n       -R:给文件夹设置递归权限\n  ```\n\n    权限列表：\n     数字: #chmod 700 /adir  //修改adir目录权限为700\n           #chmod drwx------ /adir\n     字母: #chmod u=rwx,g=rx,o=r /a.txt\n     \n     赋值符号:\n        =:指定用户拥有这样的权限\n        -:在源权限的基础上去掉指定的权限\n        +:在源权限的基础上加上指定的权限\n       注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n          b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n          c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n          d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n          e)普通权限对特权用户无效\n    -rwxr--r--\n    u    rwx   7\n    g    r--   4\n    o    r--   4\n\n   ```bash\n   [root@localhost test]# chmod u=rwx,g=rx,o=r test.txt \n   [root@localhost test]# ll\n   total 24\n   -rw-r--r-- 1 root root   55 May  5 00:14 test1.txt\n   -rw-r--r-- 1 root root  191 May  5 00:04 test2.txt\n   -rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt\n   ```\n   \n ##### 2)文件访问控制列表 facl \n    单独设置某个用户或用户组对某个文件或目录的rwx权限\n    对单一用户或用户组单独设置对某个目录或文件的rwx权限\n     \n    ```bash\n    #setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名\n     -m:设置acl权限\n     -x:去掉acl权限\n     -b:去掉目录或文件的所有acl权限\n     -R:递归设置目录 acl权限\n     -d:指定目录默认的acl权限\n     -k:去掉目录默认的acl权限\n     u:用户\n     g:用户组\n    #setfacl -m u:s5:rwx /public1\n    [root@localhost test]# ll -d ./public1\n    d---rwx---+ 2 root root 4096 May 11 14:10 ./public1\n    +:代表设置了facl权限\n    \n   #getfacl 文件名/目录名   //查看facl权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---     //普通权限\n    user:s5:rwx   //普通用户设置的权限\n    group::---    //所属组权限\n    mask::rwx     //默认acl权限\n    other::---    //这个目录的其他用户权限\n    \n   #setfacl -m  g:stu1:rwx ./public1\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   user:s5:rwx\n   group::---\n   group:stu1:r-x\n   mask::rwx\n   other::---\n\n    [root@localhost test]# setfacl -x u:s5 ./public1  //删除用户s5的权限\n    [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    group:stu2:r--\n    mask::r-x\n    other::---\n\n    [root@localhost test]# setfacl -x g:stu2 ./public1  //删除用户组stu2权限\n    [root@localhost test]# getfacl ./public1\n    # file: public1\n    # owner: root\n    # group: root\n    user::---\n    group::---\n    group:stu1:r-x\n    mask::r-x\n    other::---\n\n   [root@localhost test]# setfacl -b ./public1  //去掉所有权限\n   [root@localhost test]# getfacl ./public1\n   #file: public1\n   #owner: root\n   #group: root\n   user::---\n   group::---\n   other::---\n\n   [root@localhost test]#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限\n   [root@localhost test]# getfacl ./public1\n    #file: public1\n    #owner: root\n    #group: root\n    user::---\n    user:s5:rwx\n    group::---\n    mask::rwx\n    other::---\n\n   \n    [root@localhost test]# setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n    default:user::rwx\n    default:user:s7:rwx\n    default:group::---\n    default:mask::rwx\n    default:other::---\n\n    [root@localhost test]# setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限\n    setfacl: d:u:s7: No such file or directory\n    [root@localhost test]# getfacl ./pub2\n    #file: pub2\n    #owner: root\n    #group: root\n    user::rwx\n    group::---\n    other::---\n   ```\n\n mask \n   root : 755 644\n   user : 775 664\n   mask文件: /etc/profile\n  \n```bash\n   #setfacl -m m:rx /pub3 //设置acl的mask码\n   facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   \n\n   [root@localhost test]# setfacl -m m:r pub4\n   [root@localhost test]# getfacl pub4\n   #file: pub4\n   #owner: root\n   #group: root\n   user::rwx\n   user:s1:rwx                     #effective:r--\n   group::r-x                      #effective:r--\n   mask::r--\n   other::r-x\n```\n  \n ##### 3)特殊权限 SUID SGID SKICTY BIT\n    suid      : s  4\n      1)仅设置在二进制文件上(命令)\n      2)用户要对文件本身有执行权限\n      3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n        会拥有文件所有者的权限\n      4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n        SUID设置后是占用所有者的执行位显示\n    sgid      : s  2\n    skity bit : t  1\n    让用户在执行文件时拥有文件所有者的权限\n  ```bash\n   [root@localhost test]# umask\n   0022      //第一位为特殊权限位\n   [root@localhost test]# ll -d /tmp\n   drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp\n   [root@localhost test]# ll /usr/bin/passwd\n   -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd\n  ```  \n\n  ##### 4)特殊权限位\n   * 1)SUID\n    ```language\n     #chmod 4751 /usr/sbin/useradd\n     #chmod u+s /usr/sbin/useradd\n     [root@localhost ~]# chmod 4751 /usr/sbin/useradd\n     [root@localhost ~]# ll /usr/sbin/useradd\n     -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd\n     #find / -perm 4755   //查找系统内加了SUID权限的二进制文件有那些\n    #chmod 751 /usr/sbin/useradd  //撤销特殊权限位\n    #chmod u-s /usr/sbin/useradd\n    [root@localhost ~]# chmod 751 /usr/sbin/useradd \n    [root@localhost ~]# ll /usr/sbin/useradd\n    -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd \n ```\n```\n   * 2)SGID\n        既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用\n            文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s\n            显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的\n            所属组。\n\n ```language\n    #chmod g+s  /sgiddir/\n    #chmod g-s  /sgiddir/\n    [root@localhost test]# chmod g+s ./sgiddir/\n    [root@localhost test]# ll  -d ./sgiddir/\n    drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/\n```\n\n  * 3)skicty bit (防删除位)\n      1.只能设置在目录上\n      2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的\n        文件，但对root用户无效。\n      3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty\n      bit 权限用小t显示，反之用T显示。\n      4.不能移动，不能改名，可拷贝，可链接。\n      #chmod o+t /skdir\n      #chmod o-t /skdir\n\n       ```bash\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/\n      [root@localhost test]# chmod o+t skdir/\n      [root@localhost test]# ll -d skdir/\n      drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ \n\n      #chmod 7755 /sdir\n      #chmod rwsr-sr-t /sdir //数字转换成字母\n      ```","slug":"文件权限","published":1,"updated":"2018-12-18T08:00:18.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju0k3eur002oyes6ysbseprs","content":"<h4 id=\"1-文件权限\"><a href=\"#1-文件权限\" class=\"headerlink\" title=\"1.文件权限\"></a>1.文件权限</h4><h5 id=\"1-普通权限-r-w-x-设置一类用户对某个文件或目录的rwx权限\"><a href=\"#1-普通权限-r-w-x-设置一类用户对某个文件或目录的rwx权限\" class=\"headerlink\" title=\"1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\"></a>1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)</h5><h6 id=\"1-1-查看文件的权限-ll-etc-passwd\"><a href=\"#1-1-查看文件的权限-ll-etc-passwd\" class=\"headerlink\" title=\"1.1)查看文件的权限 #ll  /etc/passwd\"></a>1.1)查看文件的权限 #ll  /etc/passwd</h6><h6 id=\"1-2-查看目录的权限-ll-d-root\"><a href=\"#1-2-查看目录的权限-ll-d-root\" class=\"headerlink\" title=\"1.2)查看目录的权限 #ll -d /root\"></a>1.2)查看目录的权限 #ll -d /root</h6>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll /etc/passwd</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd</span><br><span class=\"line\">权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名</span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll -d /root</span></span><br><span class=\"line\">drwxr-x--- 36 root root 4096 May 11 09:51 /root</span><br></pre></td></tr></table></figure>\n<p>   权限列表 由10个字符组成 drwxr-x—<br>   第一个字符:表示类型<br>   -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备<br>   后9个字符每3个字符为一组，共3组<br>   第一组:文件或目录的所有者权限<br>   第二组:文件或目录的所属组权限<br>   第三组:文件或目录的其他用户的权限</p>\n<p>   权限      字母    数字           文件                    目录<br>    读        r       4          cat head tail more less    ls<br>    写        w       2          vim                        touch rmdir rm mkdir<br>    执行      x       1          运行文件                   cd<br>    无        -       0          不能做任何操作             不能做任何操作</p>\n<p>   用户类型     表示<br>    所有者      u          这个用户创建的这个文件或文件夹<br>    所属组      g          用户创建的这个文件或文件夹时所在的用户组<br>    其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里<br>    所有用户    a          以上三类用户的总称</p>\n<h6 id=\"1-3-修改文件或文件夹权限\"><a href=\"#1-3-修改文件或文件夹权限\" class=\"headerlink\" title=\"1.3)修改文件或文件夹权限\"></a>1.3)修改文件或文件夹权限</h6>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chmod [选项] 权限列表   文件名/目录名</span></span><br><span class=\"line\">   -R:给文件夹设置递归权限</span><br></pre></td></tr></table></figure>\n<pre><code>权限列表：\n 数字: #chmod 700 /adir  //修改adir目录权限为700\n       #chmod drwx------ /adir\n 字母: #chmod u=rwx,g=rx,o=r /a.txt\n\n 赋值符号:\n    =:指定用户拥有这样的权限\n    -:在源权限的基础上去掉指定的权限\n    +:在源权限的基础上加上指定的权限\n   注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n      b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n      c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n      d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n      e)普通权限对特权用户无效\n-rwxr--r--\nu    rwx   7\ng    r--   4\no    r--   4\n</code></pre>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># chmod u=rwx,g=rx,o=r test.txt </span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll</span></span><br><span class=\"line\">total 24</span><br><span class=\"line\">-rw-r--r-- 1 root root   55 May  5 00:14 test1.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root  191 May  5 00:04 test2.txt</span><br><span class=\"line\">-rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-文件访问控制列表-facl\"><a href=\"#2-文件访问控制列表-facl\" class=\"headerlink\" title=\"2)文件访问控制列表 facl\"></a>2)文件访问控制列表 facl</h5><pre><code>单独设置某个用户或用户组对某个文件或目录的rwx权限\n对单一用户或用户组单独设置对某个目录或文件的rwx权限\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名</span></span><br><span class=\"line\">  -m:设置acl权限</span><br><span class=\"line\">  -x:去掉acl权限</span><br><span class=\"line\">  -b:去掉目录或文件的所有acl权限</span><br><span class=\"line\">  -R:递归设置目录 acl权限</span><br><span class=\"line\">  -d:指定目录默认的acl权限</span><br><span class=\"line\">  -k:去掉目录默认的acl权限</span><br><span class=\"line\">  u:用户</span><br><span class=\"line\">  g:用户组</span><br><span class=\"line\"> <span class=\"comment\">#setfacl -m u:s5:rwx /public1</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d ./public1</span></span><br><span class=\"line\"> d---rwx---+ 2 root root 4096 May 11 14:10 ./public1</span><br><span class=\"line\"> +:代表设置了facl权限</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#getfacl 文件名/目录名   //查看facl权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---     //普通权限</span><br><span class=\"line\"> user:s5:rwx   //普通用户设置的权限</span><br><span class=\"line\"> group::---    //所属组权限</span><br><span class=\"line\"> mask::rwx     //默认acl权限</span><br><span class=\"line\"> other::---    //这个目录的其他用户权限</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#setfacl -m  g:stu1:rwx ./public1</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"><span class=\"comment\">#file: public1</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::---</span><br><span class=\"line\">user:s5:rwx</span><br><span class=\"line\">group::---</span><br><span class=\"line\">group:stu1:r-x</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -x u:s5 ./public1  //删除用户s5的权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> group:stu1:r-x</span><br><span class=\"line\"> group:stu2:r--</span><br><span class=\"line\"> mask::r-x</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -x g:stu2 ./public1  //删除用户组stu2权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\"># file: public1</span></span><br><span class=\"line\"> <span class=\"comment\"># owner: root</span></span><br><span class=\"line\"> <span class=\"comment\"># group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> group:stu1:r-x</span><br><span class=\"line\"> mask::r-x</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -b ./public1  //去掉所有权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"><span class=\"comment\">#file: public1</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::---</span><br><span class=\"line\">group::---</span><br><span class=\"line\">other::---</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\">#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> user:s5:rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> mask::rwx</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#file: pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"> default:user::rwx</span><br><span class=\"line\"> default:user:s7:rwx</span><br><span class=\"line\"> default:group::---</span><br><span class=\"line\"> default:mask::rwx</span><br><span class=\"line\"> default:other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限</span></span><br><span class=\"line\"> setfacl: d:u:s7: No such file or directory</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#file: pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> other::---</span><br></pre></td></tr></table></figure>\n</code></pre><p> mask<br>   root : 755 644<br>   user : 775 664<br>   mask文件: /etc/profile</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#setfacl -m m:rx /pub3 //设置acl的mask码</span></span><br><span class=\"line\">facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   </span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -m m:r pub4</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl pub4</span></span><br><span class=\"line\"><span class=\"comment\">#file: pub4</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:s1:rwx                     <span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">group::r-x                      <span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">mask::r--</span><br><span class=\"line\">other::r-x</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-特殊权限-SUID-SGID-SKICTY-BIT\"><a href=\"#3-特殊权限-SUID-SGID-SKICTY-BIT\" class=\"headerlink\" title=\"3)特殊权限 SUID SGID SKICTY BIT\"></a>3)特殊权限 SUID SGID SKICTY BIT</h5><pre><code>suid      : s  4\n  1)仅设置在二进制文件上(命令)\n  2)用户要对文件本身有执行权限\n  3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n    会拥有文件所有者的权限\n  4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n    SUID设置后是占用所有者的执行位显示\nsgid      : s  2\nskity bit : t  1\n让用户在执行文件时拥有文件所有者的权限\n</code></pre>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># umask</span></span><br><span class=\"line\"> 0022      //第一位为特殊权限位</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d /tmp</span></span><br><span class=\"line\"> drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll /usr/bin/passwd</span></span><br><span class=\"line\"> -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##### 4)特殊权限位</span></span><br><span class=\"line\"> * 1)SUID</span><br><span class=\"line\">  ```language</span><br><span class=\"line\">   <span class=\"comment\">#chmod 4751 /usr/sbin/useradd</span></span><br><span class=\"line\">   <span class=\"comment\">#chmod u+s /usr/sbin/useradd</span></span><br><span class=\"line\">   [root@localhost ~]<span class=\"comment\"># chmod 4751 /usr/sbin/useradd</span></span><br><span class=\"line\">   [root@localhost ~]<span class=\"comment\"># ll /usr/sbin/useradd</span></span><br><span class=\"line\">   -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd</span><br><span class=\"line\">   <span class=\"comment\">#find / -perm 4755   //查找系统内加了SUID权限的二进制文件有那些</span></span><br><span class=\"line\">  <span class=\"comment\">#chmod 751 /usr/sbin/useradd  //撤销特殊权限位</span></span><br><span class=\"line\">  <span class=\"comment\">#chmod u-s /usr/sbin/useradd</span></span><br><span class=\"line\">  [root@localhost ~]<span class=\"comment\"># chmod 751 /usr/sbin/useradd </span></span><br><span class=\"line\">  [root@localhost ~]<span class=\"comment\"># ll /usr/sbin/useradd</span></span><br><span class=\"line\">  -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  * 2)SGID</span><br><span class=\"line\">       既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用</span><br><span class=\"line\">           文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s</span><br><span class=\"line\">           显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的</span><br><span class=\"line\">           所属组。</span><br><span class=\"line\"></span><br><span class=\"line\">```language</span><br><span class=\"line\">   #chmod g+s  /sgiddir/</span><br><span class=\"line\">   #chmod g-s  /sgiddir/</span><br><span class=\"line\">   [root@localhost test]# chmod g+s ./sgiddir/</span><br><span class=\"line\">   [root@localhost test]# ll  -d ./sgiddir/</span><br><span class=\"line\">   drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>3)skicty bit (防删除位)<br>  1.只能设置在目录上<br>  2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的</p>\n<pre><code>文件，但对root用户无效。\n</code></pre><p>  3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty<br>  bit 权限用小t显示，反之用T显示。<br>  4.不能移动，不能改名，可拷贝，可链接。<br>  #chmod o+t /skdir<br>  #chmod o-t /skdir</p>\n   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d skdir/</span></span><br><span class=\"line\">drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/</span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># chmod o+t skdir/</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d skdir/</span></span><br><span class=\"line\">drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#chmod 7755 /sdir</span></span><br><span class=\"line\"><span class=\"comment\">#chmod rwsr-sr-t /sdir //数字转换成字母</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-文件权限\"><a href=\"#1-文件权限\" class=\"headerlink\" title=\"1.文件权限\"></a>1.文件权限</h4><h5 id=\"1-普通权限-r-w-x-设置一类用户对某个文件或目录的rwx权限\"><a href=\"#1-普通权限-r-w-x-设置一类用户对某个文件或目录的rwx权限\" class=\"headerlink\" title=\"1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)\"></a>1)普通权限 r w x  (设置一类用户对某个文件或目录的rwx权限)</h5><h6 id=\"1-1-查看文件的权限-ll-etc-passwd\"><a href=\"#1-1-查看文件的权限-ll-etc-passwd\" class=\"headerlink\" title=\"1.1)查看文件的权限 #ll  /etc/passwd\"></a>1.1)查看文件的权限 #ll  /etc/passwd</h6><h6 id=\"1-2-查看目录的权限-ll-d-root\"><a href=\"#1-2-查看目录的权限-ll-d-root\" class=\"headerlink\" title=\"1.2)查看目录的权限 #ll -d /root\"></a>1.2)查看目录的权限 #ll -d /root</h6>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll /etc/passwd</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 2421 May 10 22:37 /etc/passwd</span><br><span class=\"line\">权限位:链接数:所有者:所属组:文件大小:日期:时间:文件名/目录名</span><br><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ll -d /root</span></span><br><span class=\"line\">drwxr-x--- 36 root root 4096 May 11 09:51 /root</span><br></pre></td></tr></table></figure>\n<p>   权限列表 由10个字符组成 drwxr-x—<br>   第一个字符:表示类型<br>   -:文件 d:目录 b:块设备 p:管道 s:套接字 l:链接 c:字符设备<br>   后9个字符每3个字符为一组，共3组<br>   第一组:文件或目录的所有者权限<br>   第二组:文件或目录的所属组权限<br>   第三组:文件或目录的其他用户的权限</p>\n<p>   权限      字母    数字           文件                    目录<br>    读        r       4          cat head tail more less    ls<br>    写        w       2          vim                        touch rmdir rm mkdir<br>    执行      x       1          运行文件                   cd<br>    无        -       0          不能做任何操作             不能做任何操作</p>\n<p>   用户类型     表示<br>    所有者      u          这个用户创建的这个文件或文件夹<br>    所属组      g          用户创建的这个文件或文件夹时所在的用户组<br>    其他用户    o          这个用户既不是文件或文件夹的所有者，也不在所属组里<br>    所有用户    a          以上三类用户的总称</p>\n<h6 id=\"1-3-修改文件或文件夹权限\"><a href=\"#1-3-修改文件或文件夹权限\" class=\"headerlink\" title=\"1.3)修改文件或文件夹权限\"></a>1.3)修改文件或文件夹权限</h6>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chmod [选项] 权限列表   文件名/目录名</span></span><br><span class=\"line\">   -R:给文件夹设置递归权限</span><br></pre></td></tr></table></figure>\n<pre><code>权限列表：\n 数字: #chmod 700 /adir  //修改adir目录权限为700\n       #chmod drwx------ /adir\n 字母: #chmod u=rwx,g=rx,o=r /a.txt\n\n 赋值符号:\n    =:指定用户拥有这样的权限\n    -:在源权限的基础上去掉指定的权限\n    +:在源权限的基础上加上指定的权限\n   注:a) 当把目录设置了写权限，这个目录下的文件可以进行删除操作。\n      b) 当编辑别的用户的文件时，这个文件就所有者和所属组变成自己的所有者和所属组\n      c) 当删除文件时，必须知道文件的确切文件名才可以删除。\n      d) 当删除当前目录时，看当前目录的父目录是否有写权限，如果没有则不能删除。\n      e)普通权限对特权用户无效\n-rwxr--r--\nu    rwx   7\ng    r--   4\no    r--   4\n</code></pre>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># chmod u=rwx,g=rx,o=r test.txt </span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll</span></span><br><span class=\"line\">total 24</span><br><span class=\"line\">-rw-r--r-- 1 root root   55 May  5 00:14 test1.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root  191 May  5 00:04 test2.txt</span><br><span class=\"line\">-rwxr-xr-- 1 root root 2051 May  4 23:46 test.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-文件访问控制列表-facl\"><a href=\"#2-文件访问控制列表-facl\" class=\"headerlink\" title=\"2)文件访问控制列表 facl\"></a>2)文件访问控制列表 facl</h5><pre><code>单独设置某个用户或用户组对某个文件或目录的rwx权限\n对单一用户或用户组单独设置对某个目录或文件的rwx权限\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">#setfacl -m 用户类型:用户名或用户组名:权限列表  文件名/目录名</span></span><br><span class=\"line\">  -m:设置acl权限</span><br><span class=\"line\">  -x:去掉acl权限</span><br><span class=\"line\">  -b:去掉目录或文件的所有acl权限</span><br><span class=\"line\">  -R:递归设置目录 acl权限</span><br><span class=\"line\">  -d:指定目录默认的acl权限</span><br><span class=\"line\">  -k:去掉目录默认的acl权限</span><br><span class=\"line\">  u:用户</span><br><span class=\"line\">  g:用户组</span><br><span class=\"line\"> <span class=\"comment\">#setfacl -m u:s5:rwx /public1</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d ./public1</span></span><br><span class=\"line\"> d---rwx---+ 2 root root 4096 May 11 14:10 ./public1</span><br><span class=\"line\"> +:代表设置了facl权限</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#getfacl 文件名/目录名   //查看facl权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---     //普通权限</span><br><span class=\"line\"> user:s5:rwx   //普通用户设置的权限</span><br><span class=\"line\"> group::---    //所属组权限</span><br><span class=\"line\"> mask::rwx     //默认acl权限</span><br><span class=\"line\"> other::---    //这个目录的其他用户权限</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#setfacl -m  g:stu1:rwx ./public1</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"><span class=\"comment\">#file: public1</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::---</span><br><span class=\"line\">user:s5:rwx</span><br><span class=\"line\">group::---</span><br><span class=\"line\">group:stu1:r-x</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -x u:s5 ./public1  //删除用户s5的权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> group:stu1:r-x</span><br><span class=\"line\"> group:stu2:r--</span><br><span class=\"line\"> mask::r-x</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -x g:stu2 ./public1  //删除用户组stu2权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\"># file: public1</span></span><br><span class=\"line\"> <span class=\"comment\"># owner: root</span></span><br><span class=\"line\"> <span class=\"comment\"># group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> group:stu1:r-x</span><br><span class=\"line\"> mask::r-x</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -b ./public1  //去掉所有权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"><span class=\"comment\">#file: public1</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::---</span><br><span class=\"line\">group::---</span><br><span class=\"line\">other::---</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\">#setfacl -R -m u:s5:rwx ./public1/ //递归设置权限</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./public1</span></span><br><span class=\"line\"> <span class=\"comment\">#file: public1</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::---</span><br><span class=\"line\"> user:s5:rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> mask::rwx</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -m d:u:s7:rwx ./pub2 //设置目录默认的acl权限</span></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#file: pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> other::---</span><br><span class=\"line\"> default:user::rwx</span><br><span class=\"line\"> default:user:s7:rwx</span><br><span class=\"line\"> default:group::---</span><br><span class=\"line\"> default:mask::rwx</span><br><span class=\"line\"> default:other::---</span><br><span class=\"line\"></span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -k d:u:s7 ./pub2 //去掉目录默认的acl权限</span></span><br><span class=\"line\"> setfacl: d:u:s7: No such file or directory</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl ./pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#file: pub2</span></span><br><span class=\"line\"> <span class=\"comment\">#owner: root</span></span><br><span class=\"line\"> <span class=\"comment\">#group: root</span></span><br><span class=\"line\"> user::rwx</span><br><span class=\"line\"> group::---</span><br><span class=\"line\"> other::---</span><br></pre></td></tr></table></figure>\n</code></pre><p> mask<br>   root : 755 644<br>   user : 775 664<br>   mask文件: /etc/profile</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#setfacl -m m:rx /pub3 //设置acl的mask码</span></span><br><span class=\"line\">facl设置mask码时，要与默认的mask码做逻辑于运算，最后的出的值才是真正的权限   </span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># setfacl -m m:r pub4</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># getfacl pub4</span></span><br><span class=\"line\"><span class=\"comment\">#file: pub4</span></span><br><span class=\"line\"><span class=\"comment\">#owner: root</span></span><br><span class=\"line\"><span class=\"comment\">#group: root</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:s1:rwx                     <span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">group::r-x                      <span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">mask::r--</span><br><span class=\"line\">other::r-x</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-特殊权限-SUID-SGID-SKICTY-BIT\"><a href=\"#3-特殊权限-SUID-SGID-SKICTY-BIT\" class=\"headerlink\" title=\"3)特殊权限 SUID SGID SKICTY BIT\"></a>3)特殊权限 SUID SGID SKICTY BIT</h5><pre><code>suid      : s  4\n  1)仅设置在二进制文件上(命令)\n  2)用户要对文件本身有执行权限\n  3)给某个二进制文件设置了suid权限后，用户在执行这个文件的时候\n    会拥有文件所有者的权限\n  4)如果文件所有者有执行权限时suid权限用s显示，反之用大S显示。\n    SUID设置后是占用所有者的执行位显示\nsgid      : s  2\nskity bit : t  1\n让用户在执行文件时拥有文件所有者的权限\n</code></pre>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># umask</span></span><br><span class=\"line\"> 0022      //第一位为特殊权限位</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d /tmp</span></span><br><span class=\"line\"> drwxrwxrwt 17 root root 4096 May 11 13:40 /tmp</span><br><span class=\"line\"> [root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll /usr/bin/passwd</span></span><br><span class=\"line\"> -rwsr-xr-x 1 root root 23420 Aug  3  2010 /usr/bin/passwd</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##### 4)特殊权限位</span></span><br><span class=\"line\"> * 1)SUID</span><br><span class=\"line\">  ```language</span><br><span class=\"line\">   <span class=\"comment\">#chmod 4751 /usr/sbin/useradd</span></span><br><span class=\"line\">   <span class=\"comment\">#chmod u+s /usr/sbin/useradd</span></span><br><span class=\"line\">   [root@localhost ~]<span class=\"comment\"># chmod 4751 /usr/sbin/useradd</span></span><br><span class=\"line\">   [root@localhost ~]<span class=\"comment\"># ll /usr/sbin/useradd</span></span><br><span class=\"line\">   -rwsr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd</span><br><span class=\"line\">   <span class=\"comment\">#find / -perm 4755   //查找系统内加了SUID权限的二进制文件有那些</span></span><br><span class=\"line\">  <span class=\"comment\">#chmod 751 /usr/sbin/useradd  //撤销特殊权限位</span></span><br><span class=\"line\">  <span class=\"comment\">#chmod u-s /usr/sbin/useradd</span></span><br><span class=\"line\">  [root@localhost ~]<span class=\"comment\"># chmod 751 /usr/sbin/useradd </span></span><br><span class=\"line\">  [root@localhost ~]<span class=\"comment\"># ll /usr/sbin/useradd</span></span><br><span class=\"line\">  -rwxr-x--x 1 root root 74608 Oct 25  2011 /usr/sbin/useradd</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  * 2)SGID</span><br><span class=\"line\">       既能设置在二进制文件上又能设置在目录上，通常被设置在目录占用</span><br><span class=\"line\">           文件所属组的执行位显示，若文件所属组有执行权限时sgid权限用s</span><br><span class=\"line\">           显示否则用S显示。会让在目录下建的子文件或子目录继承父目录的</span><br><span class=\"line\">           所属组。</span><br><span class=\"line\"></span><br><span class=\"line\">```language</span><br><span class=\"line\">   #chmod g+s  /sgiddir/</span><br><span class=\"line\">   #chmod g-s  /sgiddir/</span><br><span class=\"line\">   [root@localhost test]# chmod g+s ./sgiddir/</span><br><span class=\"line\">   [root@localhost test]# ll  -d ./sgiddir/</span><br><span class=\"line\">   drwxr-sr-x 2 root root 4096 May 12 10:50 ./sgiddir/</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>3)skicty bit (防删除位)<br>  1.只能设置在目录上<br>  2.当给目录设置了此权限后，用户只能删除自己的文件，不能删除其他人的</p>\n<pre><code>文件，但对root用户无效。\n</code></pre><p>  3.占用目录的其他用户的执行位显示，若目录的其他用户有执行权时skicty<br>  bit 权限用小t显示，反之用T显示。<br>  4.不能移动，不能改名，可拷贝，可链接。<br>  #chmod o+t /skdir<br>  #chmod o-t /skdir</p>\n   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d skdir/</span></span><br><span class=\"line\">drwxr-xr-x 2 root root 4096 May 12 10:59 skdir/</span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># chmod o+t skdir/</span></span><br><span class=\"line\">[root@localhost <span class=\"built_in\">test</span>]<span class=\"comment\"># ll -d skdir/</span></span><br><span class=\"line\">drwxr-xr-t 2 root root 4096 May 12 10:59 skdir/ </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#chmod 7755 /sdir</span></span><br><span class=\"line\"><span class=\"comment\">#chmod rwsr-sr-t /sdir //数字转换成字母</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cju0k3eso0000yes6e0s8wxm7","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3et9000fyes6vuinbdfz"},{"post_id":"cju0k3esv0002yes6qs39ozon","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3etd000lyes6s5n7jzyh"},{"post_id":"cju0k3et7000dyes603vq4jo7","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3etf000pyes659h7puyf"},{"post_id":"cju0k3et00006yes6s6lqavvi","category_id":"cju0k3et9000eyes6gnl0q4uw","_id":"cju0k3etg000syes61i74eevz"},{"post_id":"cju0k3et10007yes6h1wm2sm3","category_id":"cju0k3etd000myes6tk3ua1c1","_id":"cju0k3eti000yyes6j9940bxs"},{"post_id":"cju0k3et30008yes68x3i4eio","category_id":"cju0k3etg000tyes6ggp7icut","_id":"cju0k3etl0015yes6q9h2is5k"},{"post_id":"cju0k3eti000xyes6vkxk4sy2","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3etn001ayes6xrg9d6n9"},{"post_id":"cju0k3etk0013yes6zqm7pd0o","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eto001eyes6s45nqsrx"},{"post_id":"cju0k3et6000cyes63cpvyici","category_id":"cju0k3eti000zyes6a1hllrno","_id":"cju0k3etq001jyes6kavbvpmp"},{"post_id":"cju0k3etl0016yes64jiue1so","category_id":"cju0k3etg000tyes6ggp7icut","_id":"cju0k3etr001lyes6g3vsuvn6"},{"post_id":"cju0k3etn001byes6mp9b03wf","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3ett001pyes60v10kpud"},{"post_id":"cju0k3eta000iyes6qr3eozgr","category_id":"cju0k3etm0017yes662hdmery","_id":"cju0k3ett001ryes6temhip4p"},{"post_id":"cju0k3eto001dyes6x0ppdd5e","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3etu001vyes6aihe8jlj"},{"post_id":"cju0k3etp001iyes6ll7s4eu8","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3etv001xyes678vcb8r1"},{"post_id":"cju0k3etc000kyes6jzviy0k0","category_id":"cju0k3etm0017yes662hdmery","_id":"cju0k3etw0021yes6reod9zr0"},{"post_id":"cju0k3ete000oyes60n3xjugr","category_id":"cju0k3etg000tyes6ggp7icut","_id":"cju0k3etw0023yes6j51fejaf"},{"post_id":"cju0k3etf000ryes63zoall9a","category_id":"cju0k3etm0017yes662hdmery","_id":"cju0k3etx0026yes6jitj5rs7"},{"post_id":"cju0k3etg000vyes6iyfdtdb2","category_id":"cju0k3etm0017yes662hdmery","_id":"cju0k3ety0028yes6vbe29hlz"},{"post_id":"cju0k3etj0011yes6pqal3m2b","category_id":"cju0k3etm0017yes662hdmery","_id":"cju0k3ety002ayes653pakgsq"},{"post_id":"cju0k3eu4002byes66tjvq5ce","category_id":"cju0k3etd000myes6tk3ua1c1","_id":"cju0k3eu9002hyes6bpg63c0o"},{"post_id":"cju0k3eu6002cyes6k33qh6q1","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eua002jyes6sml02haq"},{"post_id":"cju0k3eu7002eyes60i5va12u","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eua002lyes64c6jzuee"},{"post_id":"cju0k3eu8002gyes63pyq53us","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eua002myes6rz70ahim"},{"post_id":"cju0k3euq002nyes6hdlciltt","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eus002ryes6gpmy3tab"},{"post_id":"cju0k3eur002oyes6ysbseprs","category_id":"cju0k3esx0004yes62xzktwkc","_id":"cju0k3eus002syes6974p7f2x"}],"PostTag":[{"post_id":"cju0k3eso0000yes6e0s8wxm7","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3et6000byes67ex2gn8p"},{"post_id":"cju0k3esv0002yes6qs39ozon","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eta000hyes60pm12o0a"},{"post_id":"cju0k3et7000dyes603vq4jo7","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3etc000jyes6o0lz3msd"},{"post_id":"cju0k3et00006yes6s6lqavvi","tag_id":"cju0k3et9000gyes6p3jypagn","_id":"cju0k3etf000qyes65pzeckvn"},{"post_id":"cju0k3et10007yes6h1wm2sm3","tag_id":"cju0k3ete000nyes6npjyfn7a","_id":"cju0k3eth000wyes6l2lcsorz"},{"post_id":"cju0k3et30008yes68x3i4eio","tag_id":"cju0k3etg000uyes6e2tyhnml","_id":"cju0k3etk0012yes6krbumwoy"},{"post_id":"cju0k3eti000xyes6vkxk4sy2","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3etl0014yes6ghxhyryj"},{"post_id":"cju0k3etk0013yes6zqm7pd0o","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3etn0019yes6824sapw1"},{"post_id":"cju0k3et6000cyes63cpvyici","tag_id":"cju0k3etj0010yes6wpd4frva","_id":"cju0k3eto001cyes62694avwm"},{"post_id":"cju0k3etl0016yes64jiue1so","tag_id":"cju0k3etg000uyes6e2tyhnml","_id":"cju0k3etp001hyes6oxnhhxau"},{"post_id":"cju0k3etn001byes6mp9b03wf","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3etr001kyes6frfmf7zr"},{"post_id":"cju0k3eta000iyes6qr3eozgr","tag_id":"cju0k3etm0018yes6e6ao72ck","_id":"cju0k3ett001oyes6uk2gz6ev"},{"post_id":"cju0k3eto001dyes6x0ppdd5e","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3ett001qyes6jcw7n43g"},{"post_id":"cju0k3etp001iyes6ll7s4eu8","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3etu001uyes6ssi3go95"},{"post_id":"cju0k3etc000kyes6jzviy0k0","tag_id":"cju0k3etm0018yes6e6ao72ck","_id":"cju0k3etu001wyes6hlhl244k"},{"post_id":"cju0k3ete000oyes60n3xjugr","tag_id":"cju0k3etg000uyes6e2tyhnml","_id":"cju0k3etw0020yes6bgrc4lir"},{"post_id":"cju0k3etf000ryes63zoall9a","tag_id":"cju0k3etm0018yes6e6ao72ck","_id":"cju0k3etw0022yes6mue5nsvq"},{"post_id":"cju0k3etg000vyes6iyfdtdb2","tag_id":"cju0k3etm0018yes6e6ao72ck","_id":"cju0k3etx0027yes6sy23mw14"},{"post_id":"cju0k3etj0011yes6pqal3m2b","tag_id":"cju0k3etm0018yes6e6ao72ck","_id":"cju0k3ety0029yes69ijth4dt"},{"post_id":"cju0k3eu4002byes66tjvq5ce","tag_id":"cju0k3ete000nyes6npjyfn7a","_id":"cju0k3eu7002dyes6vppo9k3l"},{"post_id":"cju0k3eu6002cyes6k33qh6q1","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eu8002fyes6afugmjuu"},{"post_id":"cju0k3eu7002eyes60i5va12u","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eu9002iyes6avmlf5s0"},{"post_id":"cju0k3eu8002gyes63pyq53us","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eua002kyes68ao7pg9v"},{"post_id":"cju0k3euq002nyes6hdlciltt","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eur002pyes67cdia51v"},{"post_id":"cju0k3eur002oyes6ysbseprs","tag_id":"cju0k3esz0005yes61t6vqfk1","_id":"cju0k3eus002qyes6ibudykaa"}],"Tag":[{"name":"linux","_id":"cju0k3esz0005yes61t6vqfk1"},{"name":"mongodb","_id":"cju0k3et9000gyes6p3jypagn"},{"name":"php","_id":"cju0k3ete000nyes6npjyfn7a"},{"name":"服务器","_id":"cju0k3etg000uyes6e2tyhnml"},{"name":"工具","_id":"cju0k3etj0010yes6wpd4frva"},{"name":"go","_id":"cju0k3etm0018yes6e6ao72ck"}]}}